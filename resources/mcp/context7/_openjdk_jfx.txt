"java","TITLE: JavaFX Scene Graph API Overview
DESCRIPTION: This section outlines key JavaFX packages and classes relevant to the scene graph and UI components, providing a high-level overview of the API structure covered in the guide. It lists core classes like Node, Parent, Scene, and specific components like ImageView and PopupWindow.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_1

LANGUAGE: APIDOC
CODE:
```
javafx.stage
  PopupWindow
javafx.scene
  Group
  Node
  Parent
  Scene
javafx.scene.image
  ImageView
javafx.scene.layout
```

----------------------------------------

TITLE: FXML Map Object Instantiation
DESCRIPTION: Demonstrates how FXML handles types that implement `java.util.Map` directly. The `get()` and `put()` methods are invoked to set key/value pairs, as shown with a `HashMap` example.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_3

LANGUAGE: FXML
CODE:
```
<HashMap foo=""123"" bar=""456""/>
```

----------------------------------------

TITLE: Page Sharing Pool API Overview
DESCRIPTION: This section outlines the key interfaces and functionalities provided by and expected from the Page Sharing Pool and its participants. It details the queries participants must answer, how deltas are reported, and the primary APIs exposed by the pool for memory reclamation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/Documentation.md#_snippet_2

LANGUAGE: APIDOC
CODE:
```
Page Sharing Participant Queries:
  - use_epoch(): Get the approximate epoch of the oldest free page.
  - is_eligible(): Check if the participant has any free pages. (Can return true even if no pages, but must clear after bounded calls to take_least_recently_used if incorrect).
  - pas_page_sharing_participant_take_least_recently_used(): Take the least recently used empty page(s). (Allowed to return no pages, or multiple pages via deferred decommit log).

Page Sharing Participant Delta Reporting:
  Participants notify the pool when a 'delta' occurs:
  - Found a new free page and previously thought it had none.
  - Discovered that the oldest free page is older than previously thought.

Page Sharing Pool Exposed APIs:
  - Take a set number of bytes:
    - Purpose: Reclaims a specified amount of memory.
    - Behavior: If try_lock fails, records the amount to take on the next call.
  - pas_physical_page_sharing_pool_scavenge(max_epoch: int):
    - Purpose: Takes all free pages that are the same age or older than 'max_epoch'.
    - Behavior: Blocks until done, reloops on try_lock failure (avoids spinning).
```

----------------------------------------

TITLE: Page Sharing Pool Participant API for Directory Participants
DESCRIPTION: Defines the interface and expected behaviors for directory participants interacting with the page sharing pool. This API governs how directories report eligibility, identify empty pages, and manage page decommitment.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/Documentation.md#_snippet_4

LANGUAGE: APIDOC
CODE:
```
Interface: PageSharingPoolParticipantAPI
  Description: API for directory participants to interact with the page sharing pool.

  Methods/Properties:
    isEligible(): boolean
      Description: Reports if the directory participant is eligible for page sharing.
      Condition: True when 'last-empty-plus-one' is nonzero.

    reportLastEmptyPageUseEpoch(): epoch_time
      Description: Reports the use epoch of the last empty page.
      Details: Searches the bitvector for a set empty bit if 'last-empty-plus-one' lags.

    takeLeastRecentlyUsedPage(): Page
      Description: Takes the least recently used empty page from the directory.
      Process: Searches backwards from 'last-empty-plus-one' and updates it using 'pas_versioned_field' lock-free tricks.
```

----------------------------------------

TITLE: SkinBase: Add API for Invalidation/ListChange Listeners
DESCRIPTION: New API has been added to `SkinBase` to allow registration and unregistration of invalidation and list change listeners, providing more control over UI updates.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
SkinBase: add api to un-/register invalidation-/listChange listeners
```

----------------------------------------

TITLE: JavaFX Controller initialize() Method API
DESCRIPTION: This API documentation describes the initialize() method, which is called on a controller once its associated FXML document has been completely loaded. This method is crucial for performing post-processing tasks, accessing resources, and resolving relative paths within the document. It allows for programmatic setup after UI elements are instantiated.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_48

LANGUAGE: APIDOC
CODE:
```
public void initialize();
```

----------------------------------------

TITLE: JavaScript Implementation of Intersection Observer
DESCRIPTION: Provides the JavaScript code to set up and use the Intersection Observer API. It includes a callback function to update the display with the intersection ratio, defines observer options, and initializes the observer to monitor a specific target element within its root container.
SOURCE: https://github.com/openjdk/jfx/blob/master/tests/system/src/test/resources/test/javafx/scene/web/testIObserver.html#_snippet_1

LANGUAGE: JavaScript
CODE:
```
function callback(entries) { document.querySelector('#output pre').innerText = entries[0].intersectionRatio; } let options = { root: document.querySelector('#parent') }; testIO = function() { let observer = new IntersectionObserver(callback, options); observer.observe(document.querySelector('#target')); }
```

----------------------------------------

TITLE: JavaFX Printing: API Support for Print to File
DESCRIPTION: The JavaFX printing API has been enhanced to allow specifying 'Print to File' as an output option, enabling programmatic control over print destinations.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md#_snippet_2

LANGUAGE: APIDOC
CODE:
```
javafx printing: Support Specifying Print to File in the API
```

----------------------------------------

TITLE: JavaFX RichTextArea Control API
DESCRIPTION: Documentation for the JavaFX `RichTextArea` control, including its style class, available CSS properties, and pseudo-classes. It inherits properties from `Control`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_180

LANGUAGE: APIDOC
CODE:
```
RichTextArea:
  Style Class: rich-text-area
  Inherits properties from: Control
  Inherits pseudo-classes from: Control

  Available CSS Properties:
    -fx-caret-blink-period:
      Values: <duration>
      Default: 1000 ms
      Comments: Determines the caret blink period.
    -fx-content-padding:
      Values: <size> | <size> <size> <size> <size>
      Default: 0 0 0 0
      Comments: Amount of padding in the content area.
    -fx-display-caret:
      Values: <boolean>
      Default: true
      Comments: Determines whether the caret is displayed.
    -fx-highlight-current-paragraph:
      Values: <boolean>
      Default: false
      Comments: Determines whether the current paragraph is highlighted.
    -fx-use-content-height:
      Values: <boolean>
      Default: false
      Comments: Determines whether the preferred height is the same as the content height.
    -fx-use-content-width:
      Values: <boolean>
      Default: false
      Comments: Determines whether the preferred width is the same as the content width.
    -fx-wrap-text:
      Values: <boolean>
      Default: false
      Comments: Determines whether text should be wrapped.

  Substructure:
    main-pane: Pane
    vflow: Pane
    content: Pane
    caret-line: Path
    selection-highlight: Path
    flow: Pane
    caret: Path
    left-side: Pane
    right-side: Pane
    scroll-bar:vertical: ScrollBar
    scroll-bar:horizontal: ScrollBar
```

----------------------------------------

TITLE: Hyperlink Control API Documentation
DESCRIPTION: Documents the Hyperlink control, its inherited properties from ButtonBase, available CSS properties like -fx-cursor, and pseudo-classes including 'visited'. It also details its substructure, which includes a Label.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_124

LANGUAGE: APIDOC
CODE:
```
Hyperlink:
  Style class: hyperlink
  Inherits properties from: ButtonBase
  CSS Properties:
    -fx-cursor:
      Values: [ null | crosshair | default | hand | move | e-resize | h-resize | ne-resize | nw-resize | n-resize | se-resize | sw-resize | s-resize | w-resize | v-resize | text | wait ] | <url>
      Default: hand
      Comments: inherits
  CSS Pseudo-classes:
    visited: applies when the visited variable is true
    Also has all pseudo-classes of ButtonBase
  Substructure:
    label: Label
```

----------------------------------------

TITLE: APIDOC: PieChart Style Classes and CSS Properties
DESCRIPTION: Details the CSS style classes for data slices, label lines, and labels in a JavaFX PieChart, including properties for clockwise drawing, label visibility, and start angle.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_175

LANGUAGE: APIDOC
CODE:
```
Available Style Classes:
  ""chart-pie data<i> default-color<j>""
    Comments: Where <i> is the index of the data and <j> is the series’ color index. If the data value is negative, the ""negative"" style‑class is added; e.g., `.negative.chart-pie`.
    Properties: [Node](#node)
  ""chart-pie-label-line;""
    Comments: 
    Properties: [Path](#path)
  ""chart-pie-label;""
    Comments: 
    Properties: [Text](#path)
  ""pie-legend-symbol <_i–th_ data item’s style‑class>""
    Comments: Each item in the legend has the style‑class ""pie-legend-symbol"" plus the style‑class of the corresponding data item
    Properties: LegendItem
Available CSS Properties:
  -fx-clockwise:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: 
  -fx-pie-label-visible:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: 
  -fx-label-line-length:
    Values: [<size>](#typesize)
    Default: 20
    Comments: 
  -fx-start-angle:
    Values: [<number>](#typenumber)
    Default: 0
    Comments: 
Inherits: [Chart](#chart) properties
```

----------------------------------------

TITLE: HTMLEditor Control API Documentation
DESCRIPTION: Documents the HTMLEditor control, its inherited properties from Control, and its complex substructure including grid layout, top and bottom toolbars with various buttons, and an embedded WebView for content display.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_123

LANGUAGE: APIDOC
CODE:
```
HTMLEditor:
  Style class: html-editor
  Inherits properties from: Control
  Substructure:
    grid: GridPane (contains WebView)
      top-toolbar: ToolBar
        html-editor-cut: ToggleButton
        html-editor-copy: ToggleButton
        html-editor-paste: ToggleButton
        html-editor-align-left: ToggleButton
        html-editor-align-right: ToggleButton
        html-editor-align-center: ToggleButton
        html-editor-align-justify: ToggleButton
        html-editor-outdent: ToggleButton
        html-editor-indent: ToggleButton
        html-editor-bullets: ToggleButton
        html-editor-numbers: ToggleButton
      web-view: WebView
      bottom-toolbar: ToolBar
        format-menu-button: ComboBox
        font-family-menu-button: ComboBox
        font-size-menu-button: ComboBox
        html-editor-bold: ToggleButton
        html-editor-italic: ToggleButton
        html-editor-underline: ToggleButton
        html-editor-strike: ToggleButton
        html-editor-hr: ToggleButton
        html-editor-foreground: ColorPicker
        html-editor-background: ColorPicker
```

----------------------------------------

TITLE: API to Query CAPS LOCK and NUM LOCK States
DESCRIPTION: New API is needed to query the current states of the CAPS LOCK and NUM LOCK keys, providing more granular control over input handling.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md#_snippet_8

LANGUAGE: APIDOC
CODE:
```
Need API to query states of CAPS LOCK and NUM LOCK keys
```

----------------------------------------

TITLE: Example of FXML Content Inclusion with VBox and Button
DESCRIPTION: Illustrates a complete example of using <fx:include> to compose a UI. A VBox includes 'my_button.fxml', which defines a Button. This shows how modular FXML files can be combined to build a scene graph, demonstrating the separation of concerns.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_10

LANGUAGE: FXML
CODE:
```
<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>
<VBox xmlns:fx=""http://javafx.com/fxml"">
    <children>
        <fx:include source=""my_button.fxml""/>
    </children>
</VBox>
```

LANGUAGE: FXML
CODE:
```
<?import javafx.scene.control.*?>
<Button text=""My Button""/>
```

----------------------------------------

TITLE: JavaFX CodeArea Control API
DESCRIPTION: Documentation for the JavaFX `CodeArea` control, which extends `RichTextArea`. It defines additional CSS properties for font, line spacing, and tab size.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_181

LANGUAGE: APIDOC
CODE:
```
CodeArea:
  Style Class: code-area
  Inherits properties from: RichTextArea
  Inherits pseudo-classes from: RichTextArea

  Available CSS Properties:
    -fx-font:
      Values: <font>
      Default: Monospaced 12px
      Comments: Determines the font to use for text.
    -fx-line-spacing:
      Values: <number>
      Default: 0
      Comments: """"
    -fx-tab-size:
      Values: <integer>
      Default: 8
      Comments: """"
```

----------------------------------------

TITLE: JavaFX CSS Stylesheet Precedence and API Usage
DESCRIPTION: This section describes the various APIs and mechanisms for applying CSS styles in JavaFX, detailing their hierarchy and precedence. It covers how stylesheets are loaded from Scene, Parent, and SubScene objects, the use of inline styles, and the impact of user agent stylesheets.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_3

LANGUAGE: APIDOC
CODE:
```
Scene.getStylesheets()
  Description: Retrieves the list of stylesheets associated with this Scene. Stylesheets loaded here take precedence over user agent stylesheets.

Node.setStyle(String value)
  Description: Sets an inline style on the Node. Inline styles have the highest precedence over all other style sources.

Parent.getStylesheets()
  Description: Retrieves the list of stylesheets associated with this Parent. Allows for distinct styles within a scene-graph branch. Stylesheets from Parent instances are considered more specific than Scene stylesheets.

Scene.getUserAgentStylesheet()
  Description: Sets a user-agent stylesheet for the Scene, overriding the platform default. User-agent styles have lower priority than values set from code or Scene/Parent stylesheets.

SubScene.getUserAgentStylesheet()
  Description: Sets a user-agent stylesheet for the SubScene, overriding platform default or Scene's user-agent stylesheet. Styles from Scene/Parent stylesheets do not affect SubScene unless its user-agent stylesheet is explicitly set.

Code-set Property Example:
  rectangle.setFill(Color.YELLOW)
  Description: Example of setting a property from code. Values set from code have higher priority than user agent stylesheets but lower than Scene/Parent stylesheets or inline styles.
```

LANGUAGE: APIDOC
CODE:
```
JavaFX Class to CSS Style-Class Naming Convention:
  Description: Convert camel case JavaFX class names to lower case, hyphen-separated CSS style-class names.
  Example: JavaFX 'ToggleButton' becomes CSS '.toggle-button'

JavaFX Variable to CSS Property Naming Convention:
  Description: Convert camel case JavaFX variable names to lower case, hyphen-separated CSS property names, prefixed with '-fx-'.
  Example: JavaFX 'blendMode' becomes CSS '-fx-blend-mode'

Public API Package:
  javafx.css
  Description: Package providing public API for developers to create styleable properties and manage pseudo-class state in JavaFX 8 and later versions.
```

----------------------------------------

TITLE: SourceBuffer Class API Documentation
DESCRIPTION: Documentation for the SourceBuffer class, which accepts buffers of initialization and media segments. It parses these segments into media tracks and samples, caches them, and enqueues them into platform-specific decoders.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediasource/README.md#_snippet_1

LANGUAGE: APIDOC
CODE:
```
Class: SourceBuffer
  Purpose: Accepts initialization and media segments, parses them into tracks and samples, and caches them.
  Files: SourceBuffer.idl, SourceBuffer.h, SourceBuffer.cpp
  Methods:
    appendBuffer(data: BufferSource) - Appends segments to the SourceBuffer.
  Properties:
    updating: boolean (internal flag) - Indicates if an append operation is in progress.
    buffered: TimeRanges - Visible results of appended segments.
    audioTracks: AudioTrackList - List of audio tracks.
    videoTracks: VideoTrackList - List of video tracks.
    textTracks: TextTrackList - List of text tracks.
  Events:
    ""updatestart"" - Fired when appendBuffer() begins.
    ""updateend"" - Fired when appendBuffer() completes.
  Internal Components:
    SourceBufferPrivate - Handles parsing and enqueuing samples.
    SampleMap - Primary storage mechanism for cached samples, ordering by DecodeTime and PresentationTime.
```

----------------------------------------

TITLE: JavaFX CSS image-pattern Examples
DESCRIPTION: Provides examples of using the image-pattern function in JavaFX CSS. Demonstrates applying an image as a fill, and specifying anchor rectangle dimensions using both percentage and absolute pixel values, with and without the proportional flag.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_38

LANGUAGE: JavaFX CSS
CODE:
```
image-pattern(""images/Duke.png"")
```

LANGUAGE: JavaFX CSS
CODE:
```
image-pattern(""images/Duke.png"", 20%, 20%, 80%, 80%)
```

LANGUAGE: JavaFX CSS
CODE:
```
image-pattern(""images/Duke.png"", 20%, 20%, 80%, 80%, true)
```

LANGUAGE: JavaFX CSS
CODE:
```
image-pattern(""images/Duke.png"", 20, 20, 80, 80, false)
```

----------------------------------------

TITLE: Illustrate RGB and RGBA Color Opacity in JavaFX CSS
DESCRIPTION: Provides CSS examples showcasing the use of RGB and RGBA functions to define colors, demonstrating both integer and percentage value ranges and explicit opacity settings.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_47

LANGUAGE: CSS
CODE:
```
.label { -fx-text-fill: rgb(255,0,0) } /* integer range 0 — 255*/
.label { -fx-text-fill: rgba(255,0,0,1) /* the same, with explicit opacity of 1 */
.label { -fx-text-fill: rgb(100%,0%,0%) } /* float range 0.0% — 100.0% */
.label { -fx-text-fill: rgba(100%,0%,0%,1) } /* the same, with explicit opacity of 1 */
```

----------------------------------------

TITLE: JavaFX CSS linear-gradient Examples
DESCRIPTION: Illustrates various ways to define linear gradients using JavaFX CSS. Examples include simple direction-based gradients, explicit percentage-based point definitions, and complex multi-color gradients with pixel-based point definitions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_32

LANGUAGE: JavaFX CSS
CODE:
```
linear-gradient(to bottom right, red, black)
```

LANGUAGE: JavaFX CSS
CODE:
```
linear-gradient(from 0% 0% to 100% 100%, red 0%, black 100%)
```

LANGUAGE: JavaFX CSS
CODE:
```
linear-gradient(from 0px 0px to 0px 50px, gray, darkgray 50%, dimgray 99%, white)
```

----------------------------------------

TITLE: ComboBoxBase Control API Documentation
DESCRIPTION: Documents the ComboBoxBase control, its substructure, and associated CSS pseudo-classes. It inherits properties from Control and defines elements for both editable and non-editable combo box functionalities.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_119

LANGUAGE: APIDOC
CODE:
```
ComboBoxBase:
  Style class: combo-box-base
  Inherits properties from: Control
  Substructure:
    list-cell: a ListCell instance used to show the selection in the button area of a non-editable ComboBox
    text-input: a TextField instance used to show the selection and allow input in the button area of an editable ComboBox
    combo-box-popup: a PopupControl that is displayed when the button is pressed
      list-view: a ListView
        list-cell: a ListCell
    arrow-button: a StackPane
      arrow: a StackPane
  CSS Pseudo-classes:
    editable: applies when the editable variable is true
    showing: applies when the showing variable is true
    armed: applies when the armed variable is true
```

----------------------------------------

TITLE: JavaFX CSS Parser Error Detection API
DESCRIPTION: Describes the API mechanism for detecting syntax errors in JavaFX CSS. Applications can add a listener to the errors property of javafx.css.CssParser to receive warning messages.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_12

LANGUAGE: APIDOC
CODE:
```
Class: javafx.css.CssParser
  Properties:
    errors: ObservableList<CssError>
      Description: A list of errors encountered by the CSS parser. Applications can add a listener to this property to detect and handle parsing errors.
```

----------------------------------------

TITLE: APIDOC: Legend Style Classes and Substructure
DESCRIPTION: Describes the CSS style class and substructure for the JavaFX Chart Legend component.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_172

LANGUAGE: APIDOC
CODE:
```
Style class: chart-legend
Inherits: [Region](#region) properties
Substructure:
  chart-legend-item: Label
  chart-legend-item-symbol: Node (the Label's graphic)
```

----------------------------------------

TITLE: JavaFX CSS radial-gradient Examples
DESCRIPTION: Provides examples of defining radial gradients in JavaFX CSS. Demonstrates simple radial gradients with only radius and color stops, as well as more complex gradients incorporating focus angle, focus distance, custom center points, and reflection.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_35

LANGUAGE: JavaFX CSS
CODE:
```
radial-gradient(radius 100%, red, darkgray, black)
```

LANGUAGE: JavaFX CSS
CODE:
```
radial-gradient(focus-angle 45deg, focus-distance 20%, center 25% 25%, radius 50%, reflect, gray, darkgray 75%, dimgray)
```

----------------------------------------

TITLE: CSS Styling for JavaFX CSS Reference Guide
DESCRIPTION: This CSS block defines the visual styles for the JavaFX CSS Reference Guide document itself, including font families, sizes, colors, table layouts, and specific styles for code examples and links.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_0

LANGUAGE: CSS
CODE:
```
body { font-family: Helvetica, Arial, sans-serif; font-size: 14px; }
h1 { font-size: 28px; color:#385E76 }
h2 { border-top: 3px dashed #DDD; margin-top: 30px; padding-top: 15px; font-size: 22px; color:#385E76 }
h3 { background-color: #EEE; padding: 3px; font-size: 18px; }
h4 { font-size: 16px; margin: 18px 0px 10px 0px; }
ul.contents li { font-size: 12px; font-weight:bold; list-style-type:circle; margin: 3px 0px 3px 0px; }
ul.contents li li { font-weight:normal; list-style-type:circle; }
/*ul.contents a { color:#000 }*/
a { text-decoration:none; color:#06C }
.csspropertytable { border-spacing: 1px; background-color: #CCC; }
.csspropertytable th, .csspropertytable td { padding: 2px; }
.csspropertytable thead th, .csspropertytable thead td, .csspropertytable tbody th.subheader { font-size: 10px; text-align: center; background-color: #CCC; }
.csspropertytable tbody { background-color:#FFF; font-size: 12px; }
/*.csspropertytable td:first-child { color:#06C; font-weight:bold; white-space:nowrap; }*/
.cssmisctable { border-spacing: 2px; background-color:#CCC; }
.cssmisctable th, .cssmisctable td { padding: 4px; }
.cssmisctable thead { font-size: 10px; }
.cssmisctable tbody th, .cssmisctable tbody td { font-size: 12px; text-align: left; font-weight: normal; background-color: #FFF; }
.package { margin: 15px 0px 0px 0px; padding: 2px; background-color:#666; color:#FFF; font-weight:bold; border:none }
.package td { background-color:#666; font-size: 14px; }
th.parents, td.parents { font-weight:bold; color:#C00; background-color:#DDD; padding: 4px; text-align:center; font-size: 10px; }
th.propertyname, td.propertyname { color:#06C; background-color: #FFF; font-weight:bold; text-align:left; white-space:nowrap; }
td.value { font-family:""Lucida Console"", Monaco, monospace; font-size: 10px; }
td.default { font-family:""Lucida Console"", Monaco, monospace; font-size: 10px; text-align:center; white-space:nowrap; }
td.range { font-family:""Lucida Console"", Monaco, monospace; font-size: 10px; text-align:center; white-space:nowrap; }
td.implemented { text-align:center; white-space:nowrap; }
.grammar { font-family:""Lucida Console"", Monaco, monospace; font-size: 14px; color:#039; }
p.example { font-family:""Lucida Console"", Monaco, monospace; font-size: 14px; /* white-space: pre; */ padding: 0px 0px 0px 40px; color:#090; margin: 0px; }
span.example { font-family:""Lucida Console"", Monaco, monospace; font-size: 14px; color:#090; }
p.subtitle { font-style: italic; color:#999; }
p.styleclass { font-style: italic; }
.grammar .typelink , p .typelink , td .typelink{ font-family:""Lucida Console"", Monaco, monospace; font-size: 14px; color:#039; }
td.value .typelink { font-family:""Lucida Console"", Monaco, monospace; font-size: 10px; color:#039; }
/* Oracle FX style */
.fx-code-header { background: #ffffff; background-image:url(fx_code_header.jpg); height: 50px; width: 656px; }
/* Oracle FX style */
.version { font-family:Verdana, Arial, Helvetica, sans-serif; font-size:10px; padding-top:2px; color:#265F7F; line-height:1.2em; position:relative; left:425px; top:10px; width:200px; text-align:right; }
/* Color Table Styles */
div.colorsquare { display:inline-block; width:20em; margin: 3px 3px }
div.colorsquare > span { background: none repeat scroll 0% 50%; display:inline-block; width:16px; height:16px; border:2px solid black; margin-right:1em; }
```

----------------------------------------

TITLE: JavaScriptCore Public Framework Headers
DESCRIPTION: This section lists the public header files exposed by the JavaScriptCore framework. These headers define the primary API for interacting with JavaScriptCore functionalities, including JavaScript context, objects, strings, typed arrays, and values.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_38

LANGUAGE: APIDOC
CODE:
```
API/JSBase.h
API/JSContextRef.h
API/JSObjectRef.h
API/JSStringRef.h
API/JSTypedArray.h
API/JSValueRef.h
API/JavaScript.h
API/WebKitAvailability.h
```

----------------------------------------

TITLE: JavaFX UI Component API Reference
DESCRIPTION: This section lists core JavaFX UI components, organized by their respective packages. It covers layout panes, media views, shapes, text elements, web views, standard controls, charting components, and incubator rich text controls, providing a quick reference to available classes.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_2

LANGUAGE: APIDOC
CODE:
```
javafx.scene.layout:
  AnchorPane
  BorderPane
  DialogPane
  FlowPane
  GridPane
  HBox
  Pane
  Region
  StackPane
  TilePane
  VBox
javafx.scene.media:
  MediaView
javafx.scene.shape:
  Shape
  Arc
  Circle
  CubicCurve
  Ellipse
  Line
  Path
  Polygon
  QuadCurve
  Rectangle
  SVGPath
javafx.scene.text:
  Text
  TextFlow
javafx.scene.web:
  WebView
javafx.scene.control:
  Accordion
  Button
  ButtonBase
  Cell
  CheckBox
  CheckMenuItem
  ChoiceBox
  ColorPicker
  ComboBox
  ContextMenu
  Control
  DatePicker
  HTMLEditor
  Hyperlink
  IndexedCell
  Label
  Labeled
  ListCell
  ListView
  Menu
  MenuBar
  MenuButton
  MenuItem
  Pagination
  PasswordField
  ProgressBar
  ProgressIndicator
  RadioButton
  RadioMenuItem
  ScrollBar
  ScrollPane
  Separator
  Spinner
  Slider
  SplitMenuButton
  SplitPane
  TabPane
  TableColumnHeader
  TableView
  TextArea
  TextInputControl
  TextField
  TitledPane
  ToggleButton
  ToolBar
  Tooltip
  TreeCell
  TreeTableCell
  TreeTableView
  TreeView
  WebView
javafx.scene.chart:
  AreaChart
  Axis
  BarChart
  BubbleChart
  CategoryAxis
  Chart
  Legend
  LineChart
  NumberAxis
  PieChart
  ScatterChart
  ValueAxis
  XYChart
jfx.incubator.scene.control.richtext:
  CodeArea
  RichTextArea
```

----------------------------------------

TITLE: ContextMenu Control API Documentation
DESCRIPTION: Documents the ContextMenu control, its substructure, and how its selector can be made more specific for styling. It inherits properties from PopupControl and outlines its internal components like menu items and scroll arrows.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_120

LANGUAGE: APIDOC
CODE:
```
ContextMenu:
  Style class: context-menu
  Inherits properties from: PopupControl
  Selector example:
    .choice-box > .context-menu { ... }
  Substructure:
    context-menu: a Region
      scroll-arrow: a StackPane
        menu-up-arrow: a StackPane
      scroll-arrow: a StackPane
        menu-down-arrow: a StackPane
      *: a VBox
        menu-item: a Region
          label: a Label
          left-container: a StackPane (for radio buttons and check boxes)
          right-container: a StackPane (for pull-right menus)
            arrow: a Region
          graphic-container: a StackPane (for MenuItem graphic)
```

----------------------------------------

TITLE: DatePicker Control API Documentation
DESCRIPTION: Documents the DatePicker control, its inherited properties and pseudo-classes from ComboBoxBase, and its specific CSS property -fx-show-week-numbers. It also inherits properties from Control and defines its display node substructure.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_122

LANGUAGE: APIDOC
CODE:
```
DatePicker:
  Style class: date-picker
  Inherits properties and pseudo-classes from: ComboBoxBase
  Inherits properties from: Control
  CSS Properties:
    -fx-show-week-numbers:
      Values: <boolean>
      Default: true if the resource bundle property ""DatePicker.showWeekNumbers"" contains the country code.
  Substructure:
    date-picker-display-node: TextField
```

----------------------------------------

TITLE: JavaFX CSS repeating-image-pattern Example
DESCRIPTION: Demonstrates the usage of the repeating-image-pattern function in JavaFX CSS, showing how to apply a tiled image fill using only the image URI.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_40

LANGUAGE: JavaFX CSS
CODE:
```
repeating-image-pattern(""com/mycompany/myapp/images/Duke.png"")
```

----------------------------------------

TITLE: JavaFX CSS ladder() Example for Dynamic Text Color
DESCRIPTION: This CSS example demonstrates using the ladder() function to set the -fx-text-fill property. It dynamically chooses between black and white text based on the brightness of the background color, ensuring readability against varying backgrounds.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_51

LANGUAGE: CSS
CODE:
```
background: white;
-fx-text-fill: ladder(background, white 49%, black 50%);
```

----------------------------------------

TITLE: APIDOC: Pagination CSS Reference
DESCRIPTION: Documents the CSS style class, properties, pseudo-classes, and substructure for the JavaFX Pagination control, including its internal button and label components.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_134

LANGUAGE: APIDOC
CODE:
```
Style Class: pagination

Pseudo-classes:
  Inherits pseudo-classes of: Control

CSS Properties:
  -fx-max-page-indicator-count:
    Values: <number>
    Default: 10
    Comments:
  -fx-arrows-visible:
    Values: <boolean>
    Default: true
    Comments:
  -fx-tooltip-visible:
    Values: <boolean>
    Default: false
    Comments: When set to true, a tooltip which shows the page number is set on the page indicators. This property controls whether or not the tooltip is visible on the page indicators and _does not_ affect the visibility of the tooltip set or installed on the Pagination control itself.
  -fx-page-information-visible:
    Values: <boolean>
    Default: true
    Comments:
  -fx-page-information-alignment:
    Values: [ top | bottom | left | right ]
    Default: bottom
    Comments:

Inherits properties of: Control

Substructure:
  page: StackPane
  pagination-control: StackPane
    leftArrowButton: Button
      leftArrow: StackPane
    rightArrowButton: Button
      rightArrow: StackPane
    bullet-button: ToggleButton
    number-button: ToogleButton
    page-information: Label
```

----------------------------------------

TITLE: MediaSource Class API Documentation
DESCRIPTION: Documentation for the MediaSource class, which is responsible for creating SourceBuffer objects and associating them with an HTMLMediaElement. It allows querying type support, adding source buffers, setting duration, and signaling end of stream.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediasource/README.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
Class: MediaSource
  Purpose: Creates SourceBuffer objects and associates them with a HTMLMediaElement.
  Files: MediaSource.idl, MediaSource.h, MediaSource.cpp
  Methods:
    isTypeSupported(type: string): boolean - Queries container and codec support.
    addSourceBuffer(type: string): SourceBuffer - Creates a new SourceBuffer object.
    endOfStream(error: string) - Signals the end of the stream.
  Properties:
    duration: number - Explicitly sets the MediaSource's duration.
    readyState: string - Queries the state of the MediaSource object.
  Events:
    ""sourceopen"" - Fired when successfully associated with a HTMLMediaElement.
    ""sourceclose"" - Fired when disassociated from a HTMLMediaElement.
  Association:
    Can be set directly as HTMLMediaElement's srcObject.
    ObjectURL can be created from MediaSource object and set as HTMLMediaElement's src.
```

----------------------------------------

TITLE: JavaFX CSS Implicit Transition Properties Reference
DESCRIPTION: This API documentation details the CSS properties used to configure implicit transitions in JavaFX. For each property, it specifies the accepted values, the default setting, and a brief comment explaining its function and usage.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_6

LANGUAGE: APIDOC
CODE:
```
CSS Property: transition-property
  Values: [ none | all | <custom-ident># ]
  Default: all
  Comments: The name of the CSS property to which the transition is applied.

CSS Property: transition-duration
  Values: [<duration>#]
  Default: 0s
  Comments: The duration of the transition, not including an optional delay before the transition starts.

CSS Property: transition-timing-function
  Values: [<easing-function>#]
  Default: ease
  Comments: The easing function that is used to calculate the intermediate values.

CSS Property: transition-delay
  Values: [<duration>#]
  Default: 0s
  Comments: The delay after which the transition starts. If a negative delay is specified, the transition starts as if it had already been running for the specified time.

CSS Property: transition
  Values: <single-transition># where <single-transition> = [ none | all | <custom-ident> ] || [<duration>] || [<easing-function>] || [<duration>]
  Comments: Short-hand notation for the individual properties. Note that while the order of the values generally doesn't matter, the first duration is always assigned to the transition-duration property, while the second duration is always assigned to the transition-delay property.
```

----------------------------------------

TITLE: SourceBufferPrivate Semi-Abstract Base Class API Documentation
DESCRIPTION: Documentation for SourceBufferPrivate, a semi-abstract base class responsible for accepting and parsing initialization and media segment buffers. It enqueues the resulting samples into platform-specific decoders and manages the caching of parsed samples.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediasource/README.md#_snippet_3

LANGUAGE: APIDOC
CODE:
```
Semi-Abstract Base Class: SourceBufferPrivate
  Purpose: Accepts initialization and media segment buffers, parses them with platform-specific parsers, and enqueues the resulting samples into platform-specific decoders. Also responsible for caching parsed samples.
  Files: ../platform/graphics/SourceBufferPrivate.h, ../platform/graphics/SourceBufferPrivate.cpp
  Internal Components:
    SampleMap: Used for caching parsed samples.
```

----------------------------------------

TITLE: Configuring Build with Microsoft Visual C/C++ (JScript)
DESCRIPTION: This example demonstrates how to configure the build process using the JScript configuration script. It sets the compiler to MSVC, specifies installation and library paths, and enables debug symbols for the compiled executables. Paths with spaces are not supported.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/win32/Readme.txt#_snippet_1

LANGUAGE: Batch
CODE:
```
cscript configure.js compiler=msvc prefix=c:\opt include=c:\opt\include lib=c:\opt\lib debug=yes
```

----------------------------------------

TITLE: APIDOC: JavaFX SplitPane CSS Properties, Pseudo-classes, and Substructure
DESCRIPTION: Provides information on the CSS properties, pseudo-classes for orientation, and the internal component hierarchy of the JavaFX SplitPane control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_147

LANGUAGE: APIDOC
CODE:
```
Style Class: split-pane
```

LANGUAGE: APIDOC
CODE:
```
CSS Properties:
  -fx-orientation: [ horizontal | vertical ] (Default: horizontal)
Inherits all properties of Control.
```

LANGUAGE: APIDOC
CODE:
```
Pseudo-classes:
  - horizontal: Applies if SplitPane is horizontal
  - vertical: Applies if SplitPane is vertical
Inherits all pseudo-classes of Control.
```

LANGUAGE: APIDOC
CODE:
```
Substructure:
  - split-pane-divider: StackPane
    - vertical-grabber: StackPane
    - horizontal-grabber: StackPane
```

----------------------------------------

TITLE: APIDOC: Menu CSS Reference
DESCRIPTION: Documents the CSS style class and pseudo-classes for the JavaFX Menu control, including inherited pseudo-classes from Control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_130

LANGUAGE: APIDOC
CODE:
```
Style Class: menu

Pseudo-classes:
  showing: applies if this Menu is showing

Inherits pseudo-classes of: Control
```

----------------------------------------

TITLE: MediaSourcePrivate Abstract Base Class API Documentation
DESCRIPTION: Documentation for MediaSourcePrivate, an abstract base class that enables the MediaSource object to communicate across the platform boundary to a platform-specific implementation. It facilitates interaction with underlying media frameworks.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediasource/README.md#_snippet_2

LANGUAGE: APIDOC
CODE:
```
Abstract Base Class: MediaSourcePrivate
  Purpose: Allows MediaSource to communicate through the platform boundary to a platform-specific implementation of MediaSource.
  Files: ../platform/graphics/MediaSourcePrivate.h, ../platform/graphics/MediaSourcePrivate.cpp
  Implementations:
    MediaSourcePrivateRemote: Used when the GPU Process is enabled, passes commands across WebContent/GPU process boundary.
    MediaSourcePrivateAVFObjC: Typical implementation for Apple ports.
    MediaSourcePrivateGStreamer: Typical implementation for GStreamer-based ports.
    MockMediaSourcePrivate: Used for platform-independent testing in DumpRenderTree/WebKitTestRunner.
```

----------------------------------------

TITLE: Build Project using Ant Command Line
DESCRIPTION: This snippet shows how to build the project from the command line using the Ant build tool. Ensure Ant is installed and configured in your environment.
SOURCE: https://github.com/openjdk/jfx/blob/master/apps/samples/RichTextAreaDemo/README.md#_snippet_0

LANGUAGE: Ant
CODE:
```
ant
```

----------------------------------------

TITLE: APIDOC: MenuItem CSS Reference
DESCRIPTION: Documents the CSS style class for the JavaFX MenuItem control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_133

LANGUAGE: APIDOC
CODE:
```
Style Class: menu-item
```

----------------------------------------

TITLE: Control Base Class API Documentation
DESCRIPTION: Documents the base Control class, its inherited properties from Region, and available CSS properties like -fx-skin and -fx-focus-traversable. It also specifies default values and exceptions for focus traversability.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_121

LANGUAGE: APIDOC
CODE:
```
Control:
  Inherits properties from: Region
  CSS Properties:
    -fx-skin:
      Values: <string>
      Default: null
      Comments: The class name of the Control's Skin.
    -fx-focus-traversable:
      Values: <boolean>
      Default: true (false for Accordion, Cell, Label, MenuBar, ProgressBar, ProgressIndicator, ScrollBar, ScrollPane, Separator, SplitPane, ToolBar)
      Comments: Control sets the default value of the focusTraversable property to true.
```

----------------------------------------

TITLE: Unicode Script Extensions for Bopo and Hani
DESCRIPTION: Details Unicode code points associated with the Bopo and Hani script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_14

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Bopo Hani

302A..302D    ; Bopo Hani # Mn   [4] IDEOGRAPHIC LEVEL TONE MARK..IDEOGRAPHIC ENTERING TONE MARK

# Total code points: 4
```

----------------------------------------

TITLE: Tooltip CSS Properties Reference
DESCRIPTION: Documents the available CSS properties for the JavaFX Tooltip control, including their values, default settings, and comments.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_157

LANGUAGE: APIDOC
CODE:
```
Style Class: tooltip
Available CSS Properties:
  -fx-text-alignment: [ left | center | right | justify ] (Default: left)
  -fx-text-overrun: [ center-ellipsis | center-word-ellipsis | clip | ellipsis | leading-ellipsis | leading-word-ellipsis | word-ellipsis ] (Default: ellipsis)
  -fx-wrap-text: [<boolean>] (Default: false)
  -fx-graphic: [<uri>] (Default: null)
  -fx-content-display: [ top | right | bottom | left | center | right | graphic-only | text-only ] (Default: left)
  -fx-graphic-text-gap: [<size>] (Default: 4)
  -fx-font: [<font>] (Default: Font.DEFAULT) inherits
  -fx-show-delay: [<duration>] (Default: 1000ms)
  -fx-show-duration: [<duration>] (Default: 5000ms)
  -fx-hide-delay: [<duration>] (Default: 200ms)
```

----------------------------------------

TITLE: APIDOC: NumberAxis Style Classes and CSS Properties
DESCRIPTION: Defines the CSS properties for the JavaFX NumberAxis, specifically the tick unit.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_174

LANGUAGE: APIDOC
CODE:
```
Style class: axis
Available CSS Properties:
  -fx-tick-unit:
    Values: [<number>](#typesize)
    Default: 5
    Comments: The value between each major tick mark in data units.
Inherits: [ValueAxis](#valueaxis) properties
```

----------------------------------------

TITLE: APIDOC: Label CSS Reference
DESCRIPTION: Documents the CSS style class for the JavaFX Label control, noting its inheritance from Labeled for properties and pseudo-class states.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_126

LANGUAGE: APIDOC
CODE:
```
Style Class: label

Inherits properties of: Labeled
Inherits pseudo-classes of: Labeled
```

----------------------------------------

TITLE: APIDOC: ListView CSS Reference
DESCRIPTION: Documents the CSS style class, properties, pseudo-classes, and substructure for the JavaFX ListView control, including its internal component hierarchy.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_129

LANGUAGE: APIDOC
CODE:
```
Style Class: list-view

CSS Properties:
  -fx-orientation:
    Values: [ horizontal | vertical ]
    Default: vertical
    Comments:

Pseudo-classes:
  horizontal: applies if this ListView is horizontal
  vertical: applies if this ListView is vertical

Substructure:
  .list-view: the ListView<T>
    .virtual-flow: VirtualFlow
      .clipped-container: Region
        .sheet: Group
          .cell.indexed-cell.list-cell: ListCell<T>
        .scroll-bar: ScrollBar
```

----------------------------------------

TITLE: Support Loading Stylesheets from Data-URIs
DESCRIPTION: JavaFX now supports loading stylesheets directly from data-URIs, enhancing flexibility in styling applications by allowing inline stylesheet definitions.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md#_snippet_1

LANGUAGE: APIDOC
CODE:
```
Support loading stylesheets from data-URIs
```

----------------------------------------

TITLE: Define JavaFX CSS URI Type and Resolution
DESCRIPTION: Explains the syntax for URI values in JavaFX CSS using the `url()` function. It details how URIs are resolved based on whether they are in a stylesheet or inline style, and whether they have a scheme or a leading slash. Examples demonstrate URL resolution in different contexts.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_25

LANGUAGE: APIDOC
CODE:
```
uri:
  syntax: ""url ( [\""\']? <address> [\""\']? )""
  description: ""<address> is a hierarchical URI of the form [scheme:][//authority][path].""
  address_interpretation:
    - ""If <address> does not have a [scheme:] component, it is considered the [path] component only.""
    - ""A leading '/' character indicates that the [path] is relative to the root of the classpath.""
    - ""If style appears in a stylesheet and has no leading '/', path is relative to stylesheet's base URI.""
    - ""If style appears in an inline style, path is always relative to the root of the classpath (regardless of leading '/').""
  examples_stylesheet_resolution:
    - stylesheet_url: ""file:///some/path/build/classes/com/mycompany/myapp/mystyles.css""
      url_in_style: ""url(images/Duke.png)""
      resolves_to: ""file:///some/path/build/classes/com/mycompany/myapp/images/Duke.png""
    - stylesheet_url: ""file:///some/path/build/classes/com/mycompany/myapp/mystyles.css""
      url_in_style: ""url(../images/Duke.png)""
      resolves_to: ""file:///some/path/build/classes/com/mycompany/images/Duke.png""
    - stylesheet_url: ""jar:file:/some/path/build/myapp.jar!/com/mycompany/myapp/mystyles.css""
      url_in_style: ""url(images/Duke.png)""
      resolves_to: ""jar:file:/some/path/build/myapp.jar!/com/mycompany/myapp/images/Duke.png""
  examples_inline_style_resolution:
    - classpath: ""file:///some/path/build/classes""
      url_in_style: ""url(/com/mycompany/resources/images/Duke.png)""
      resolved_url: ""file:///some/path/build/classes/com/mycompany/resources/images/Duke.png""
    - classpath: ""file:///some/path/build/myapp.jar""
      url_in_style: ""url(/com/mycompany/resources/images/Duke.png)""
      resolved_url: ""jar:file:/some/path/build/myapp.jar!/com/mycompany/resources/images/Duke.png""
  note: ""For inline styles, leading dot-segments (e.g. '..' or '.') do resolve since the path is always anchored at the root of the classpath.""
```

LANGUAGE: Java
CODE:
```
@Override public void start(Stage stage) {
  StackPane root = new StackPane();
  root.setStyle(""-fx-background-image: url(images/Duke.png);"");
  Scene scene = new Scene(root, 300, 250);
  stage.setScene(scene);
  stage.show();
}
```

----------------------------------------

TITLE: APIDOC: JavaFX TabPane CSS Properties, Pseudo-classes, and Substructure
DESCRIPTION: Documents the CSS properties for sizing and animation, pseudo-classes for tab positioning, and the complex internal substructure of the JavaFX TabPane control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_148

LANGUAGE: APIDOC
CODE:
```
Style Class: tab-pane
Note: ""tab-pane floating"" if TabPane is floating.
```

LANGUAGE: APIDOC
CODE:
```
CSS Properties:
  -fx-tab-min-width: <integer> (Default: 0)
  -fx-tab-max-width: <integer> (Default: Double.MAX_VALUE)
  -fx-tab-min-height: <integer> (Default: 0)
  -fx-tab-max-height: <integer> (Default: Double.MAX_VALUE)
  -fx-open-tab-animation: [ grow | none ] (Default: grow) - 'none' disables animation
  -fx-close-tab-animation: [ grow | none ] (Default: grow) - 'none' disables animation
Inherits all properties of Control.
```

LANGUAGE: APIDOC
CODE:
```
Pseudo-classes:
  - top: Applies if side is top
  - right: Applies if side is right
  - bottom: Applies if side is bottom
  - left: Applies if side is left
Inherits all pseudo-classes of Control.
```

LANGUAGE: APIDOC
CODE:
```
Substructure:
  - tab-header-area: StackPane
    - headers-region: StackPane
    - tab-header-background: StackPane
    - control-buttons-tab: StackPane
      - tab-down-button: Pane
        - arrow: StackPane
    - tab: Tab
      - tab-label: Label
      - tab-close-button: StackPane
  - tab-content-area: StackPane
```

----------------------------------------

TITLE: APIDOC: TitledPane CSS Properties and Pseudo-classes
DESCRIPTION: Outlines the CSS properties, pseudo-classes, and substructure for styling JavaFX TitledPane controls, covering animation, collapsibility, and expanded/collapsed states.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_154

LANGUAGE: APIDOC
CODE:
```
Control: TitledPane

Substructure:
  title - HBox
    text - Label
    arrow-button - StackPane
      arrow - StackPane
  content - StackPane

CSS Properties:
  -fx-animated:
    Values: <boolean>
    Default: true
  -fx-collapsible:
    Values: <boolean>
    Default: true

Pseudo-classes:
  expanded: applies if this TitledPane is expanded
  collapsed: applies if this TitledPane is collapsed
```

----------------------------------------

TITLE: APIDOC: ToggleButton CSS Pseudo-classes
DESCRIPTION: Documents the CSS pseudo-class specific to JavaFX ToggleButton controls, indicating its selected state.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_155

LANGUAGE: APIDOC
CODE:
```
Control: ToggleButton
Style Class: toggle-button

Pseudo-classes:
  selected: applies if this ToggleButton is selected
```

----------------------------------------

TITLE: Build libxml2 with Meson
DESCRIPTION: Instructions for building libxml2 using the Meson build system. This covers the basic setup, compilation, installation, and running tests. It also demonstrates how to apply specific configuration options during the setup phase.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/README.md#_snippet_2

LANGUAGE: Shell
CODE:
```
meson setup builddir
ninja -C builddir
```

LANGUAGE: Shell
CODE:
```
meson setup -Dprefix=$prefix -Dftp=true -Dhistory=true -Dicu=true -Dhttp=true builddir
```

LANGUAGE: Shell
CODE:
```
ninja -C builddir install
```

LANGUAGE: Shell
CODE:
```
meson test -C builddir
```

----------------------------------------

TITLE: APIDOC: CategoryAxis Style Classes and CSS Properties
DESCRIPTION: Details the CSS properties for the JavaFX CategoryAxis, including margins and tick-mark spacing.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_170

LANGUAGE: APIDOC
CODE:
```
Style class: axis
Available CSS Properties:
  -fx-start-margin:
    Values: [<number>](#typesize)
    Default: 5
    Comments: The margin between the axis start and the first tick-mark
  -fx-end-margin:
    Values: [<number>](#typesize)
    Default: 5
    Comments: The margin between the axis start and the first tick-mark
  -fx-gap-start-and-end:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: If this is true then half the space between ticks is left at the start and end
Inherits: [Axis](#axis) properties
```

----------------------------------------

TITLE: ID Start (IDS) Property Definition
DESCRIPTION: Defines the possible boolean values for the Unicode ID_Start (IDS) property, indicating characters that can start an identifier.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropertyValueAliases.txt#_snippet_53

LANGUAGE: APIDOC
CODE:
```
IDS; N; No; F; False
IDS; Y; Yes; T; True
```

----------------------------------------

TITLE: APIDOC: MenuBar CSS Reference
DESCRIPTION: Documents the CSS style class, properties, and substructure for the JavaFX MenuBar control, including inherited properties and pseudo-classes from Control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_131

LANGUAGE: APIDOC
CODE:
```
Style Class: menu-bar

CSS Properties:
  -fx-use-system-menu-bar:
    Values: <boolean>
    Default: false
    Comments:

Inherits properties of: Control
Inherits pseudo-classes of: Control

Substructure:
  menu
```

----------------------------------------

TITLE: APIDOC: MenuButton CSS Reference
DESCRIPTION: Documents the CSS style class and pseudo-classes for the JavaFX MenuButton control, noting its inheritance from ButtonBase and Node.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_132

LANGUAGE: APIDOC
CODE:
```
Style Class: menu-button

Pseudo-classes:
  openvertically: applies if the openVertically variable is true
  showing: applies if the showing variable is true

Inherits properties of: ButtonBase
Inherits pseudo-classes of: Node
```

----------------------------------------

TITLE: APIDOC: XYChart Style Classes and CSS Properties
DESCRIPTION: Describes general CSS properties for JavaFX XYChart components, such as visibility of alternative fills and grid lines.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_178

LANGUAGE: APIDOC
CODE:
```
Style class: set by sub-type
Available CSS Properties:
  -fx-alternative-column-fill-visible:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: 
  -fx-alternative-row-fill-visible:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: 
  -fx-horizontal-grid-lines-visible:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: 
  -fx-horizontal-zero-line-visible:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: 
  -fx-vertical-grid-lines-visible:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: 
  -fx-vertical-zero-line-visible:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: 
Inherits: [Chart](#chart) properties
```

----------------------------------------

TITLE: ID Compat Math Start Property Definition
DESCRIPTION: Defines the possible boolean values for the Unicode ID_Compat_Math_Start property, indicating characters that can start an identifier in mathematical contexts.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropertyValueAliases.txt#_snippet_51

LANGUAGE: APIDOC
CODE:
```
ID_Compat_Math_Start; N; No; F; False
ID_Compat_Math_Start; Y; Yes; T; True
```

----------------------------------------

TITLE: Unicode Script Extensions for Bugi and Java
DESCRIPTION: Details Unicode code points associated with the Bugi and Java script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_15

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Bugi Java

A9CF          ; Bugi Java # Lm       JAVANESE PANGRANGKEP

# Total code points: 1
```

----------------------------------------

TITLE: Tooltip Substructure Elements
DESCRIPTION: Lists the internal substructure elements of the JavaFX Tooltip control and their corresponding UI components.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_158

LANGUAGE: APIDOC
CODE:
```
Substructure:
  - label: Label
  - page-corner: StackPane
```

----------------------------------------

TITLE: APIDOC: ScatterChart Style Classes and Properties
DESCRIPTION: Outlines the CSS style classes for symbols in a JavaFX ScatterChart, including series and data point styling.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_176

LANGUAGE: APIDOC
CODE:
```
Available Style Classes:
  ""chart-symbol series<i> data<j> default-color<k>""
    Comments: Where <i> is the index of the series, <j> is the index of the data within the series, and <k> is the series’ color index
    Properties: [Node](#node)
  ""chart-symbol series<i> data0 default-color0""
    Comments: The LegendItem symbols are assigned the style‑class of the first symbol of the series.
    Properties: LegendItem
Available CSS Properties:
Inherits: [XYChart](#xychart) properties
```

----------------------------------------

TITLE: Style JavaFX PopupWindow Root Scene with CSS
DESCRIPTION: This API documentation explains how to apply CSS styles specifically to the root scene of a `javafx.stage.PopupWindow`. It highlights the use of the `:root.popup` CSS rule to target popups, enabling distinct styling from other scenes.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_59

LANGUAGE: APIDOC
CODE:
```
javafx.stage.PopupWindow

Style class: :root.popup

Description: PopupWindow does not have any properties that can be styled by CSS, but a PopupWindow does have its own Scene. Scene's root gets the :root pseudo-class by default. If the Scene is the root scene of a PopupWindow, then the .popup style-class is also added. This allows the root scene of a PopupWindow to have distinct styles via the CSS rule `:root.popup { /* declarations */ }`
```

----------------------------------------

TITLE: Unicode Script Extensions for Deva and Gran
DESCRIPTION: Details Unicode code points associated with the Deva and Gran script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_21

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Deva Gran

1CD3          ; Deva Gran # Po       VEDIC SIGN NIHSHVASA
1CF3          ; Deva Gran # Lo       VEDIC SIGN ROTATED ARDHAVISARGA
1CF8..1CF9    ; Deva Gran # Mn   [2] VEDIC TONE RING ABOVE..VEDIC TONE DOUBLE RING ABOVE

# Total code points: 4
```

----------------------------------------

TITLE: APIDOC: ToolBar CSS Properties and Pseudo-classes
DESCRIPTION: Describes the CSS properties, pseudo-classes, and substructure for styling JavaFX ToolBar controls, including orientation and overflow button details.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_156

LANGUAGE: APIDOC
CODE:
```
Control: ToolBar
Style Class: tool-bar

Substructure:
  tool-bar-overflow-button - StackPane
    arrow - StackPane

CSS Properties:
  -fx-orientation:
    Values: [ horizontal | vertical ]
    Default: horizontal

Pseudo-classes:
  horizontal: applies if this ToolBar is horizontal
  vertical: applies if this ToolBar is vertical
```

----------------------------------------

TITLE: APIDOC: Chart Style Classes and CSS Properties
DESCRIPTION: Outlines the general CSS properties applicable to all JavaFX Chart components, such as legend and title positioning, and substructure elements.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_171

LANGUAGE: APIDOC
CODE:
```
Style class: chart
Available CSS Properties:
  -fx-legend-side:
    Values: Side
    Default: bottom
    Comments: 
  -fx-legend-visible:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: 
  -fx-title-side:
    Values: Side
    Default: top
    Comments: 
Inherits: [Region](#region) properties
Substructure:
  chart-title: Label
  chart-content: Pane
```

----------------------------------------

TITLE: CheckMenuItem Control CSS Reference
DESCRIPTION: Documents the pseudo-classes for the JavaFX CheckMenuItem control, specifically for its selected state.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_115

LANGUAGE: APIDOC
CODE:
```
Control: CheckMenuItem

Pseudo-classes:
selected | Comments: applies if this item is selected
```

----------------------------------------

TITLE: Unicode Script Extensions for Deva and Nand
DESCRIPTION: Details Unicode code points associated with the Deva and Nand script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_22

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Deva Nand

1CE9          ; Deva Nand # Lo       VEDIC SIGN ANUSVARA ANTARGOMUKHA

# Total code points: 1
```

----------------------------------------

TITLE: APIDOC: BubbleChart Style Classes and Properties
DESCRIPTION: Defines the CSS style classes and associated properties for the JavaFX BubbleChart component, including series and data point styling.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_169

LANGUAGE: APIDOC
CODE:
```
Available Style Classes:
  ""chart-bubble series<i> data<j> default-color<k>""
    Comments: Where <i> is the index of the series, <j> is the index of the data within the series, and <k> is the series’ color index
    Properties: [Node](#node)
  ""chart-bubble series<i> bubble-legend-symbol default-color<j>""
    Comments: Where <i> is the index of the series and <j> is the series’ color index
    Properties: LegendItem
```

----------------------------------------

TITLE: OpenJDK JFX Pull Request Title Format Example
DESCRIPTION: This example illustrates the mandatory format for pull request titles in the OpenJDK JFX project. The title must begin with a 7-digit JBS bug ID, followed by a colon, a space, and then the precise bug title as found in JBS. Adhering to this format is essential for proper processing by the Skara bot and to avoid integration blocks.
SOURCE: https://github.com/openjdk/jfx/blob/master/CONTRIBUTING.md#_snippet_0

LANGUAGE: Text
CODE:
```
8231326: Update README and CONTRIBUTING docs for Skara
```

----------------------------------------

TITLE: Configure Meson Option: enable_examples
DESCRIPTION: Sets the 'enable_examples' build option as a boolean, defaulting to false. This option controls whether dav1d examples are built.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/PAL/ThirdParty/dav1d/meson_options.txt#_snippet_3

LANGUAGE: Meson
CODE:
```
option('enable_examples',
    type: 'boolean',
    value: false,
    description: 'Build dav1d examples')
```

----------------------------------------

TITLE: Build dav1d Project Documentation
DESCRIPTION: Steps to generate the project's documentation using Doxygen and Graphviz. This involves enabling documentation generation during Meson configuration and then running Ninja to build the HTML documentation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/PAL/ThirdParty/dav1d/README.md#_snippet_2

LANGUAGE: Shell
CODE:
```
meson build -Denable_docs=true
```

LANGUAGE: Shell
CODE:
```
ninja -C build doc/html
```

----------------------------------------

TITLE: Example Command Line Parameters for Mandelbrot Position
DESCRIPTION: This snippet provides an example set of command line parameters that can be used to load a specific view of the Mandelbrot fractal. These parameters, including minimum/maximum complex coordinates and window size, are typically outputted by the application for reproducibility.
SOURCE: https://github.com/openjdk/jfx/blob/master/apps/samples/MandelbrotSet/index.html#_snippet_2

LANGUAGE: Text
CODE:
```
-min -2.4807381162845332,-1.3061943784663503
-max 0.9781413692299719,1.2879652356695286
-windowSize 800.0x600.0;
```

----------------------------------------

TITLE: APIDOC: IndexedCell CSS Reference
DESCRIPTION: Documents the CSS style class and pseudo-classes available for the JavaFX IndexedCell control, including inherited pseudo-classes from Cell.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_125

LANGUAGE: APIDOC
CODE:
```
Style Class: indexed-cell

Pseudo-classes:
  even: applies if this cell's index is even
  odd: applies if this cell's index is odd

Inherits properties of: Cell
Inherits pseudo-classes of: Cell
```

----------------------------------------

TITLE: APIDOC: ValueAxis Style Classes and CSS Properties
DESCRIPTION: Specifies the CSS properties for the JavaFX ValueAxis, focusing on minor tick marks and their visibility.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_177

LANGUAGE: APIDOC
CODE:
```
Style class: axis
Available CSS Properties:
  -fx-minor-tick-length:
    Values: [<size>](#typesize)
    Default: 5
    Comments: 
  -fx-minor-tick-count:
    Values: [<size>](#typesize)
    Default: 5
    Comments: 
  -fx-minor-tick-visible:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: 
Inherits: [Axis](#axis) properties
Substructure:
  axis-minor-tick-mark: Path
```

----------------------------------------

TITLE: Compile libxml2 with Borland C++ Builder
DESCRIPTION: Command to compile the libxml2 library and test programs using the Borland C++ Builder specific Makefile.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/win32/Readme.txt#_snippet_7

LANGUAGE: Shell
CODE:
```
make -fMakefile.bcb
```

----------------------------------------

TITLE: Unicode Script Extensions for Cprt and Linb
DESCRIPTION: Details Unicode code points associated with the Cprt and Linb script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_16

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Cprt Linb

10102         ; Cprt Linb # Po       AEGEAN CHECK MARK
10137..1013F  ; Cprt Linb # So   [9] AEGEAN WEIGHT BASE UNIT..AEGEAN MEASURE THIRD SUBUNIT

# Total code points: 10
```

----------------------------------------

TITLE: APIDOC: ListCell CSS Reference
DESCRIPTION: Documents the CSS style class for the JavaFX ListCell control, noting its inheritance of properties and pseudo-classes from IndexedCell.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_128

LANGUAGE: APIDOC
CODE:
```
Style Class: list-cell

Inherits properties of: IndexedCell
Inherits pseudo-classes of: IndexedCell
```

----------------------------------------

TITLE: Accordion Control CSS Reference
DESCRIPTION: Documents the style class and substructure for the JavaFX Accordion control. It inherits all properties and pseudo-classes from Control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_110

LANGUAGE: APIDOC
CODE:
```
Control: Accordion
Style Class: accordion
Inherits: Control

Substructure:
first-titled-pane - the first TitledPane
```

----------------------------------------

TITLE: APIDOC: TextInputControl CSS Properties and Pseudo-classes
DESCRIPTION: Documents the common CSS properties and pseudo-classes applicable to all JavaFX TextInputControl derivatives, such as font, text colors, highlight colors, caret visibility, and readonly state.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_152

LANGUAGE: APIDOC
CODE:
```
Control: TextInputControl

CSS Properties:
  -fx-font:
    Values: <font>
    Default: null
    Comment: inherits
  -fx-text-fill:
    Values: <paint>
    Default: black
  -fx-prompt-text-fill:
    Values: <paint>
    Default: gray
  -fx-highlight-fill:
    Values: <paint>
    Default: dodgerblue
  -fx-highlight-text-fill:
    Values: <paint>
    Default: white
  -fx-display-caret:
    Values: <boolean>
    Default: true

Pseudo-classes:
  readonly: applies if this TextInputControl is not editable
```

----------------------------------------

TITLE: APIDOC: JavaFX TableColumnHeader CSS Properties, Pseudo-classes
DESCRIPTION: Details the CSS properties for sizing and the specific pseudo-class for visibility of the JavaFX TableColumnHeader control, along with inherited properties.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_149

LANGUAGE: APIDOC
CODE:
```
Style Class: column-header
```

LANGUAGE: APIDOC
CODE:
```
CSS Properties:
  -fx-size: <size> (Default: 20) - The table column header size.
Inherits all properties of Region.
```

LANGUAGE: APIDOC
CODE:
```
Pseudo-classes:
  - last-visible: Applies if this is the last visible column in the table.
Inherits all pseudo-classes of Node.
```

----------------------------------------

TITLE: Unicode Script Extensions for Deva and Shrd
DESCRIPTION: Details Unicode code points associated with the Deva and Shrd script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_23

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Deva Shrd

1CD7          ; Deva Shrd # Mn       VEDIC TONE YAJURVEDIC KATHAKA INDEPENDENT SVARITA
1CD9          ; Deva Shrd # Mn       VEDIC TONE YAJURVEDIC KATHAKA INDEPENDENT SVARITA SCHROEDER
1CDC..1CDD    ; Deva Shrd # Mn   [2] VEDIC TONE KATHAKA ANUDATTA..VEDIC TONE DOT BELOW
1CE0          ; Deva Shrd # Mn       VEDIC TONE RIGVEDIC KASHMIRI INDEPENDENT SVARITA

# Total code points: 5
```

----------------------------------------

TITLE: Unicode Script Extensions for Beng and Deva
DESCRIPTION: Details Unicode code points associated with the Beng and Deva script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_13

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Beng Deva

1CD5..1CD6    ; Beng Deva # Mn   [2] VEDIC TONE YAJURVEDIC AGGRAVATED INDEPENDENT SVARITA..VEDIC TONE YAJURVEDIC INDEPENDENT SVARITA
1CD8          ; Beng Deva # Mn       VEDIC TONE CANDRA BELOW
1CE1          ; Beng Deva # Mc       VEDIC TONE ATHARVAVEDIC INDEPENDENT SVARITA
1CEA          ; Beng Deva # Lo       VEDIC SIGN ANUSVARA BAHIRGOMUKHA
1CED          ; Beng Deva # Mn       VEDIC SIGN TIRYAK
1CF5..1CF6    ; Beng Deva # Lo   [2] VEDIC SIGN JIHVAMULIYA..VEDIC SIGN UPADHMANIYA
A8F1          ; Beng Deva # Mn       COMBINING DEVANAGARI SIGN AVAGRAHA

# Total code points: 9
```

----------------------------------------

TITLE: APIDOC: LineChart Style Classes and CSS Properties
DESCRIPTION: Specifies the CSS style classes for series lines and symbols in a JavaFX LineChart, along with properties like symbol creation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_173

LANGUAGE: APIDOC
CODE:
```
Available Style Classes:
  ""chart-series-line series<i> default-color<j>""
    Comments: Where <i> is the index of the series and <j> is the series’ color index
    Properties: [Node](#node)
  ""chart-line-symbol series<i> data<j> default-color<k>""
    Comments: Where <i> is the index of the series, <j> is the index of the data within the series, and <k> is the series’ color index
    Properties: [Node](#node)
  ""chart-line-symbol series<i> default-color<j>""
    Comments: Where <i> is the index of the series and <j> is the series’ color index
    Properties: LegendItem
Available CSS Properties:
  -fx-create-symbols:
    Values: [<boolean>](#typeboolean)
    Default: true
    Comments: 
Inherits: [XYChart](#xychart) properties
```

----------------------------------------

TITLE: Large Sharing Pool Participant API
DESCRIPTION: Details the functional contract of the Large Sharing Pool when it acts as a participant in the physical page sharing pool, outlining its eligibility criteria, how it reports its use epoch, and its mechanism for taking least recently used memory.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/Documentation.md#_snippet_3

LANGUAGE: APIDOC
CODE:
```
Participant API Methods:
  is_eligible(): boolean
    Description: Returns true if the large sharing pool is eligible to provide pages.
    Condition: The internal minheap is non-empty.

  get_use_epoch(): epoch_value
    Description: Reports the current use epoch of the participant.
    Value: The minimum use epoch from the internal minheap.
    Note: Configurable to report other values.

  take_least_recently_used(): memory_range_info
    Description: Processes and returns the least recently used memory range.
    Action: Removes the minimum element from the internal minheap.
    Side Effect: Adds the memory range associated with the removed element to the deferred decommit log.
```

----------------------------------------

TITLE: TreeTableCell CSS Properties Reference
DESCRIPTION: Documents the available CSS properties for the JavaFX TreeTableCell control, noting its inheritance from IndexedCell.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_161

LANGUAGE: APIDOC
CODE:
```
Style Class: tree-table-cell
Available CSS Properties:
Inherits: IndexedCell
```

----------------------------------------

TITLE: Support Loading Images from Inline Data-URIs
DESCRIPTION: JavaFX now supports loading images directly from inline data-URIs, providing more flexibility for image embedding within applications.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md#_snippet_5

LANGUAGE: APIDOC
CODE:
```
Support loading images from inline data-URIs
```

----------------------------------------

TITLE: ChoiceBox Control CSS Reference
DESCRIPTION: Documents the style class and substructure for the JavaFX ChoiceBox control. It inherits all properties and pseudo-classes from Control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_116

LANGUAGE: APIDOC
CODE:
```
Control: ChoiceBox
Style Class: choice-box
Inherits: Control

Substructure:
open-button - Region
arrow - Region
```

----------------------------------------

TITLE: APIDOC: JavaFX CSS linear-gradient Function
DESCRIPTION: Defines the syntax and parameters for creating linear color gradients in JavaFX CSS. Specifies point definitions, side-or-corner options, cycle methods, and color stop syntax. Notes default behaviors for direction and cycle method.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_31

LANGUAGE: APIDOC
CODE:
```
linear-gradient( [ [from <point> to <point>] | [ to <side-or-corner>], ]? [ [ repeat | reflect ], ]? <color-stop>[, <color-stop>]+)
  where <side-or-corner> = [left | right] || [top | bottom]

Description:
  Creates a gradient along a line between two points.
  Points can be percentages (relative to fill area) or lengths.
  Percentage and length sizes cannot be mixed in a single gradient function.

Defaults:
  CycleMethod: ""NO_CYCLE"" if neither repeat nor reflect are given.
  Direction: 'to bottom' if neither [from <point> to <point>] nor [ to <side-or-corner> ] are given.

Color Stops:
  Per W3C color-stop syntax (http://dev.w3.org/csswg/css3-images/#color-stop-syntax.) and normalized accordingly.
```

----------------------------------------

TITLE: Define JavaFX CSS Border Image Source Property (-fx-border-image-source)
DESCRIPTION: A series of image URIs, separated by commas.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_87

LANGUAGE: APIDOC
CODE:
```
-fx-border-image-source
[<uri>] [ , [<uri>] ]*
```

----------------------------------------

TITLE: APIDOC: JavaFX CSS image-pattern Function
DESCRIPTION: Defines the syntax and parameters for creating image-based fills using image-pattern in JavaFX CSS. Explains each parameter: image URL, anchor rectangle coordinates (x, y, width, height), and a proportional flag. Refers to ImagePattern javadoc for full details.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_37

LANGUAGE: APIDOC
CODE:
```
image-pattern(<string>, [<size>, <size>, <size>, <size>[, <boolean>]?]?) 

Parameters:
  <string>: The URL of the image.
  <size> (x): The x origin of the anchor rectangle.
  <size> (y): The y origin of the anchor rectangle.
  <size> (width): The width of the anchor rectangle.
  <size> (height): The height of the anchor rectangle.
  <boolean> (proportional): Indicates whether start and end locations are proportional or absolute.

Reference:
  Full explanation in ImagePattern javadoc.
```

----------------------------------------

TITLE: APIDOC: PopupControl CSS Reference
DESCRIPTION: Documents the CSS style class for the JavaFX PopupControl, noting its inheritance from PopupWindow and the root node's style class.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_136

LANGUAGE: APIDOC
CODE:
```
Style Class: :root.popup

Inherits properties of: PopupWindow
```

----------------------------------------

TITLE: Unicode Script Extensions for Deva and Taml
DESCRIPTION: Details Unicode code points associated with the Deva and Taml script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_24

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Deva Taml

A8F3          ; Deva Taml # Lo       DEVANAGARI SIGN CANDRABINDU VIRAMA

# Total code points: 1
```

----------------------------------------

TITLE: Node CSS Pseudo-classes Reference
DESCRIPTION: Lists the various pseudo-classes available for the `Node` class in JavaFX, categorized by user action, input state, and tree-structural position, along with their application conditions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_62

LANGUAGE: APIDOC
CODE:
```
Node CSS Pseudo-classes:
  User Action Pseudo-classes:
    focused:
      Comments: applies when the focused variable is true
    focus-visible:
      Comments: applies when the focusVisible variable is true
    focus-within:
      Comments: applies when the focusWithin variable is true
    hover:
      Comments: applies when the hover variable is true
    pressed:
      Comments: applies when the pressed variable is true
  Input Pseudo-classes:
    disabled:
      Comments: applies when the disabled variable is true
    show-mnemonic:
      Comments: applies when the mnemonic affordance (typically an underscore) should be shown
  Tree-Structural Pseudo-classes:
    first-child:
      Comments: applies when the node is the first child in its `Parent` container
    last-child:
      Comments: applies when the node is the last child in its `Parent` container
    only-child:
      Comments: applies when the node is the only child in its `Parent` container
    nth-child(even | odd):
      Comments: applies when the node is the n-th child in its `Parent` container (the first child at index 0 matches ""odd"", the second child at index 1 matches ""even"", etc.)
```

----------------------------------------

TITLE: JavaFX CSS Default Inherited Properties Reference
DESCRIPTION: This API documentation outlines JavaFX CSS properties that are inherited by default from parent nodes in the scene graph. It provides details on the JavaFX class, the specific property, its corresponding CSS property name, and its initial default value.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_5

LANGUAGE: APIDOC
CODE:
```
Class: javafx.scene.Node
  Property: cursor
  CSS Property: -fx-cursor
  Initial Value: javafx.scene.Cursor.DEFAULT

Class: javafx.scene.text.Text
  Property: textAlignment
  CSS Property: -fx-text-alignment
  Initial Value: javafx.scene.text.TextAlignment.LEFT

Class: javafx.scene.text.Font
  Property: font
  CSS Property: -fx-font, -fx-font-family, -fx-font-size, -fx-font-weight, -fx-font-style
  Initial Value: Font.DEFAULT (12px system)
```

----------------------------------------

TITLE: APIDOC: JavaFX SplitMenuButton CSS Properties
DESCRIPTION: Outlines the CSS properties applicable to the JavaFX SplitMenuButton control. This control inherits all styling properties from the MenuButton.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_146

LANGUAGE: APIDOC
CODE:
```
Style Class: split-menu-button
```

LANGUAGE: APIDOC
CODE:
```
CSS Properties:
Inherits all properties of MenuButton.
```

----------------------------------------

TITLE: APIDOC: PasswordField CSS Reference
DESCRIPTION: Documents the CSS style class for the JavaFX PasswordField control, noting its inheritance from TextField.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_135

LANGUAGE: APIDOC
CODE:
```
Style Class: password-field

Inherits properties of: TextField
```

----------------------------------------

TITLE: ComboBox Control CSS Reference
DESCRIPTION: Documents the style class for the JavaFX ComboBox control. It inherits all properties and pseudo-classes from ComboBoxBase.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_118

LANGUAGE: APIDOC
CODE:
```
Control: ComboBox
Style Class: combo-box
Inherits: ComboBoxBase
```

----------------------------------------

TITLE: Unicode Script Extensions for Cyrl and Perm
DESCRIPTION: Details Unicode code points associated with the Cyrl and Perm script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_19

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Cyrl Perm

0483          ; Cyrl Perm # Mn       COMBINING CYRILLIC TITLO

# Total code points: 1
```

----------------------------------------

TITLE: Define JavaFX CSS Color-Stop Type
DESCRIPTION: Defines the syntax for color stops in JavaFX CSS, based on W3C color-stop syntax. It specifies that stop distance values must consistently be either percentages or lengths, with specific rules for length values at the first and last stops. Several examples illustrate valid and invalid syntax.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_24

LANGUAGE: APIDOC
CODE:
```
color-stop:
  syntax: ""[ <color> [ <percentage> | <length> ]? ]""
  description: ""Stops are per W3C color-stop syntax.""
  rules:
    - ""In a series of <color-stop>, stop distance values must all be <percentage> or <length>.""
    - ""If <length> values are used, then the distance value for first and last stop in the series must be specified.""
  examples:
    valid:
      - ""red, white 70%, blue"" (distance for red and blue assumed 0% and 100%)
      - ""red 10, white, blue 90"" (distance for white calculated)
      - ""red, white, blue"" (stops distributed evenly between 0% and 100%)
    invalid:
      - ""red, white 70, blue"" (distance units do not agree)
```

----------------------------------------

TITLE: Run Rich Text Area Demos using Ant
DESCRIPTION: These commands demonstrate how to execute various demo applications (Code Area, Notebook, Rich Editor, RichTextArea Tester) from the command line using Ant after the project has been built.
SOURCE: https://github.com/openjdk/jfx/blob/master/apps/samples/RichTextAreaDemo/README.md#_snippet_1

LANGUAGE: Ant
CODE:
```
ant run-codearea-demo
ant run-notebook-demo
ant run-richeditor-demo
ant run-richtextarea-demo
```

----------------------------------------

TITLE: APIDOC: Labeled CSS Reference
DESCRIPTION: Details the CSS properties available for the JavaFX Labeled control, including alignment, text handling, font, graphic display, padding, and text fill. It also notes inheritance from Control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_127

LANGUAGE: APIDOC
CODE:
```
Style Class: labeled

CSS Properties:
  -fx-alignment:
    Values: [ top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right ]
    Default: center-left
    Comments:
  -fx-text-alignment:
    Values: [ left | center | right | justify ]
    Default: left
    Comments: text-align from CSS spec maps to textAlignment in JavaFX
  -fx-text-overrun:
    Values: [ center-ellipsis | center-word-ellipsis | clip | ellipsis | leading-ellipsis | leading-word-ellipsis | word-ellipsis ]
    Default: ellipsis
    Comments:
  -fx-wrap-text:
    Values: <boolean>
    Default: false
    Comments:
  -fx-font:
    Values: <font>
    Default: platform dependent
    Comments: inherits\nThe initial value is that of Font.getDefault()
  -fx-underline:
    Values: <boolean>
    Default: false
    Comments:
  -fx-graphic:
    Values: <uri>
    Default: null
    Comments:
  -fx-content-display:
    Values: [ top | right | bottom | left | center | right | graphic-only | text-only ]
    Default: left
    Comments:
  -fx-graphic-text-gap:
    Values: <size>
    Default: 4
    Comments:
  -fx-label-padding:
    Values: <size> | <size> <size> <size> <size>
    Default: [0,0,0,0]
    Comments:
  -fx-text-fill:
    Values: <paint>
    Default: black
    Comments:
  -fx-ellipsis-string:
    Values: <string>
    Default: ...
    Comments:

Inherits properties of: Control
```

----------------------------------------

TITLE: APIDOC: JavaFX Spinner CSS Properties, Pseudo-classes, and Substructure
DESCRIPTION: Defines the CSS styling options, available pseudo-classes for state-based styling, and the internal component hierarchy of the JavaFX Spinner control. Includes default style class and additional layout-controlling style classes.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_144

LANGUAGE: APIDOC
CODE:
```
Style Class: spinner
Additional Style Classes:
  - arrows-on-right-horizontal: Arrows on right, horizontal
  - arrows-on-left-vertical: Arrows on left, vertical
  - arrows-on-left-horizontal: Arrows on left, horizontal
  - split-arrows-vertical: Arrows above/beneath, full width
  - split-arrows-horizontal: Decrement left, increment right
```

LANGUAGE: APIDOC
CODE:
```
CSS Properties:
  -fx-initial-delay: <duration> (Default: 300ms)
  -fx-repeat-delay: <duration> (Default: 60ms)
Inherits all properties of Control.
```

LANGUAGE: APIDOC
CODE:
```
Pseudo-classes:
Inherits all pseudo-classes of Control.
```

LANGUAGE: APIDOC
CODE:
```
Substructure:
  - text-field: TextField
  - increment-arrow-button: StackPane
    - increment-arrow: Region
  - decrement-arrow-button: StackPane
    - decrement-arrow: Region
```

----------------------------------------

TITLE: ButtonBase Control CSS Reference
DESCRIPTION: Documents the pseudo-classes for the JavaFX ButtonBase control. It inherits all properties from Labeled and defines the 'armed' pseudo-class.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_112

LANGUAGE: APIDOC
CODE:
```
Control: ButtonBase
Inherits: Labeled

Pseudo-classes:
armed | Comments: applies when the armed variable is true
```

----------------------------------------

TITLE: Axis Substructure Elements
DESCRIPTION: Lists the internal substructure elements of the JavaFX Axis control and their corresponding UI components.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_167

LANGUAGE: APIDOC
CODE:
```
Substructure:
  - axis-label: Text
  - axis-tick-mark: Path
```

----------------------------------------

TITLE: Application Key Bindings Reference
DESCRIPTION: This section documents the various keyboard shortcuts available in the application, detailing the key combination, the platform it applies to, any specific conditions for its activation, and the function it performs. Some functions are noted as 'unclear' for further investigation.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/behavior/ListViewBehavior.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
Key Bindings:
  shortcut-A:
    Platform: Any
    Condition: not in combo box
    Function: select all
  shortcut-BACKSLASH:
    Platform: Any
    Condition: None
    Function: clear selection
  DOWN:
    Platform: Any
    Condition: vertical
    Function: select next row
  alt-shortcut-DOWN:
    Platform: Any
    Condition: None
    Function: vertical unit scroll down
  shift-DOWN:
    Platform: Any
    Condition: vertical
    Function: extend selection to the next row
  shift-shortcut-DOWN:
    Platform: Any
    Condition: vertical
    Function: discontinuous select next row (function unclear)
  shortcut-DOWN:
    Platform: Any
    Condition: vertical
    Function: focus next row
  END:
    Platform: Any
    Condition: not editing
    Function: select last row
  shift-END:
    Platform: Any
    Condition: not in edit field
    Function: select to last row (function unclear)
  shift-shortcut-END:
    Platform: Any
    Condition: vertical, not in combo box
    Function: discontinuous select all to last row (win,linux? on mac, END is shortcut-RIGHT) (function unclear)
  shortcut-END:
    Platform: Any
    Condition: not in combo box
    Function: focus last row (win,linux? on mac, END is shortcut-RIGHT) (function unclear)
  ENTER:
    Platform: Any
    Condition: None
    Function: activate editing
  ESCAPE:
    Platform: Any
    Condition: None
    Function: cancel editing
  F2:
    Platform: Any
    Condition: None
    Function: activate editing
  HOME:
    Platform: Any
    Condition: not editing
    Function: select first row
  shift-HOME:
    Platform: Any
    Condition: not in edit field
    Function: select to first row (function unclear)
  shift-shortcut-HOME:
    Platform: Any
    Condition: vertical, not in combo box
    Function: discontinuous select all to first row (win,linux? on mac, HOME is shortcut-LEFT) (function unclear)
  shortcut-HOME:
    Platform: Any
    Condition: not in combo box
    Function: focus first row (win,linux? on mac, HOME is shortcut-LEFT)
  KP_DOWN:
    Platform: Any
    Condition: vertical
    Function: select next row
  shift-KP_DOWN:
    Platform: Any
    Condition: vertical
    Function: extend selection to the next row
  KP_LEFT:
    Platform: Any
    Condition: horizontal
    Function: select previous row
  shift-KP_LEFT:
    Platform: Any
    Condition: horizontal
    Function: extend selection to the previous row
  KP_RIGHT:
    Platform: Any
    Condition: horizontal
    Function: select next row
  shift-KP_RIGHT:
    Platform: Any
    Condition: horizontal
    Function: extend selection to the next row
  KP_UP:
    Platform: Any
    Condition: vertical
    Function: select previous row
  shift-KP_UP:
    Platform: Any
    Condition: vertical
    Function: extend selection to the previous row
  LEFT:
    Platform: Any
    Condition: horizontal
    Function: select previous row
  alt-shortcut-LEFT:
    Platform: Any
    Condition: None
    Function: horizontal unit scroll left
  shift-LEFT:
    Platform: Any
    Condition: horizontal
    Function: extend selection to the previous row
  shift-shortcut-LEFT:
    Platform: Any
    Condition: horizontal
    Function: discontinuous select previous row (function unclear)
  shortcut-LEFT:
    Platform: Any
    Condition: horizontal
    Function: move focus to the previous row
  PAGE_DOWN:
    Platform: Any
    Condition: None
    Function: scroll page down
  shift-PAGE_DOWN:
    Platform: Any
    Condition: None
    Function: select to last row
  shift-shortcut-PAGE_DOWN:
    Platform: Any
    Condition: vertical
    Function: discontinuous select page down (function unclear)
  shortcut-PAGE_DOWN:
    Platform: Any
    Condition: not in edit field
    Function: focus page down
  PAGE_UP:
    Platform: Any
    Condition: None
    Function: scroll page up
  shift-PAGE_UP:
    Platform: Any
    Condition: None
    Function: select to first row
  shift-shortcut-PAGE_UP:
    Platform: Any
    Condition: vertical
    Function: discontinuous select page up (function unclear)
  shortcut-PAGE_UP:
    Platform: Any
    Condition: not in edit field
    Function: focus page up
  RIGHT:
    Platform: Any
    Condition: horizontal
    Function: select next row
  alt-shortcut-RIGHT:
    Platform: Any
    Condition: None
    Function: horizontal unit scroll right
  shift-RIGHT:
    Platform: Any
    Condition: horizontal
    Function: extend selection to the next row
  shift-shortcut-RIGHT:
    Platform: Any
    Condition: horizontal
    Function: discontinuous select next row (function unclear)
  shortcut-RIGHT:
    Platform: Any
    Condition: horizontal
    Function: move focus to the next row
  SPACE:
    Platform: Any
    Condition: None
    Function: activate editing
  ctrl-SPACE:
    Platform: non-mac
    Condition: None
    Function: toggle focus of selected row, set anchor to same
  ctrl-shortcut-SPACE:
    Platform: mac
    Condition: None
    Function: toggle focus of selected row, set anchor to same
  shift-SPACE:
    Platform: Any
    Condition: None
    Function: select all to focus ??
  shift-shortcut-SPACE:
    Platform: Any
    Condition: None
    Function: select all to focus, set anchor (function unclear)
  UP:
    Platform: Any
    Condition: vertical
    Function: select previous row
  alt-shortcut-UP:
    Platform: Any
    Condition: None
    Function: vertical unit scroll up
  shift-UP:
    Platform: Any
    Condition: vertical
    Function: extend selection to the previous row
  shift-shortcut-UP:
    Platform: Any
    Condition: vertical
    Function: discontinuous select previous row (function unclear)
```

----------------------------------------

TITLE: Unicode Script Extensions for Cyrl and Glag
DESCRIPTION: Details Unicode code points associated with the Cyrl and Glag script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_17

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Cyrl Glag

0484          ; Cyrl Glag # Mn       COMBINING CYRILLIC PALATALIZATION
0487          ; Cyrl Glag # Mn       COMBINING CYRILLIC POKRYTIE
2E43          ; Cyrl Glag # Po       DASH WITH LEFT UPTURN
A66F          ; Cyrl Glag # Mn       COMBINING CYRILLIC VZMET

# Total code points: 4
```

----------------------------------------

TITLE: APIDOC: TableView CSS Properties and Pseudo-classes
DESCRIPTION: Documents the CSS properties, pseudo-classes, and internal substructure for styling JavaFX TableView controls, including fixed cell size and selection model states.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_150

LANGUAGE: APIDOC
CODE:
```
Control: TableView
Style Class: table-view

Substructure:
  column-resize-line - Region
  column-overlay - Region
  placeholder - StackPane
  column-header-background - StackPane
    nested-column-header
      column-header
    filler - Region
    show-hide-columns-button - StackPane
      show-hide-column-image - StackPane
    column-drag-header - StackPane
      label - Label
  table-column - TableColumn

CSS Properties:
  -fx-fixed-cell-size:
    Values: <size>
    Default: -1
    Comment: A value greater than zero sets the fixed cell size of the table. A value of zero or less disables fixed cell size.

Pseudo-classes:
  cell-selection: applies if this TableView's selection model is cell selection
  row-selection: applies if this TableView's selection model is row selection
```

----------------------------------------

TITLE: APIDOC: JavaFX CSS Color Syntax
DESCRIPTION: Defines the various accepted syntaxes for specifying colors in JavaFX CSS, including named colors, looked-up colors, RGB colors, HSB colors, and color functions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_41

LANGUAGE: APIDOC
CODE:
```
<color> = <named-color> | <looked-up-color> | <rgb-color> | <hsb-color> | <color-function>
```

----------------------------------------

TITLE: TreeCell CSS Pseudo-classes Reference
DESCRIPTION: Documents the available CSS pseudo-classes for the JavaFX TreeCell control, including their comments. Also notes inheritance from IndexedCell.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_160

LANGUAGE: APIDOC
CODE:
```
Available CSS Pseudo-classes:
  expanded: applies if this cell is expanded
  collapsed: applies if this cell is not expanded
Inherits: IndexedCell
```

----------------------------------------

TITLE: JavaFX Chart Substructure Elements
DESCRIPTION: Defines the internal substructure elements and their corresponding JavaFX Region/Path/Line types for chart plotting.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_179

LANGUAGE: APIDOC
CODE:
```
Substructure:
  plot-content: Group
  chart-plot-background: Region
  chart-alternative-column-fill: Path
  chart-alternative-row-fill: Path
  chart-vertical-grid-lines: Path
  chart-horizontal-grid-lines: Path
  chart-vertical-zero-line: Line
  chart-horizontal-zero-line: Line
```

----------------------------------------

TITLE: Unicode Script Extensions for Cyrl and Latn
DESCRIPTION: Details Unicode code points associated with the Cyrl and Latn script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_18

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Cyrl Latn

0485..0486    ; Cyrl Latn # Mn   [2] COMBINING CYRILLIC DASIA PNEUMATA..COMBINING CYRILLIC PSILI PNEUMATA

# Total code points: 2
```

----------------------------------------

TITLE: APIDOC: JavaFX CSS radial-gradient Function
DESCRIPTION: Defines the syntax and parameters for creating radial color gradients in JavaFX CSS. Specifies focus angle, focus distance, center point, radius, cycle methods, and color stop syntax. Notes default behaviors for center and cycle method.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_34

LANGUAGE: APIDOC
CODE:
```
radial-gradient([ focus-angle <angle>, ]? [ focus-distance <percentage>, ]? [ center <point>, ]? radius [ <length> | <percentage> ] [ [ repeat | reflect ], ]? <color-stop>[, <color-stop>]+)

Description:
  Creates a gradient radiating outward from a center point to a radius.
  Percentage values are relative to the size of the area being filled.
  Percentage and length sizes cannot be mixed in a single gradient function.

Defaults:
  Center: (0,0) if not given.
  CycleMethod: ""NO_CYCLE"" if neither repeat nor reflect are given.

Color Stops:
  Per W3C color-stop syntax (http://dev.w3.org/csswg/css3-images/#color-stop-syntax.) and normalized accordingly.
```

----------------------------------------

TITLE: TreeTableCell CSS Pseudo-classes Reference
DESCRIPTION: Documents the available CSS pseudo-classes for the JavaFX TreeTableCell control, including their comments. Also notes inheritance from IndexedCell.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_162

LANGUAGE: APIDOC
CODE:
```
Available CSS Pseudo-classes:
  last-visible: true if this is the last visible cell, typically the right-most cell in the TreeTableView
Inherits: IndexedCell
```

----------------------------------------

TITLE: Unicode Script Extensions for Cyrl and Syrc
DESCRIPTION: Details Unicode code points associated with the Cyrl and Syrc script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_20

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Cyrl Syrc

1DF8          ; Cyrl Syrc # Mn       COMBINING DOT ABOVE LEFT

# Total code points: 1
```

----------------------------------------

TITLE: Unicode Script Extensions for Nand
DESCRIPTION: Details Unicode code points associated with the Nand script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_6

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Nand

1CFA          ; Nand # Lo       VEDIC SIGN DOUBLE ANUSVARA ANTARGOMUKHA

# Total code points: 1
```

----------------------------------------

TITLE: Displaying Configuration Script Options (JScript)
DESCRIPTION: This command runs the JScript configuration script with the 'help' option to display all available build configuration options and their brief explanations. It helps users understand how to customize the build process.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/win32/Readme.txt#_snippet_0

LANGUAGE: Batch
CODE:
```
cscript configure.js help
```

----------------------------------------

TITLE: APIDOC: TextArea CSS Properties and Substructure
DESCRIPTION: Details the CSS properties for styling JavaFX TextArea controls, including preferred column/row counts, text wrapping, and its internal ScrollPane substructure.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_151

LANGUAGE: APIDOC
CODE:
```
Control: TextArea
Style Class: text-area

Substructure:
  scroll-pane - ScrollPane
    content - Region

CSS Properties:
  -fx-pref-column-count:
    Values: number
    Default: 40
  -fx-pref-row-count:
    Values: number
    Default: 10
  -fx-wrap-text:
    Values: boolean
    Default: false
```

----------------------------------------

TITLE: Installing Software with Microsoft Visual C/C++ (NMAKE)
DESCRIPTION: This command installs the compiled software into the directory specified during the configuration stage. It uses the NMAKE utility and the 'Makefile.msvc' to perform the installation steps.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/win32/Readme.txt#_snippet_5

LANGUAGE: Batch
CODE:
```
nmake /f Makefile.msvc install
```

----------------------------------------

TITLE: Unicode Script Extensions for Geor and Latn
DESCRIPTION: Details Unicode code points associated with the Geor and Latn script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_25

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Geor Latn

10FB          ; Geor Latn # Po       GEORGIAN PARAGRAPH SEPARATOR
```

----------------------------------------

TITLE: APIDOC: JavaFX Slider CSS Properties, Pseudo-classes, and Substructure
DESCRIPTION: Details the CSS properties for customizing the appearance and behavior of the JavaFX Slider control, its specific pseudo-classes for orientation, and its internal component structure.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_145

LANGUAGE: APIDOC
CODE:
```
Style Class: slider
```

LANGUAGE: APIDOC
CODE:
```
CSS Properties:
  -fx-orientation: [ horizontal | vertical ] (Default: horizontal)
  -fx-show-tick-labels: <boolean> (Default: false)
  -fx-show-tick-marks: <boolean> (Default: false)
  -fx-major-tick-unit: <number> (Default: 25)
  -fx-minor-tick-count: <integer> (Default: 3)
  -fx-snap-to-ticks: <boolean> (Default: false)
  -fx-block-increment: <integer> (Default: 10)
Inherits all properties of Control.
```

LANGUAGE: APIDOC
CODE:
```
Pseudo-classes:
  - horizontal: Applies if Slider is horizontal
  - vertical: Applies if Slider is vertical
Inherits all pseudo-classes of Control.
```

LANGUAGE: APIDOC
CODE:
```
Substructure:
  - axis: NumberAxis
  - track: Region
  - thumb: Region
```

----------------------------------------

TITLE: Run Specific libpas Test Cases with test_pas
DESCRIPTION: Examples of how to use the `test_pas` binary to run specific test cases or groups of tests. This allows for focused testing and debugging of individual functionalities without running the entire test suite.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/ReadMe.md#_snippet_7

LANGUAGE: Shell
CODE:
```
./test_pas 'JITHeapTests' # Run all JIT heap tests
./test_pas 'testPGMSingleAlloc()' # Run specific test
./test_pas '(1):' # Run test case 1
```

----------------------------------------

TITLE: Unicode Script Extensions for Syrc
DESCRIPTION: Details Unicode code points associated with the Syrc script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_7

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Syrc

1DFA          ; Syrc # Mn       COMBINING DOT BELOW LEFT

# Total code points: 1
```

----------------------------------------

TITLE: APIDOC: JavaFX CSS repeating-image-pattern Function
DESCRIPTION: Documents the repeating-image-pattern function in JavaFX CSS, which serves as a shorthand for creating tiled image-based fills. It is equivalent to image-pattern with specific default parameters for tiling.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_39

LANGUAGE: APIDOC
CODE:
```
repeating-image-pattern(<string>)

Parameters:
  <string>: The URI of the image.

Equivalence:
  Equivalent to image-pattern(""images/Duke.png"", 0, 0, imageWidth, imageHeight, false)
```

----------------------------------------

TITLE: FXML Object Instantiation with Builders
DESCRIPTION: Demonstrates how FXML uses the builder design pattern to create instances of classes that do not conform to standard Bean conventions, such as immutable types. Examples show both attribute-based and nested-element syntax for instantiating a `javafx.scene.paint.Color` object.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_8

LANGUAGE: FXML
CODE:
```
<Color red=""1.0"" green=""0.0"" blue=""0.0""/>
```

LANGUAGE: FXML
CODE:
```
<Color>
    <red>1.0</red>
    <green>0.0</green>
    <blue>0.0</blue>
</Color>
```

----------------------------------------

TITLE: Define HSB Color Model Syntax
DESCRIPTION: Outlines the functional notation for HSB and HSBA color specifications, including parameters for hue, saturation, brightness, and an optional alpha channel.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_48

LANGUAGE: APIDOC
CODE:
```
HSB Color Model Syntax:
  hsb( <number>, <number>%, <number>% )
  hsba( <number>, <number>%, <number>%, <number> )
```

----------------------------------------

TITLE: Emoji Sequence Data File Format and Fields
DESCRIPTION: Describes the line-by-line format of the `emoji-sequences.txt` file, specifying the components like code points, type fields, and short names, along with the allowed values for the `type_field`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/emoji-sequences.txt#_snippet_0

LANGUAGE: APIDOC
CODE:
```
Format:
  code_point(s) ; type_field ; description # comments
Fields:
  code_point(s): one or more code points in hex format, separated by spaces
  type_field, one of the following:
      Basic_Emoji
      Emoji_Keycap_Sequence
      RGI_Emoji_Flag_Sequence
      RGI_Emoji_Tag_Sequence
      RGI_Emoji_Modifier_Sequence
    The type_field is a convenience for parsing the emoji sequence files, and is not intended to be maintained as a property.
  short name: CLDR short name of sequence; characters may be escaped with \x{hex}.
```

----------------------------------------

TITLE: FXML Location Resolution for Image Resources
DESCRIPTION: Demonstrates how to specify image locations relative to the current FXML file using the '@' prefix. Includes examples of nested and direct attribute usage, and proper URL encoding for whitespace.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_24

LANGUAGE: FXML
CODE:
```
<ImageView>
    <image>
        <Image url=""@my_image.png""/>
    </image>
</ImageView>
```

LANGUAGE: FXML
CODE:
```
<ImageView image=""@my_image.png""/>
```

LANGUAGE: FXML
CODE:
```
<Image url=""@My%20Image.png""/>
```

LANGUAGE: FXML
CODE:
```
<Image url=""@My Image.png""/>
```

----------------------------------------

TITLE: Example Usage of Python-based WebAssembly Header Generation
DESCRIPTION: These commands demonstrate the practical application of the GENERATE_PYTHON macro. They are used to generate WasmOps.h and WasmOMGIRGeneratorInlines.h from wasm.json using specific Python scripts located in the wasm directory.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_35

LANGUAGE: CMake
CODE:
```
GENERATE_PYTHON(${CMAKE_CURRENT_SOURCE_DIR}/wasm/generateWasmOpsHeader.py ${CMAKE_CURRENT_SOURCE_DIR}/wasm/generateWasm.py ${CMAKE_CURRENT_SOURCE_DIR}/wasm/wasm.json ${JavaScriptCore_DERIVED_SOURCES_DIR}/WasmOps.h)
GENERATE_PYTHON(${CMAKE_CURRENT_SOURCE_DIR}/wasm/generateWasmOMGIRGeneratorInlinesHeader.py ${CMAKE_CURRENT_SOURCE_DIR}/wasm/generateWasm.py ${CMAKE_CURRENT_SOURCE_DIR}/wasm/wasm.json ${JavaScriptCore_DERIVED_SOURCES_DIR}/WasmOMGIRGeneratorInlines.h)
```

----------------------------------------

TITLE: SampleMap Data Structure for MediaSamples
DESCRIPTION: Describes SampleMap as a high-performance, binary-tree storage structure specifically designed for holding MediaSamples. It explains its dual internal structure, containing both a decodeOrder() map (for decoder requirements) and a presentationOrder() map (for Media Source Extension algorithms), to accommodate different ordering needs.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediasource/README.md#_snippet_6

LANGUAGE: APIDOC
CODE:
```
Class: SampleMap
  Description: High-performance, binary-tree storage structure for holding MediaSamples.
  Internal Structure:
    decodeOrder() map: Binary tree for samples ordered by decode time (required by decoders).
    presentationOrder() map: Binary tree for samples ordered by presentation time (used by Media Source Extension algorithms).
  Purpose: Accommodates different ordering requirements (decode-time vs. presentation-time) for media samples.
  Source Files:
    SampleMap.h
    SampleMap.cpp
```

----------------------------------------

TITLE: Parent Node CSS Properties and Pseudo-classes
DESCRIPTION: Describes the CSS styling characteristics of the `Parent` node in JavaFX, highlighting its inheritance from `Node` and the specific `:root` pseudo-class applicable to it.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_63

LANGUAGE: APIDOC
CODE:
```
Parent:
  Style Class: empty by default
  Inheritance: extends Node
  CSS Properties:
    - Inherits all properties from Node.
    - No additional CSS properties specific to Parent.
  CSS Pseudo-classes:
    root:
      Comments: applies when the `Parent` is the root node of a `Scene` or `SubScene`
    - Inherits all pseudo-classes from Node.
```

----------------------------------------

TITLE: JavaFX StackPane CSS Properties
DESCRIPTION: Specifies CSS properties for the `StackPane` layout container, primarily focusing on content alignment. Inherits properties from `Pane`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_93

LANGUAGE: APIDOC
CODE:
```
-fx-alignment:
  Values: [ top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right ]
  Default: top-left
  Comments: 

Inherits all properties of Pane.
```

----------------------------------------

TITLE: Build and Test with Make
DESCRIPTION: These commands use the project's Makefile to build the double-conversion library and then execute its test suite. The Makefile internally forwards to scons.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WTF/wtf/dtoa/README.md#_snippet_0

LANGUAGE: bash
CODE:
```
make
```

LANGUAGE: bash
CODE:
```
make test
```

----------------------------------------

TITLE: Update Gradle Wrapper Command
DESCRIPTION: Execute this bash command to update the Gradle wrapper to a specified version. Replace 'VERSION' with the desired Gradle release number.
SOURCE: https://github.com/openjdk/jfx/blob/master/gradle/UPDATING.txt#_snippet_0

LANGUAGE: bash
CODE:
```
gradlew wrapper --gradle-version VERSION
```

----------------------------------------

TITLE: Unicode Script Extensions for Arab and Copt
DESCRIPTION: Details Unicode code points associated with the Arab and Copt script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_8

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Arab Copt

102E0         ; Arab Copt # Mn       COPTIC EPACT THOUSANDS MARK
102E1..102FB  ; Arab Copt # No  [27] COPTIC EPACT DIGIT ONE..COPTIC EPACT NUMBER NINE HUNDRED

# Total code points: 28
```

----------------------------------------

TITLE: Axis CSS Properties Reference
DESCRIPTION: Documents the available CSS properties for the JavaFX Axis control, including their values, default settings, and comments. Notes inheritance from Region.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_166

LANGUAGE: APIDOC
CODE:
```
Style Class: axis
Available CSS Properties:
  -fx-side: Side (Default: null)
  -fx-tick-length: [<size>] (Default: 8)
  -fx-tick-label-font: [<font>] (Default: 8 system)
  -fx-tick-label-fill: [<paint>] (Default: black)
  -fx-tick-label-gap: [<size>] (Default: 3)
  -fx-tick-mark-visible: [<boolean>] (Default: true)
  -fx-tick-labels-visible: [<boolean>] (Default: true)
Inherits: Region
```

----------------------------------------

TITLE: Node CSS Properties Reference
DESCRIPTION: Comprehensive list of CSS properties applicable to the `Node` class in JavaFX, including their possible values, default settings, ranges, and explanatory comments.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_61

LANGUAGE: APIDOC
CODE:
```
Node CSS Properties:
  Style Class: empty by default
  -fx-blend-mode:
    Values: [ add | blue | color-burn | color-dodge | darken | difference | exclusion | green | hard-light | lighten | multiply | overlay | red | screen | soft-light | src-atop | src-in | src-out | src-over ]
    Default: null
    Comments: """"
  -fx-cursor:
    Values: [ null | crosshair | default | hand | move | e-resize | h-resize | ne-resize | nw-resize | n-resize | se-resize | sw-resize | s-resize | w-resize | v-resize | text | wait ] | [<url>]
    Default: null
    Comments: inherits
  -fx-effect:
    Values: [<effect>]
    Default: null
    Comments: """"
  -fx-focus-traversable:
    Values: [<boolean>]
    Default: false
    Comments: The default value for controls is true, although there are some exceptions. See Control for details.
  -fx-view-order:
    Values: [<number>]
    Default: 0
    Comments: This property is used to alter the rendering and picking order of a node within its parent without reordering the parent's children list. The parent traverses its children in decreasing viewOrder order.
  -fx-opacity:
    Values: [<number>]
    Default: 1
    Range: [0.0 ... 1.0]
    Comments: Opacity can be thought of conceptually as a postprocessing operation. Conceptually, after the node (including its descendants) is rendered into an RGBA offscreen image, the opacity setting specifies how to blend the offscreen rendering into the current composite rendering.
  -fx-rotate:
    Values: [<number>]
    Default: 0
    Comments: This is the angle of the rotation in degrees. Zero degrees is at 3 o'clock (directly to the right). Angle values are positive clockwise. Rotation is about the center.
  -fx-scale-x:
    Values: [<number>]
    Default: 1
    Comments: scale about the center
  -fx-scale-y:
    Values: [<number>]
    Default: 1
    Comments: scale about the center
  -fx-scale-z:
    Values: [<number>]
    Default: 1
    Comments: scale about the center
  -fx-translate-x:
    Values: [<number>]
    Default: 0
    Comments: """"
  -fx-translate-y:
    Values: [<number>]
    Default: 0
    Comments: """"
  -fx-translate-z:
    Values: [<number>]
    Default: 0
    Comments: """"
  visibility:
    Values: [ visible | hidden | collapse | inherit ]
    Default: true (i.e, visible)
    Comments: See W3C visibility property
  -fx-managed:
    Values: [<boolean>]
    Default: true
    Comments: Defines whether this node's layout will be managed by its parent
```

----------------------------------------

TITLE: Define RGB Color Model Syntax
DESCRIPTION: Specifies the supported numerical formats for RGB color definitions, including hexadecimal, decimal, and percentage values, with and without an alpha channel.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_45

LANGUAGE: APIDOC
CODE:
```
RGB Color Model Syntax:
  #<digit><digit><digit>
  #<digit><digit><digit><digit><digit><digit>
  rgb( <integer>, <integer>, <integer> )
  rgb( <integer>%, <integer>%, <integer>% )
  rgba( <integer>, <integer>, <integer>, <number> )
  rgba( <integer>%, <integer>%, <integer>%, <number> )
```

----------------------------------------

TITLE: API: Named Backreference Second State (Letter Expected)
DESCRIPTION: Handles the second step of named backreference parsing, expecting an ASCII letter to continue building the name. Any other input results in an error.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_21

LANGUAGE: APIDOC
CODE:
```
State: named-backref-2
  Transitions:
    - Input: ascii_letter
      Consume Input: false
      Next State: named-backref-3
      Action: doContinueNamedBackRef
    - Input: default
      Consume Input: true
      Next State: (error)
      Action: errorDeath (doBadNamedCapture)
```

----------------------------------------

TITLE: Allowed java.lang.Class Methods for JavaScript in WebEngine
DESCRIPTION: This section specifies the `java.lang.Class` methods that JavaScript programs running within a `WebEngine` context are permitted to call. These restrictions are in place to enhance security and control the interaction between JavaScript and Java objects, limiting access to reflective capabilities.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-15.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
getCanonicalName
getEnumConstants
getFields
getMethods
getName
getPackageName
getSimpleName
getSuperclass
getTypeName
getTypeParameters
isAssignableFrom
isArray
isEnum
isInstance
isInterface
isLocalClass
isMemberClass
isPrimitive
isSynthetic
toGenericString
toString
```

----------------------------------------

TITLE: Extract Exported Symbols from Borland DLL
DESCRIPTION: Command to list exported names from a Borland-generated DLL, useful for manually creating a .def file for compatibility.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/win32/Readme.txt#_snippet_9

LANGUAGE: Shell
CODE:
```
DUMPBIN /EXPORTS /OUT:libxml2.tmp libxml2.dll
```

----------------------------------------

TITLE: Build and Test libpas for M1 Architecture
DESCRIPTION: Example command for building and testing libpas specifically for the `arm64e` architecture on an M1 machine. This avoids building fat binaries that include multiple architectures, optimizing the build process for a specific target.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/ReadMe.md#_snippet_4

LANGUAGE: Shell
CODE:
```
./build_and_test.sh -a arm64e
```

----------------------------------------

TITLE: API: Named Backreference Initial State
DESCRIPTION: Defines the initial state for parsing named backreferences. It expects an opening angle bracket '<' to proceed, otherwise, it triggers an error.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_20

LANGUAGE: APIDOC
CODE:
```
State: named-backref
  Transitions:
    - Input: '<'
      Consume Input: false
      Next State: named-backref-2
      Action: doBeginNamedBackRef
    - Input: default
      Consume Input: true
      Next State: (error)
      Action: errorDeath (doBadNamedCapture)
```

----------------------------------------

TITLE: JavaFX CSS Property: -fx-region-border
DESCRIPTION: Represents the border of a region, created from various -fx-border-* properties. It cannot be set directly from CSS.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_81

LANGUAGE: APIDOC
CODE:
```
-fx-region-border:
  Type: javafx.scene.layout.Border
  Default: null
  Description: This cannot be set directly from CSS but is created from the property values of -fx-border-color, -fx-border-insets, -fx-border-radius, -fx-border-style, -fx-border-width, -fx-border-image-insets, -fx-border-image-repeat, -fx-border-image-slice, -fx-border-image-source, -fx-border-image-width
```

----------------------------------------

TITLE: Unicode Script Extensions for Arab and Nkoo
DESCRIPTION: Details Unicode code points associated with the Arab and Nkoo script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_9

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Arab Nkoo

FD3E          ; Arab Nkoo # Pe       ORNATE LEFT PARENTHESIS
FD3F          ; Arab Nkoo # Ps       ORNATE RIGHT PARENTHESIS

# Total code points: 2
```

----------------------------------------

TITLE: CSS Properties for DialogPane Control
DESCRIPTION: Documents the CSS properties for the DialogPane control in JavaFX, including its specific properties and substructure. DialogPane inherits properties from Pane.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_68

LANGUAGE: APIDOC
CODE:
```
Control: DialogPane
Style Class: dialog-pane
Properties:
  - Name: -fx-graphic
    Values: <uri>
    Default: null
    Comments:
Inherits: Pane properties
Substructure:
  - header-panel (BoderPane)
    - graphic-container (StackPane)
  - content (Label)
  - button-bar (ButtonBar)
```

----------------------------------------

TITLE: Build libxml2 with GNU Autotools
DESCRIPTION: Instructions for building libxml2 on POSIX systems using GNU Autotools. This includes steps for generating configuration files, configuring with various options, compiling, testing, and installing the library. Ensure Autotools are installed if building from a Git tree.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/README.md#_snippet_0

LANGUAGE: Shell
CODE:
```
./autogen.sh [configuration options]
```

LANGUAGE: Shell
CODE:
```
tar xf libxml2-xxx.tar.gz
cd libxml2-xxx
```

LANGUAGE: Shell
CODE:
```
./configure [configuration options]
make
```

LANGUAGE: Shell
CODE:
```
CFLAGS='-O2 -fno-semantic-interposition' ./configure
```

LANGUAGE: Shell
CODE:
```
make check
```

LANGUAGE: Shell
CODE:
```
make install
```

----------------------------------------

TITLE: RadioMenuItem CSS Pseudo-classes
DESCRIPTION: Documents the CSS pseudo-classes available for styling the JavaFX RadioMenuItem control. It specifies the 'selected' pseudo-class for indicating the item's state.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_140

LANGUAGE: APIDOC
CODE:
```
RadioMenuItem:
  Available CSS Pseudo-classes:
    selected: applies if this item is selected
```

----------------------------------------

TITLE: Fetch XML Data with XMLHttpRequest in JavaScript
DESCRIPTION: This JavaScript snippet uses the XMLHttpRequest object to synchronously fetch content from 'data.xml'. It then updates the innerHTML of an element with the ID 'target' with the retrieved text. This method is synchronous, which can block the main thread and is generally discouraged for network requests in modern web development.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/test/resources/test/html/sync-request.html#_snippet_0

LANGUAGE: JavaScript
CODE:
```
var xhttp = new XMLHttpRequest(); xhttp.open(""GET"", ""data.xml"", false); xhttp.send(); document.getElementById(""target"").innerHTML = xhttp.responseText;
```

----------------------------------------

TITLE: Build HelloFXCanvas with Gradle
DESCRIPTION: Instructions to build the HelloFXCanvas application using the 'apps' task within the root Gradle project.
SOURCE: https://github.com/openjdk/jfx/blob/master/apps/toys/HelloFXCanvas/README.txt#_snippet_0

LANGUAGE: Shell
CODE:
```
gradle apps
```

----------------------------------------

TITLE: JavaFX CSS Type: <size>
DESCRIPTION: Describes the `<size>` type in JavaFX CSS, which combines a number with length or percentage units. If no unit is specified, 'px' is assumed.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_18

LANGUAGE: APIDOC
CODE:
```
Syntax: <number><length> | <number><percentage>
Default unit: 'px' if not specified
```

----------------------------------------

TITLE: Compiling with Microsoft Visual C/C++ (NMAKE)
DESCRIPTION: After configuration, this command initiates the compilation process using the NMAKE utility for Microsoft Visual C/C++. It uses the 'Makefile.msvc' file to build the software. Executable files will be found in the 'win32\bin.msvc' directory.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/win32/Readme.txt#_snippet_2

LANGUAGE: Batch
CODE:
```
nmake /f Makefile.msvc
```

----------------------------------------

TITLE: JavaFX CSS Parser Limitations
DESCRIPTION: This section details the specific limitations and non-compliance aspects of the JavaFX CSS parser compared to standard CSS. It covers unsupported pseudo-classes, ignored @-keywords, font property restrictions, and URI parsing behaviors.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_13

LANGUAGE: APIDOC
CODE:
```
1. Not a fully compliant CSS parser; syntax not specified in this document may not be handled.
2. @-keyword statements ignored, except @font-face and @import.
3. <media-query-list> of @import statement not parsed.
4. "":active"" and "":focus"" dynamic pseudo-classes not supported; "":pressed"" and "":focused"" are supported.
5. "":link"" and "":visited"" pseudo-classes not generally supported, but Hyperlink objects support "":visited"".
6. No comma-separated font family names in -fx-font-family; no optional line height; no font-variant equivalent.
7. Uses HSB color model instead of HSL.
8. User-set property values (via set method) are not overwritten by user agent style sheets.
9. URI parser does not handle URI escapes nor \<hex-digit>[1,6] code points.
10. Does not combine short-hand and long-hand property notations in a single declaration block.
```

----------------------------------------

TITLE: JavaFX CSS Type: <percentage>
DESCRIPTION: Explains the `<percentage>` type in JavaFX CSS, which represents a percentage of a length, typically related to a node's width or height.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_20

LANGUAGE: APIDOC
CODE:
```
Syntax: <number>[ % ]
```

----------------------------------------

TITLE: Unicode Script Extensions for Arab and Rohg
DESCRIPTION: Details Unicode code points associated with the Arab and Rohg script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_10

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Arab Rohg

06D4          ; Arab Rohg # Po       ARABIC FULL STOP

# Total code points: 1
```

----------------------------------------

TITLE: JavaFX CSS Property: -fx-background-image
DESCRIPTION: Sets one or more background images using URIs, separated by commas. The default value is null.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_77

LANGUAGE: APIDOC
CODE:
```
-fx-background-image:
  Syntax: [<uri>] [ , [<uri>]]*
  Default: null
  Description: A series of image URIs separated by commas.
```

----------------------------------------

TITLE: Conditionally Enable API Unit Tests
DESCRIPTION: Checks if the 'ENABLE_API_TESTS' CMake variable is true. If so, it enables testing support using the 'enable_testing()' command, which is necessary for CTest to discover and run unit tests.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/CMakeLists.txt#_snippet_2

LANGUAGE: CMake
CODE:
```
if (ENABLE_API_TESTS)
    enable_testing()
endif ()
```

----------------------------------------

TITLE: APIDOC: TextField CSS Properties
DESCRIPTION: Specifies the unique CSS properties for JavaFX TextField controls, including text alignment and preferred column count, in addition to properties inherited from TextInputControl.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_153

LANGUAGE: APIDOC
CODE:
```
Control: TextField
Style Class: text-field

CSS Properties:
  -fx-alignment:
    Values: [ top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right ]
    Default: center-left
  -fx-pref-column-count:
    Values: number
    Default: 12
```

----------------------------------------

TITLE: AreaChart CSS Style Classes Reference
DESCRIPTION: Documents the available CSS style classes for the JavaFX AreaChart control, including their comments and associated UI components. Also notes inheritance from XYChart.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_165

LANGUAGE: APIDOC
CODE:
```
Available Style Classes:
  ""chart-series-area-line series<i> default-color<j>"": Where <i> is the index of the series and <j> is the series’ color index. (Properties: Node)
  ""chart-series-area-fill series<i> default-color<j>"": Where <i> is the index of the series and <j> is the series’ color index. (Properties: Path)
  ""chart-area-symbol series<i> data<j> default-color<k>"": Where <i> is the index of the series, <j> is the index of the data within the series, and <k> is the series’ color index (Properties: Path)
  ""chart-area-symbol series<i> area-legend-symbol default-color<j>"": Where <i> is the index of the series and <j> is the series’ color index (Properties: LegendItem)
Inherits: XYChart
```

----------------------------------------

TITLE: Generate MSVC Import Library from Borland DLL .def file
DESCRIPTION: Command to create an import library for MSVC from a Borland-generated DLL's .def file, addressing compatibility issues between OMF and COFF formats.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/win32/Readme.txt#_snippet_8

LANGUAGE: Shell
CODE:
```
LIB /DEF:libxml2.def
```

----------------------------------------

TITLE: Group Node CSS Properties and Inheritance
DESCRIPTION: Details the CSS styling capabilities of the `Group` node in JavaFX, noting its inheritance from `Parent` and lack of additional specific CSS properties.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_60

LANGUAGE: APIDOC
CODE:
```
Group:
  Style Class: empty by default
  Inheritance: extends Parent
  CSS Properties:
    - Inherits all properties from Parent.
    - No additional CSS properties specific to Group.
```

----------------------------------------

TITLE: Apache License 2.0 Boilerplate Notice
DESCRIPTION: This snippet provides the standard boilerplate notice for applying the Apache License, Version 2.0. Users should replace bracketed placeholders with their specific information and embed the text using the appropriate comment syntax for their file format. This notice ensures proper licensing and attribution for derivative works.
SOURCE: https://github.com/openjdk/jfx/blob/master/apps/samples/Ensemble8/legal/lucene.md#_snippet_0

LANGUAGE: Plaintext
CODE:
```
Copyright [yyyy] [name of copyright owner]

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```

----------------------------------------

TITLE: CSS Properties for HBox Layout
DESCRIPTION: Documents the CSS properties for the HBox layout container in JavaFX, detailing properties for spacing, alignment, and fill height. HBox inherits properties from Pane.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_71

LANGUAGE: APIDOC
CODE:
```
Control: HBox
Style Class: empty by default
Properties:
  - Name: -fx-spacing
    Values: <size>
    Default: 0
    Comments:
  - Name: -fx-alignment
    Values: [ top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right ]
    Default: top-left
    Comments:
  - Name: -fx-fill-height
    Values: <boolean>
    Default: true
    Comments:
Inherits: Pane properties
```

----------------------------------------

TITLE: Button Control CSS Reference
DESCRIPTION: Documents the style class and pseudo-classes for the JavaFX Button control. It inherits all properties from ButtonBase and defines specific pseudo-classes for cancel and default actions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_111

LANGUAGE: APIDOC
CODE:
```
Control: Button
Style Class: button
Inherits: ButtonBase

Pseudo-classes:
cancel | Comments: applies if this Button receives VK_ESC if the event is not otherwise consumed
default | Comments: applies if this Button receives VK_ENTER if the event is not otherwise consumed
```

----------------------------------------

TITLE: Unicode Script Extensions for Arab and Thaa
DESCRIPTION: Details Unicode code points associated with the Arab and Thaa script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_12

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Arab Thaa

FDF2          ; Arab Thaa # Lo       ARABIC LIGATURE ALLAH ISOLATED FORM
FDFD          ; Arab Thaa # So       ARABIC LIGATURE BISMILLAH AR-RAHMAN AR-RAHEEM

# Total code points: 2
```

----------------------------------------

TITLE: Configure libxml2 for Borland C++ Builder
DESCRIPTION: Instructions on how to configure libxml2 specifically for compilation with Borland C++ Builder by specifying the ""compiler=bcb"" option during the configure script execution.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/win32/Readme.txt#_snippet_6

LANGUAGE: Shell
CODE:
```
configure compiler=bcb
```

----------------------------------------

TITLE: JavaFX CSS Property: -fx-background-size
DESCRIPTION: Sets the size of the background images. It accepts a series of <bg-size> values, each applying to a corresponding image.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_80

LANGUAGE: APIDOC
CODE:
```
-fx-background-size:
  Syntax: <bg-size> [ , <bg-size> ]*
  <bg-size> = [ [<size>] | auto ]{1,2} | cover | contain | stretch
  Default: auto auto
  Description: A series of <bg-size> values separated by commas. Each bg-size item in the series applies to the corresponding image in the background-image series.
```

----------------------------------------

TITLE: JavaFX CSS Property: -fx-background-repeat
DESCRIPTION: Defines how background images are repeated. It takes a series of <repeat-style> values, each applying to a corresponding image.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_79

LANGUAGE: APIDOC
CODE:
```
-fx-background-repeat:
  Syntax: <repeat-style> [ , <repeat-style> ]*
  where <repeat-style> = repeat-x | repeat-y | [repeat | space | round | stretch | no-repeat]{1,2}
  Default: repeat repeat
  Description: A series of <repeat-style> values separated by commas. Each repeat-style item in the series applies to the corresponding image in the background-image series.
```

----------------------------------------

TITLE: JavaScript Web Worker Lifecycle Management
DESCRIPTION: This snippet provides functions to control a Web Worker. The `startWorker` function initializes a new Worker instance (if one doesn't exist) and sets up an `onmessage` handler to display data from the worker. The `stopWorker` function terminates the worker and clears its reference. It requires a `worker.js` file for the worker's script and an HTML element with `id=""result""` to display messages.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/test/resources/test/html/worker.html#_snippet_0

LANGUAGE: JavaScript
CODE:
```
var work; function startWorker() { if (typeof(Worker) !== ""undefined"") { if (typeof(work) == ""undefined"") { work = new Worker(""worker.js""); } work.onmessage = function(event) { document.getElementById(""result"").innerHTML = event.data; }; } } function stopWorker() { work.terminate(); work = undefined; }
```

----------------------------------------

TITLE: JavaFX CSS Type: <boolean>
DESCRIPTION: Describes the syntax and characteristics of boolean values in JavaFX CSS. Boolean values are case-insensitive and can be 'true' or 'false'.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_15

LANGUAGE: APIDOC
CODE:
```
Boolean values: ""true"" or ""false"" (case-insensitive)
```

----------------------------------------

TITLE: JavaFX Builder Interface Definition
DESCRIPTION: Defines the `javafx.util.Builder` interface, a core component of the builder design pattern. This interface specifies a single `build()` method responsible for constructing the final object instance.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_6

LANGUAGE: Java
CODE:
```
public interface Builder<T> {
    public T build();
}
```

----------------------------------------

TITLE: Calling Specialized Functions in Libpas Heap Configurations
DESCRIPTION: These examples demonstrate various methods for invoking specialized functions within the `pas_heap_config` structure. They show direct calls when the configuration is a compile-time constant (often via a macro), virtual calls when accessing through a pointer, and direct calls when the config is a known constant at compile time.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/Documentation.md#_snippet_0

LANGUAGE: C/C++
CODE:
```
BMALLOC_HEAP_CONFIG.specialized_local_allocator_try_allocate_small_segregated_slow(...);
```

LANGUAGE: C/C++
CODE:
```
const pas_heap_config* config = ...;
config->specialized_local_allocator_try_allocate_small_segregated_slow(...);
```

LANGUAGE: C/C++
CODE:
```
config.specialized_local_allocator_try_allocate_small_segregated_slow(...);
```

----------------------------------------

TITLE: FXML Object Instantiation with fx:value
DESCRIPTION: Illustrates the use of the `fx:value` attribute to initialize objects whose classes lack a default constructor but provide a static `valueOf(String)` method. Examples include `String`, `Double`, and `Boolean`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_4

LANGUAGE: FXML
CODE:
```
<String fx:value=""Hello, World!""/>
<Double fx:value=""1.0""/>
<Boolean fx:value=""false""/>
```

----------------------------------------

TITLE: WebView CSS Properties Reference
DESCRIPTION: Documents the CSS properties available for styling the JavaFX WebView component, including context menu, font smoothing, page fill, font scale, and size constraints. Inherits properties from Parent.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_109

LANGUAGE: APIDOC
CODE:
```
Control: WebView
Style Class: web-view
Inherits: Parent

CSS Properties:
-fx-context-menu-enabled | Values: <boolean> | Default: true | Comments: 
-fx-font-smoothing-type | Values: [ gray | lcd ] | Default: lcd | Comments: 
-fx-page-fill | Values: <color> | Default: white | Comments: 
-fx-font-scale | Values: <number> | Default: 1 | Comments: 
-fx-min-width | Values: <size> | Default: 0 | Comments: 
-fx-min-height | Values: <size> | Default: 0 | Comments: 
-fx-pref-width | Values: <size> | Default: 800 | Comments: 
-fx-pref-height | Values: <size> | Default: 600 | Comments: 
-fx-max-width | Values: <size> | Default: Double.MAX_VALUE | Comments: 
-fx-max-height | Values: <size> | Default: Double.MAX_VALUE | Comments: 
```

----------------------------------------

TITLE: External JavaScript File for FXML Event Handler
DESCRIPTION: Provides the content of an external JavaScript file ('example.js') containing the 'handleButtonAction' function. This function can be referenced from an FXML document that links to this script, allowing for cleaner code organization.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_43

LANGUAGE: JavaScript
CODE:
```
function handleButtonAction(event) {
   java.lang.System.out.println('You clicked me!');
}
```

----------------------------------------

TITLE: TreeCell CSS Properties Reference
DESCRIPTION: Documents the available CSS properties for the JavaFX TreeCell control, including their values, default settings, and comments. Also notes inheritance from IndexedCell.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_159

LANGUAGE: APIDOC
CODE:
```
Style Class: tree-cell
Available CSS Properties:
  -fx-indent: [<size>] (Default: 10) The amount of space to multiply by the treeItem.level to get the left margin
Inherits: IndexedCell
```

----------------------------------------

TITLE: Compiling with Borland C++ Builder (BMAKE)
DESCRIPTION: This command is used to compile the software with Borland C++ Builder, utilizing the 'Makefile.bcb' build file. The resulting executables will be located in the 'win32\bin.bcb' directory.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/win32/Readme.txt#_snippet_4

LANGUAGE: Batch
CODE:
```
bmake -f Makefile.bcb
```

----------------------------------------

TITLE: Inline Allocation Fast Path Example (C)
DESCRIPTION: Illustrates an inline-only fast path for memory allocation in libpas, showing how it attempts an inline allocation and falls back to a casual (slow) path if the fast path fails. This design is engineered to avoid stack frames for performance-critical operations.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/Documentation.md#_snippet_8

LANGUAGE: C
CODE:
```
static PAS_ALWAYS_INLINE void* bmalloc_try_allocate_inline(size_t size)
{
    pas_allocation_result result;
    result = bmalloc_try_allocate_impl_inline_only(size, 1);
    if (PAS_LIKELY(result.did_succeed))
        return (void*)result.begin;
    return bmalloc_try_allocate_casual(size);
}
```

----------------------------------------

TITLE: Reference Multiple FXML Elements in Collections with fx:reference
DESCRIPTION: Illustrates the use of <fx:reference> to add multiple existing elements to a collection. This example adds 'element1', 'element2', and 'element3' to an ArrayList, useful when a reference value must be specified as an element, such as when adding to a collection.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_13

LANGUAGE: FXML
CODE:
```
<ArrayList>
    <fx:reference source=""element1""/>
    <fx:reference source=""element2""/>
    <fx:reference source=""element3""/>
</ArrayList>
```

----------------------------------------

TITLE: Age Property Value Aliases
DESCRIPTION: Examples of property value aliases for the Age property, listing various Unicode versions from 1.1 to 15.1, and an alias for unassigned values ('NA' for 'Unassigned').
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropertyValueAliases.txt#_snippet_2

LANGUAGE: Text
CODE:
```
age; 1.1                              ; V1_1
age; 2.0                              ; V2_0
age; 2.1                              ; V2_1
age; 3.0                              ; V3_0
age; 3.1                              ; V3_1
age; 3.2                              ; V3_2
age; 4.0                              ; V4_0
age; 4.1                              ; V4_1
age; 5.0                              ; V5_0
age; 5.1                              ; V5_1
age; 5.2                              ; V5_2
age; 6.0                              ; V6_0
age; 6.1                              ; V6_1
age; 6.2                              ; V6_2
age; 6.3                              ; V6_3
age; 7.0                              ; V7_0
age; 8.0                              ; V8_0
age; 9.0                              ; V9_0
age; 10.0                             ; V10_0
age; 11.0                             ; V11_0
age; 12.0                             ; V12_0
age; 12.1                             ; V12_1
age; 13.0                             ; V13_0
age; 14.0                             ; V14_0
age; 15.0                             ; V15_0
age; 15.1                             ; V15_1
age; NA                               ; Unassigned
```

----------------------------------------

TITLE: CheckBox Control CSS Reference
DESCRIPTION: Documents the style class, pseudo-classes, and substructure for the JavaFX CheckBox control. It inherits properties from ButtonBase and defines pseudo-classes for selected, determinate, and indeterminate states.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_114

LANGUAGE: APIDOC
CODE:
```
Control: CheckBox
Style Class: check-box
Inherits: ButtonBase

Pseudo-classes:
selected | Comments: applies when the selected variable is true
determinate | Comments: applies when the indeterminate variable is false
indeterminate | Comments: applies when the indeterminate variable is true

Substructure:
box - a StackPane
mark - a StackPane
```

----------------------------------------

TITLE: Load FXML with FXMLLoader in Java
DESCRIPTION: This Java example illustrates the basic usage of FXMLLoader to load an FXML file (example.fxml) from the classpath. It demonstrates how to provide a ResourceBundle for localization and how to retrieve both the loaded root element (cast to Pane) and the associated controller (MyController) after the loading operation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_55

LANGUAGE: Java
CODE:
```
URL location = getClass().getResource(""example.fxml"");
ResourceBundle resources = ResourceBundle.getBundle(""com.foo.example"");
FXMLLoader fxmlLoader = new FXMLLoader(location, resources);

Pane root = (Pane)fxmlLoader.load();
MyController controller = (MyController)fxmlLoader.getController();
```

----------------------------------------

TITLE: Define JavaFX CSS Effect Type
DESCRIPTION: Describes the support for effects in JavaFX CSS, specifically mentioning DropShadow and InnerShadow. It directs users to the `javafx.scene.effect` package for detailed parameter semantics.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_26

LANGUAGE: APIDOC
CODE:
```
effect:
  description: ""JavaFX CSS currently supports the DropShadow and InnerShadow effects from the JavaFX platform.""
  details: ""See the class documentation in javafx.scene.effect for further details about the semantics of the various effect parameters.""
```

----------------------------------------

TITLE: Include FXML Content from Another File
DESCRIPTION: Demonstrates how to use the <fx:include> tag to embed FXML markup from an external file into the current document. The 'source' attribute specifies the path to the FXML file. Paths starting with a slash are relative to the classpath, otherwise relative to the current document. It also shows advanced usage with resource bundles and character sets.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_9

LANGUAGE: FXML
CODE:
```
<fx:include source=""filename""/>
```

LANGUAGE: FXML
CODE:
```
<fx:include source=""filename"" resources=""resource_file"" charset=""utf-8""/>
```

----------------------------------------

TITLE: CSS Properties for FlowPane Layout
DESCRIPTION: Documents the CSS properties for the FlowPane layout container in JavaFX, detailing properties like gaps, alignment, and orientation. FlowPane inherits properties from Pane.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_69

LANGUAGE: APIDOC
CODE:
```
Control: FlowPane
Style Class: empty by default
Properties:
  - Name: -fx-hgap
    Values: <size>
    Default: 0
    Comments:
  - Name: -fx-vgap
    Values: <size>
    Default: 0
    Comments:
  - Name: -fx-alignment
    Values: [ top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right ]
    Default: top-left
    Comments:
  - Name: -fx-column-halignment
    Values: [ left | center | right ]
    Default: left
    Comments:
  - Name: -fx-row-valignment
    Values: [ top | center | baseline | bottom ]
    Default: center
    Comments:
  - Name: -fx-orientation
    Values: [ horizontal | vertical ]
    Default: horizontal
    Comments:
Inherits: Pane properties
```

----------------------------------------

TITLE: Build and Test libpas Standalone
DESCRIPTION: Instructions for building and testing libpas independently. Running these tests is crucial for catching bugs before integrating changes into larger systems like WebKit. The `build_and_test.sh` script performs both build and test operations.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/ReadMe.md#_snippet_0

LANGUAGE: Shell
CODE:
```
./build_and_test.sh
```

----------------------------------------

TITLE: Define General Easing Function Syntax
DESCRIPTION: This section defines the general syntax for easing functions, which can be linear, cubic-bezier, step, or SMIL 3.0 based. It serves as an overview of the available easing function categories.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_53

LANGUAGE: APIDOC
CODE:
```
<easing-function>
linear | <cubic-bezier-easing-function> | <step-easing-function> | <fx-easing-function>
```

----------------------------------------

TITLE: JavaFX CSS Property: -fx-background-color
DESCRIPTION: Defines the background color(s) of a region. It accepts a series of paint values separated by commas. The default value is transparent.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_74

LANGUAGE: APIDOC
CODE:
```
-fx-background-color:
  Syntax: [<paint>] [ , [<paint>]]*
  Default: transparent
  Description: A series of paint values separated by commas.
```

----------------------------------------

TITLE: Define JavaFX CSS Point Type
DESCRIPTION: Describes the syntax for a point in JavaFX CSS, representing an {x,y} coordinate. It can be defined using two length values or two percentage values.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_23

LANGUAGE: APIDOC
CODE:
```
point:
  syntax: ""[ [ <length> <length> ] | [ <percentage> | <percentage> ] ]""
  description: ""A point is an {x,y} coordinate.""
```

----------------------------------------

TITLE: Build libxml2 with CMake
DESCRIPTION: Instructions for building libxml2 using CMake, which is primarily recommended for Windows environments. This snippet covers the full build process from extracting the source to configuring, compiling, and installing the library. Common CMake options are also highlighted for customization.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/README.md#_snippet_1

LANGUAGE: Shell
CODE:
```
cmake -E tar xf libxml2-xxx.tar.gz
cmake -S libxml2-xxx -B libxml2-xxx-build [possible options]
cmake --build libxml2-xxx-build
cmake --install libxml2-xxx-build
```

----------------------------------------

TITLE: CSS Properties for ImageView Control
DESCRIPTION: Documents the CSS properties available for the ImageView control in JavaFX, including their types, default values, and comments. It also notes that ImageView inherits properties from Node.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_65

LANGUAGE: APIDOC
CODE:
```
Control: ImageView
Style Class: image-view
Properties:
  - Name: -fx-fit-height
    Values: <number>
    Default: 0
    Comments: The height of the bounding box within which the source image is resized as necessary to fit.
  - Name: -fx-fit-width
    Values: <number>
    Default: 0
    Comments: The width of the bounding box within which the source image is resized as necessary to fit.
  - Name: -fx-image
    Values: <uri>
    Default: null
    Comments: Relative URLs are resolved against the URL of the stylesheet.
  - Name: -fx-preserve-ratio
    Values: <boolean>
    Default: false
    Comments: Indicates whether to preserve the aspect ratio of the source image when scaling to fit the image within the fitting bounding box.
  - Name: -fx-smooth
    Values: <boolean>
    Default: Platform-specific
    Comments: Indicates whether to use a better quality filtering algorithm or a faster one when transforming or scaling the source image to fit.
Inherits: Node properties
```

----------------------------------------

TITLE: Copy WebKitLegacy Public Headers in CMake
DESCRIPTION: Copies the public header files of WebKitLegacy to a specified destination directory. The `FLATTENED` option ensures that the original directory structure of the headers is not preserved, placing all copied headers directly into the destination. This step is crucial for installing the framework's public API for other modules to use.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebKitLegacy/CMakeLists.txt#_snippet_9

LANGUAGE: CMake
CODE:
```
WEBKIT_COPY_FILES(WebKitLegacy_CopyHeaders
    DESTINATION ${WebKitLegacy_FRAMEWORK_HEADERS_DIR}/WebKitLegacy
    FILES ${WebKitLegacy_PUBLIC_FRAMEWORK_HEADERS}
    FLATTENED
)
```

----------------------------------------

TITLE: Cell Control CSS Reference
DESCRIPTION: Documents the style class, CSS properties, pseudo-classes, and substructure for the JavaFX Cell control. It inherits properties from Labeled and provides styling for cell size and state.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_113

LANGUAGE: APIDOC
CODE:
```
Control: Cell
Style Class: cell
Inherits: Labeled

CSS Properties:
-fx-cell-size | Values: <size> | Default: 24 | Comments: The cell size. For vertical ListView or a TreeView or TableView this is the height, for a horizontal ListView this is the width.

Pseudo-classes:
empty | Comments: applies when the empty variable is true
filled | Comments: applies when the empty variable is false
selected | Comments: applies when the selected variable is true

Substructure:
text - a Labeled
```

----------------------------------------

TITLE: JavaScript WebSocket Client Connection and Event Handling
DESCRIPTION: This snippet demonstrates how to create a WebSocket connection to a specified URL. It includes event handlers for 'onopen' (when the connection is established and a message is sent), 'onmessage' (when data is received from the server), and 'onerror' (for handling connection errors). It also updates a DOM element and uses alert for immediate feedback.
SOURCE: https://github.com/openjdk/jfx/blob/master/tests/manual/web/websocket.html#_snippet_0

LANGUAGE: JavaScript
CODE:
```
let socket = new WebSocket(""wss://echo.websocket.org/"");
let messageElement = document.getElementById(""message"");

socket.onopen = function(e) {
  messageElement.textContent = ""[open] Connection established"";
  socket.send(""Test WebSocket"");
  alert(""[open] Connection established"");
};

socket.onmessage = function(event) {
  messageElement.textContent = '[message] Data received from server!';
  alert('[message] Data received from server!');
};

socket.onerror = function(event) {
  messageElement.textContent = ""ERROR!"";
  alert(""ERROR!"");
};
```

----------------------------------------

TITLE: Unicode Script Extensions for Arab and Syrc
DESCRIPTION: Details Unicode code points associated with the Arab and Syrc script extensions, including character properties and descriptive names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_11

LANGUAGE: APIDOC
CODE:
```
# Script_Extensions=Arab Syrc

064B..0655    ; Arab Syrc # Mn  [11] ARABIC FATHATAN..ARABIC HAMZA BELOW
0670          ; Arab Syrc # Mn       ARABIC LETTER SUPERSCRIPT ALEF

# Total code points: 12
```

----------------------------------------

TITLE: CSS Properties for BorderPane Layout
DESCRIPTION: Documents the CSS properties for the BorderPane layout container in JavaFX. BorderPane extends Pane and does not introduce any new CSS properties, inheriting all properties from Pane.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_67

LANGUAGE: APIDOC
CODE:
```
Control: BorderPane
Style Class: empty by default
Properties: None (extends Pane)
Inherits: Pane properties
```

----------------------------------------

TITLE: Itanium Mangling: std:: typeinfo symbols
DESCRIPTION: Patterns for mangled typeinfo symbols related to the `std::` namespace.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/unexported-libc++.txt#_snippet_3

LANGUAGE: APIDOC
CODE:
```
__ZT[IS]St*
```

----------------------------------------

TITLE: CSS Properties for AnchorPane Layout
DESCRIPTION: Documents the CSS properties for the AnchorPane layout container in JavaFX. AnchorPane extends Pane and does not introduce any new CSS properties, inheriting all properties from Pane.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_66

LANGUAGE: APIDOC
CODE:
```
Control: AnchorPane
Style Class: empty by default
Properties: None (extends Pane)
Inherits: Pane properties
```

----------------------------------------

TITLE: TreeTableView CSS Properties Reference
DESCRIPTION: Documents the available CSS properties for the JavaFX TreeTableView control, including their values, default settings, and comments. Notes precedence of -fx-fixed-cell-size and inheritance from Control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_163

LANGUAGE: APIDOC
CODE:
```
Style Class: tree-table-view
Available CSS Properties:
  -fx-fixed-cell-size: [<size>] (Default: Region.USE_COMPUTED_SIZE) If both -fx-cell-size and -fx-fixed-cell-size properties are specified in CSS, -fx-fixed-cell-size takes precedence.
Inherits: Control
```

----------------------------------------

TITLE: JavaFX VBox CSS Properties
DESCRIPTION: Outlines CSS properties for the `VBox` layout container, controlling spacing between children, alignment, and whether children fill the available width. Inherits properties from `Pane`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_95

LANGUAGE: APIDOC
CODE:
```
-fx-spacing:
  Values: <size>
  Default: 0
  Comments: 

-fx-alignment:
  Values: [ top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right ]
  Default: top-left
  Comments: 

-fx-fill-width:
  Values: <boolean>
  Default: true
  Comments: 

Inherits all properties of Pane.
```

----------------------------------------

TITLE: JavaFX BuilderFactory Interface Definition
DESCRIPTION: Defines the `javafx.util.BuilderFactory` interface, which is responsible for producing `Builder` instances. It includes the `getBuilder()` method, which returns a builder capable of instantiating a given type.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_7

LANGUAGE: Java
CODE:
```
public interface BuilderFactory {
    public Builder<?> getBuilder(Class<?> type);
}
```

----------------------------------------

TITLE: CSS Properties for GridPane Layout
DESCRIPTION: Documents the CSS properties for the GridPane layout container in JavaFX, including properties for gaps, alignment, and grid line visibility. GridPane inherits properties from Pane.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_70

LANGUAGE: APIDOC
CODE:
```
Control: GridPane
Style Class: empty by default
Properties:
  - Name: -fx-hgap
    Values: <size>
    Default: 0
    Comments:
  - Name: -fx-vgap
    Values: <size>
    Default: 0
    Comments:
  - Name: -fx-alignment
    Values: [ top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right ]
    Default: top-left
    Comments:
  - Name: -fx-grid-lines-visible
    Values: <boolean>
    Default: false
    Comments:
Inherits: Pane properties
```

----------------------------------------

TITLE: Set and Get localStorage Item in JavaScript
DESCRIPTION: This JavaScript function demonstrates how to set a key-value pair in the browser's localStorage using `localStorage.setItem()` and then retrieve it using `localStorage.getItem()`. The retrieved value is subsequently displayed on an HTML element with the ID 'key'.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/test/resources/test/html/localstorage.html#_snippet_0

LANGUAGE: javascript
CODE:
```
function test_local_storage_set() {
  // Set Item
  localStorage.setItem(""key"", ""1001"");
  // getItem
  document.getElementById(""key"").innerHTML = localStorage.getItem(""key"");
}
```

----------------------------------------

TITLE: ColorPicker Control CSS Reference
DESCRIPTION: Documents the style class, CSS properties, and substructure for the JavaFX ColorPicker control. It inherits properties from ComboBoxBase and Control, and provides a property for color label visibility.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_117

LANGUAGE: APIDOC
CODE:
```
Control: ColorPicker
Style Class: color-picker
Inherits: ComboBoxBase, Control

CSS Properties:
-fx-color-label-visible | Values: <boolean> | Default: true | Comments: 

Substructure:
color display node - Label
arrow-button - StackPane
arrow - StackPane
```

----------------------------------------

TITLE: JavaFX CSS Property: -fx-background-position
DESCRIPTION: Specifies the initial position of each background image. It accepts a series of <bg-position> values, each applying to a corresponding image in the background-image series.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_78

LANGUAGE: APIDOC
CODE:
```
-fx-background-position:
  Syntax: <bg-position> [ , <bg-position> ]*
  where <bg-position> = [ [ [<size>] | left | center | right ] [ [<size>] | top | center | bottom ]? ] | [ [ center | [ left | right ] [<size>]? ] || [ center | [ top | bottom ] [<size>]? ] ]
  Default: 0% 0%
  Description: A series of <bg-position> values separated by commas. Each bg-position item in the series applies to the corresponding image in the background-image series.
```

----------------------------------------

TITLE: Compiling with GNU C/C++ Mingw Edition (GNU Make)
DESCRIPTION: This command compiles the software using GNU Make for the Mingw edition of GNU C/C++. It specifies 'Makefile.mingw' as the build file. Compiled executables are placed in the 'win32\bin.mingw' directory.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/src/win32/Readme.txt#_snippet_3

LANGUAGE: Batch
CODE:
```
make -f Makefile.mingw
```

----------------------------------------

TITLE: Algorithm for Decommitting Empty Pages in Segregated Directories
DESCRIPTION: Outlines the step-by-step process a segregated directory follows to decommit an empty page, including clearing empty bits, managing eligibility, acquiring locks, and deferring decommitment. It also details complexities for shared views and handling non-empty pages with set empty bits.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/Documentation.md#_snippet_5

LANGUAGE: Conceptual Algorithm
CODE:
```
Algorithm: DecommitEmptyPage(page)
  1. Clear the empty bit for 'page'.
  2. Attempt to take eligibility for 'page'.
     If eligibility cannot be taken (e.g., page is used by a local allocator), return.
     Note: Scavenger does not reset empty bit if eligibility fails, to avoid re-attempting.
  3. Acquire the 'ownership lock' for 'page' to mark it decommitted.
  4. Acquire the 'commit lock' for 'page'.
  5. Add 'page' to the deferred decommit log.
  6. Make 'page' eligible again.

  Complications/Refinements:
    - Shared Page Directories: Must take eligibility for each partial view associated with a shared view.
    - Views without Pages: Acquire ownership lock before checking view details. Ownership lock and eligibility are taken together.
    - Stale Empty Bit: A page might not be empty even if its empty bit is set (empty bit is not cleared when page becomes non-empty).
    - Multiple Locks: Algorithm may acquire ownership lock, then page lock ('page->lock_ptr'), then ownership lock again, then commit lock.
    - Try-lock Failure: If a 'try_lock' fails, both eligible and empty bits are set to ensure page sharing pool revisits.
    - Granular Decommitment: For pages with multiple system pages, empty bit is set if any system page is empty. Taking algorithm decommits granules, not the whole page.
```

----------------------------------------

TITLE: JavaFX SVGPath Node Properties
DESCRIPTION: The SVGPath node inherits all CSS properties from the JavaFX Shape and Node classes. It does not introduce any unique CSS properties beyond those inherited.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_106

LANGUAGE: APIDOC
CODE:
```
SVGPath Node: Inherits all properties of Shape and Node.
```

----------------------------------------

TITLE: FXML Referencing External JavaScript File
DESCRIPTION: Illustrates how to link an external JavaScript file (e.g., 'example.js') to an FXML document using the <fx:script source=""example.js""/> tag. This approach promotes separation of concerns by keeping script code outside the FXML markup.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_42

LANGUAGE: FXML
CODE:
```
<?language javascript?>

<?import javafx.scene.control.*?>
<?import javafx.scene.layout.*?>

<VBox xmlns:fx=""http://javafx.com/fxml"">
    <fx:script source=""example.js"" charset=""cp1252""/>

    <children>
        <Button text=""Click Me!"" onAction=""handleButtonAction(event);""/>
    </children>
</VBox>
```

----------------------------------------

TITLE: XID_Start (XIDS) Property Definition
DESCRIPTION: Defines the XID_Start property, indicating whether a character is valid as a starting character in an identifier. It maps 'N' to 'No' (False) and 'Y' to 'Yes' (True).
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropertyValueAliases.txt#_snippet_72

LANGUAGE: APIDOC
CODE:
```
XIDS; N                               ; No                               ; F                                ; False
XIDS; Y                               ; Yes                              ; T                                ; True
```

----------------------------------------

TITLE: Define JavaScriptCore Include Directories (CMake)
DESCRIPTION: This snippet defines both public and private include directories essential for compiling the JavaScriptCore component. It includes a wide range of subdirectories covering API, assembler, JIT, runtime, WebAssembly, and other core engine functionalities. Additionally, it conditionally appends a third-party Capstone include path if the `USE_CAPSTONE` variable is enabled, ensuring all necessary headers are found during compilation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_1

LANGUAGE: CMake
CODE:
```
set(JavaScriptCore_INCLUDE_DIRECTORIES
    ""${JavaScriptCore_FRAMEWORK_HEADERS_DIR}""
)

set(JavaScriptCore_PRIVATE_INCLUDE_DIRECTORIES
    ""${CMAKE_BINARY_DIR}""
    ""${JAVASCRIPTCORE_DIR}""
    ""${JAVASCRIPTCORE_DIR}/API""
    ""${JAVASCRIPTCORE_DIR}/assembler""
    ""${JAVASCRIPTCORE_DIR}/b3""
    ""${JAVASCRIPTCORE_DIR}/b3/air""
    ""${JAVASCRIPTCORE_DIR}/bindings""
    ""${JAVASCRIPTCORE_DIR}/builtins""
    ""${JAVASCRIPTCORE_DIR}/bytecode""
    ""${JAVASCRIPTCORE_DIR}/bytecompiler""
    ""${JAVASCRIPTCORE_DIR}/dfg""
    ""${JAVASCRIPTCORE_DIR}/disassembler""
    ""${JAVASCRIPTCORE_DIR}/disassembler/ARM64""
    ""${JAVASCRIPTCORE_DIR}/disassembler/zydis/Zydis""
    ""${JAVASCRIPTCORE_DIR}/domjit""
    ""${JAVASCRIPTCORE_DIR}/ftl""
    ""${JAVASCRIPTCORE_DIR}/fuzzilli""
    ""${JAVASCRIPTCORE_DIR}/heap""
    ""${JAVASCRIPTCORE_DIR}/debugger""
    ""${JAVASCRIPTCORE_DIR}/inspector""
    ""${JAVASCRIPTCORE_DIR}/inspector/agents""
    ""${JAVASCRIPTCORE_DIR}/inspector/augmentable""
    ""${JAVASCRIPTCORE_DIR}/inspector/remote""
    ""${JAVASCRIPTCORE_DIR}/interpreter""
    ""${JAVASCRIPTCORE_DIR}/jit""
    ""${JAVASCRIPTCORE_DIR}/llint""
    ""${JAVASCRIPTCORE_DIR}/parser""
    ""${JAVASCRIPTCORE_DIR}/profiler""
    ""${JAVASCRIPTCORE_DIR}/runtime""
    ""${JAVASCRIPTCORE_DIR}/tools""
    ""${JAVASCRIPTCORE_DIR}/wasm""
    ""${JAVASCRIPTCORE_DIR}/wasm/js""
    ""${JAVASCRIPTCORE_DIR}/yarr""
    ""${JavaScriptCore_DERIVED_SOURCES_DIR}""
    ""${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector""
    ""${JavaScriptCore_DERIVED_SOURCES_DIR}/runtime""
    ""${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr""
)

if (USE_CAPSTONE)
    list(APPEND JavaScriptCore_PRIVATE_INCLUDE_DIRECTORIES ""${THIRDPARTY_DIR}/capstone/Source/include"")
endif ()
```

----------------------------------------

TITLE: JavaFX TilePane CSS Properties
DESCRIPTION: Details CSS properties for the `TilePane` layout container, managing orientation, preferred rows/columns, tile dimensions, gaps, and alignment of tiles and their content. Inherits properties from `Pane`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_94

LANGUAGE: APIDOC
CODE:
```
-fx-orientation:
  Values: [ horizontal | vertical ]
  Default: horizontal
  Comments: 

-fx-pref-rows:
  Values: <integer>
  Default: 5
  Comments: 

-fx-pref-columns:
  Values: <integer>
  Default: 5
  Comments: 

-fx-pref-tile-width:
  Values: <size>
  Default: -1
  Comments: 

-fx-pref-tile-height:
  Values: <size>
  Default: -1
  Comments: 

-fx-hgap:
  Values: <size>
  Default: 0
  Comments: 

-fx-vgap:
  Values: <size>
  Default: 0
  Comments: 

-fx-alignment:
  Values: [ top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right ]
  Default: top-left
  Comments: 

-fx-tile-alignment:
  Values: [ top-left | top-center | top-right | center-left | center | center-right bottom-left | bottom-center | bottom-right | baseline-left | baseline-center | baseline-right ]
  Default: center
  Comments: 

Inherits all properties of Pane.
```

----------------------------------------

TITLE: API: Named Backreference Third State (Name Building)
DESCRIPTION: Continues parsing the named backreference, allowing ASCII letters or digits. A closing angle bracket '>' completes the backreference, transitioning to the 'expr-quant' state. Other inputs cause an error.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_22

LANGUAGE: APIDOC
CODE:
```
State: named-backref-3
  Transitions:
    - Input: ascii_letter
      Consume Input: false
      Next State: named-backref-3
      Action: doContinueNamedBackRef
    - Input: digit_char
      Consume Input: false
      Next State: named-backref-3
      Action: doContinueNamedBackRef
    - Input: '>'
      Consume Input: false
      Next State: expr-quant
      Action: doCompleteNamedBackRef
    - Input: default
      Consume Input: true
      Next State: (error)
      Action: errorDeath (doBadNamedCapture)
```

----------------------------------------

TITLE: JavaFX QuadCurve Node Properties
DESCRIPTION: The QuadCurve node inherits all CSS properties from the JavaFX Shape and Node classes. It does not introduce any unique CSS properties beyond those inherited.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_104

LANGUAGE: APIDOC
CODE:
```
QuadCurve Node: Inherits all properties of Shape and Node.
```

----------------------------------------

TITLE: JavaFX TextFlow Node CSS Properties
DESCRIPTION: Defines specific CSS properties for the JavaFX TextFlow node, including line spacing, tab size, and text alignment. It also inherits properties from Pane.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_108

LANGUAGE: APIDOC
CODE:
```
TextFlow CSS Properties:
  -fx-line-spacing:
    Values: <number>
    Default: 0
    Comments: 
  -fx-tab-size:
    Values: <integer>
    Default: 8
    Comments: 
  -fx-text-alignment:
    Values: [ left | center | right | justify ]
    Default: left
    Comments: inherits
Also has font properties and all properties of Pane.
```

----------------------------------------

TITLE: BarChart CSS Style Classes and Properties Reference
DESCRIPTION: Documents the available CSS style classes and properties for the JavaFX BarChart control, including their comments, associated UI components, values, default settings, and notes on negative values. Notes inheritance from XYChart.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_168

LANGUAGE: APIDOC
CODE:
```
Available Style Classes:
  ""bar-chart"": 
  ""chart-bar series<i> data<j> default-color<k>"": Where <i> is the index of the series, <j> is the index of the data within the series, and <k> is the series’ color index. If the data value is negative, the ""negative"" style class is added; e.g., `.negative.chart-bar`. (Properties: Node)
  ""chart-bar series<i> bar-legend-symbol default-color<j>"": Where <i> is the index of the series and <j> is the series’ color index (Properties: LegendItem)
Available CSS Properties:
  -fx-bar-gap: [<number>] (Default: 4)
  -fx-category-gap: [<number>] (Default: 10)
Inherits: XYChart
```

----------------------------------------

TITLE: Display Configuration Script Help
DESCRIPTION: Shows all available options and a brief explanation for the `configure.js` script, which is used to set up the build process for the software on Windows. This command helps users understand the various parameters they can pass to customize the build.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Readme.txt#_snippet_0

LANGUAGE: Batch
CODE:
```
cscript configure.js help
```

----------------------------------------

TITLE: Apply RGB Color Formats in JavaFX CSS
DESCRIPTION: Demonstrates various RGB color formats (hexadecimal, decimal, percentage, and RGBA) applied to the -fx-text-fill property of a JavaFX Label using CSS.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_46

LANGUAGE: CSS
CODE:
```
.label { -fx-text-fill: #f00 } /* #rgb */
.label { -fx-text-fill: #ff0000 } /* #rrggbb */
.label { -fx-text-fill: rgb(255,0,0) }
.label { -fx-text-fill: rgb(100%, 0%, 0%) }
.label { -fx-text-fill: rgba(255,0,0,1) }
```

----------------------------------------

TITLE: API Change: `javafx.css.Match.getPseudoClasses` Return Type
DESCRIPTION: The return type of `javafx.css.Match.getPseudoClasses` has been changed to `Set<PseudoClass>` from a non-public type. This change is unlikely to impact most applications, but existing binaries calling this method will throw a `NoSuchMethodError` and require recompilation.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-21.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
Class: javafx.css.Match
  Method: getPseudoClasses()
    Return Type: Set<PseudoClass> (Previously non-public type)
```

----------------------------------------

TITLE: JavaFX Ellipse Node Properties
DESCRIPTION: The Ellipse node inherits all CSS properties from the JavaFX Shape and Node classes. It does not introduce any unique CSS properties beyond those inherited.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_100

LANGUAGE: APIDOC
CODE:
```
Ellipse Node: Inherits all properties of Shape and Node.
```

----------------------------------------

TITLE: Add SpotLight to 3D Light Types
DESCRIPTION: A new `SpotLight` type has been added to the selection of 3D light sources available in JavaFX graphics, expanding options for scene illumination.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md#_snippet_3

LANGUAGE: APIDOC
CODE:
```
Add SpotLight to the selection of 3D light types
```

----------------------------------------

TITLE: Java Controller with @FXML for Private Field and Protected initialize() Method
DESCRIPTION: This example shows the @FXML annotation applied to both a private Button field and a protected initialize() method. This allows the FXML loader to inject values into the private field and call the protected initialization method, providing flexibility in controller member visibility while maintaining FXML integration.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_52

LANGUAGE: Java
CODE:
```
package com.foo;

public class MyController implements Initializable {
    @FXML private Button button;

    @FXML
    protected void initialize()
        button.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                System.out.println(""You clicked me!"");
            }
        });
    }
}
```

----------------------------------------

TITLE: JavaFX CSS Type: <number> and <integer>
DESCRIPTION: Defines the syntax for integer and real number values in JavaFX CSS. Numbers are specified in decimal notation, can be preceded by a sign, and may have range restrictions depending on the property.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_17

LANGUAGE: APIDOC
CODE:
```
Syntax: [+/-]? [[0-9]+|[0-9]*"".""[0-9]+]

Examples:
123 (integer)
3.14 (number)
-5 (integer)
+0.5 (number)
```

----------------------------------------

TITLE: Text Editing and Navigation Function Tags
DESCRIPTION: A comprehensive list of function tags used for various text manipulation, navigation, and selection operations. Each tag performs a specific action, such as deleting text, moving the caret, or extending selections within a document.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/behavior/RichTextAreaBehavior.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
Function Tags:
  BACKSPACE: Deletes the symbol before the caret
  COPY: Copies selected text to the clipboard
  CUT: Cuts selected text and places it to the clipboard
  DELETE: Deletes the symbol at the caret
  DELETE_PARAGRAPH: Deletes paragraph at the caret, or selected paragraphs
  DELETE_PARAGRAPH_START: Deletes text from the caret to paragraph start, ignoring selection
  DELETE_WORD_NEXT_END: Deletes empty paragraph or text to the end of the next word
  DELETE_WORD_NEXT_START: Deletes empty paragraph or text to the start of the next word
  DELETE_WORD_PREVIOUS: Deletes (multiple) empty paragraphs or text to the beginning of the previous word
  DESELECT: Clears any existing selection by moving anchor to the caret position
  ERROR_FEEDBACK: Provides audio and/or visual error feedback
  FOCUS_NEXT: Transfer focus to the next focusable node
  FOCUS_PREVIOUS: Transfer focus to the previous focusable node
  INSERT_LINE_BREAK: Inserts a line break at the caret
  INSERT_TAB: Inserts a tab symbol at the caret (if editable), or transfer focus to the next focusable node
  MOVE_DOWN: Moves the caret one visual line down
  MOVE_LEFT: Moves the caret one symbol to the left
  MOVE_PARAGRAPH_DOWN: Moves the caret to the end of the current paragraph, or, if already there, to the end of the next paragraph
  MOVE_PARAGRAPH_UP: Moves the caret to the start of the current paragraph, or, if already there, to the start of the previous paragraph
  MOVE_RIGHT: Moves the caret one symbol to the right
  MOVE_TO_DOCUMENT_END: Moves the caret to after the last character of the text
  MOVE_TO_DOCUMENT_START: Moves the caret to before the first character of the text
  MOVE_TO_LINE_END: Moves the caret to the end of the visual text line at caret
  MOVE_TO_LINE_START: Moves the caret to the beginning of the visual text line at caret
  MOVE_TO_PARAGRAPH_END: Moves the caret to the end of the paragraph at caret
  MOVE_TO_PARAGRAPH_START: Moves the caret to the beginning of the paragraph at caret
  MOVE_UP: Moves the caret one visual text line up
  MOVE_WORD_LEFT: Moves the caret one word left (previous word if LTR, next word if RTL)
  MOVE_WORD_NEXT_END: Moves the caret to the end of the next word
  MOVE_WORD_NEXT_START: Moves the caret to the start of the next word, or next paragraph if at the start of an empty paragraph
  MOVE_WORD_PREVIOUS: Moves the caret to the beginning of previous word
  MOVE_WORD_RIGHT: Moves the caret one word right (next word if LTR, previous word if RTL)
  PAGE_DOWN: Moves the caret one visual page down
  PAGE_UP: Moves the caret one visual page up
  PASTE: Pastes the clipboard content
  PASTE_PLAIN_TEXT: Pastes the plain text clipboard content
  REDO: If possible, redoes the last undone modification
  SELECT_ALL: Selects all text in the document
  SELECT_DOWN: Extends selection one visual text line down
  SELECT_LEFT: Extends selection one symbol to the left
  SELECT_PAGE_DOWN: Extends selection one visible page down
  SELECT_PAGE_UP: Extends selection one visible page up
  SELECT_PARAGRAPH: Selects the current paragraph
  SELECT_PARAGRAPH_DOWN: Extends selection to the end of the current paragraph, or, if already there, to the end of the next paragraph
  SELECT_PARAGRAPH_END: Extends selection to the paragraph end
  SELECT_PARAGRAPH_START: Extends selection to the paragraph start
  SELECT_PARAGRAPH_UP: Extends selection to the start of the current paragraph, or, if already there, to the start of the previous paragraph
  SELECT_RIGHT: Extends selection one symbol to the right
  SELECT_TO_DOCUMENT_END: Extends selection to the end of the document
  SELECT_TO_DOCUMENT_START: Extends selection to the start of the document
  SELECT_TO_LINE_END: Extends selection to the end of the visual text line at caret
  SELECT_TO_LINE_START: Extends selection to the start of the visual text line at caret
  SELECT_UP: Extends selection one visual text line up
  SELECT_WORD: Selects a word at the caret position
  SELECT_WORD_LEFT: Extends selection to the previous word (LTR) or next word (RTL)
  SELECT_WORD_NEXT: Extends selection to the beginning of next word
  SELECT_WORD_NEXT_END: Extends selection to the end of next word
  SELECT_WORD_PREVIOUS: Extends selection to the previous word
```

----------------------------------------

TITLE: JavaFX Arc Node Properties
DESCRIPTION: The Arc node inherits all CSS properties from the JavaFX Shape and Node classes. It does not introduce any unique CSS properties beyond those inherited.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_97

LANGUAGE: APIDOC
CODE:
```
Arc Node: Inherits all properties of Shape and Node.
```

----------------------------------------

TITLE: Initialize HTML5 Canvas and Animation Loop
DESCRIPTION: This function initializes the HTML5 canvas context, sets up chart dimensions, retrieves DOM elements for display, and starts a recurring animation loop using `setInterval` to call `processFrame`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/test/resources/test/html/guimark2-vector.html#_snippet_0

LANGUAGE: JavaScript
CODE:
```
var meter; var fps; var results; var draw; var chartWidth = 1200; var chartHeight = 600; var highestStock = 200; var totalMinutes = 480; var chartXSpread; var chartYSpread; var a = new Array(); var b = new Array(); var c = new Array(); var d = new Array(); var e = new Array(); function init(){
  var canvas = document.getElementById('canvas');
  draw = canvas.getContext('2d');
  chartXSpread = chartWidth/totalMinutes;
  chartYSpread = chartHeight/highestStock;
  meter = new FPSMeter();
  fps = document.getElementById(""current"");
  results = document.getElementById(""results"");
  setInterval(""processFrame()"", 17);
}
```

----------------------------------------

TITLE: JavaFX CSS Type: <string>
DESCRIPTION: Explains the syntax for string values in JavaFX CSS, allowing single or double quotes. It details how to escape quotes within strings and how to represent newlines using escape sequences.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_16

LANGUAGE: APIDOC
CODE:
```
""this is a 'string'""
""this is a \""string\""""
'this is a ""string""'
'this is a \'string\''

Newline escape: ""\A"" or ""\00000a""
```

----------------------------------------

TITLE: Reference Class Constants in FXML with fx:constant
DESCRIPTION: Shows how to assign a class constant to a property using <fx:constant>. This example sets the 'minHeight' property of a Button to 'java.lang.Double.NEGATIVE_INFINITY', demonstrating direct constant value assignment from a Java class.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_11

LANGUAGE: FXML
CODE:
```
<Button>
    <minHeight><Double fx:constant=""NEGATIVE_INFINITY""/></minHeight>
</Button>
```

----------------------------------------

TITLE: JavaFX Circle Node Properties
DESCRIPTION: The Circle node inherits all CSS properties from the JavaFX Shape and Node classes. It does not introduce any unique CSS properties beyond those inherited.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_98

LANGUAGE: APIDOC
CODE:
```
Circle Node: Inherits all properties of Shape and Node.
```

----------------------------------------

TITLE: CMake: Declare WTF Framework and Copy Headers
DESCRIPTION: This CMake snippet declares the WTF framework using `WEBKIT_FRAMEWORK_DECLARE` and then copies its public headers to the designated framework headers directory. This step is essential for packaging and distributing the WTF framework, making its public API accessible.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WTF/wtf/CMakeLists.txt#_snippet_8

LANGUAGE: CMake
CODE:
```
WEBKIT_FRAMEWORK_DECLARE(WTF)
WEBKIT_INCLUDE_CONFIG_FILES_IF_EXISTS()

WEBKIT_COPY_FILES(WTF_CopyHeaders
    DESTINATION ${WTF_FRAMEWORK_HEADERS_DIR}/wtf
    FILES ${WTF_PUBLIC_HEADERS}
)

WEBKIT_FRAMEWORK(WTF)
```

----------------------------------------

TITLE: Alphabetic Property Value Aliases
DESCRIPTION: Examples of property value aliases for the Alphabetic property, providing short and long names for 'No' and 'Yes' values, along with additional aliases like 'F' for False and 'T' for True.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropertyValueAliases.txt#_snippet_3

LANGUAGE: Text
CODE:
```
Alpha; N                              ; No                               ; F                                ; False
Alpha; Y                              ; Yes                              ; T                                ; True
```

----------------------------------------

TITLE: ScrollPane CSS Properties and Structure
DESCRIPTION: Documents the CSS properties, pseudo-classes, and internal substructure for styling the JavaFX ScrollPane control. It covers properties like fit-to-width/height, pannable, and scrollbar policies, along with corresponding pseudo-classes.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_142

LANGUAGE: APIDOC
CODE:
```
ScrollPane:
  Style class: scroll-pane

  Available CSS Properties:
    -fx-fit-to-width: <boolean> (Default: false)
    -fx-fit-to-height: <boolean> (Default: false)
    -fx-pannable: <boolean> (Default: false)
    -fx-hbar-policy: [ never | always | as-needed ] (Default: as-needed)
    -fx-vbar-policy: [ never | always | as-needed ] (Default: as-needed)
    (Also inherits all properties of Control)

  Available CSS Pseudo-classes:
    pannable: applies if this ScrollPane is pannable
    fitToWidth: applies if this ScrollPane is fitToWidth
    fitToHeight: applies if this ScrollPane is fitToHeight
    (Also inherits all pseudo-classes of Control)

  Substructure:
    viewport — StackPane
      * — StackPane (The ScrollPane's content)
    scroll-bar:vertical — ScrollBar
    scroll-bar:horizontal — ScrollBar
    corner — StackPane
```

----------------------------------------

TITLE: JavaScriptCore Private Framework Headers
DESCRIPTION: This section enumerates the private header files used internally by the JavaScriptCore framework. These headers cover various internal components such as derived sources (bytecodes, builtins, WasmOps, inspector), internal API utilities, assembler definitions (ARM64, ARMv7, RISCV64, X86_64), B3 JIT components, builtins, and bytecode structures.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_39

LANGUAGE: APIDOC
CODE:
```
Derived Sources:
  ${JavaScriptCore_DERIVED_SOURCES_DIR}/Bytecodes.h
  ${JavaScriptCore_DERIVED_SOURCES_DIR}/JSCBuiltins.h
  ${JavaScriptCore_DERIVED_SOURCES_DIR}/WasmOps.h
  ${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector/InspectorBackendDispatchers.h
  ${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector/InspectorFrontendDispatchers.h
  ${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector/InspectorProtocolObjects.h

API Internal:
  API/APICallbackFunction.h
  API/APICast.h
  API/APIUtils.h
  API/JSAPIValueWrapper.h
  API/JSAPIWrapperObject.h
  API/JSBasePrivate.h
  API/JSCTestRunnerUtils.h
  API/JSCallbackConstructor.h
  API/JSCallbackFunction.h
  API/JSCallbackObject.h
  API/JSCallbackObjectFunctions.h
  API/JSClassRef.h
  API/JSContextInternal.h
  API/JSContextPrivate.h
  API/JSContextRefInspectorSupport.h
  API/JSContextRefInternal.h
  API/JSContextRefPrivate.h
  API/JSHeapFinalizerPrivate.h
  API/JSManagedValueInternal.h
  API/JSMarkingConstraintPrivate.h
  API/JSObjectRefPrivate.h
  API/JSRemoteInspector.h
  API/JSRetainPtr.h
  API/JSScriptRefPrivate.h
  API/JSStringRefPrivate.h
  API/JSValueInternal.h
  API/JSValuePrivate.h
  API/JSVirtualMachineInternal.h
  API/JSWeakObjectMapRefInternal.h
  API/JSWeakObjectMapRefPrivate.h
  API/JSWeakPrivate.h
  API/JSWrapperMap.h
  API/ObjCCallbackFunction.h
  API/ObjcRuntimeExtras.h
  API/OpaqueJSString.h

Assembler:
  assembler/ARM64Assembler.h
  assembler/ARM64Registers.h
  assembler/ARMv7Assembler.h
  assembler/ARMv7Registers.h
  assembler/AbortReason.h
  assembler/AbstractMacroAssembler.h
  assembler/AssemblerBuffer.h
  assembler/AssemblerCommon.h
  assembler/AssemblyComments.h
  assembler/CPU.h
  assembler/CPUInlines.h
  assembler/CodeLocation.h
  assembler/FastJITPermissions.h
  assembler/JITOperationList.h
  assembler/JITOperationValidation.h
  assembler/LinkBuffer.h
  assembler/MacroAssembler.h
  assembler/MacroAssemblerARM64.h
  assembler/MacroAssemblerARMv7.h
  assembler/MacroAssemblerCodeRef.h
  assembler/MacroAssemblerHelpers.h
  assembler/MacroAssemblerRISCV64.h
  assembler/MacroAssemblerX86Common.h
  assembler/MacroAssemblerX86_64.h
  assembler/OSCheck.h
  assembler/Printer.h
  assembler/RISCV64Assembler.h
  assembler/RISCV64Registers.h
  assembler/RegisterInfo.h
  assembler/SecureARM64EHashPins.h
  assembler/SecureARM64EHashPinsInlines.h
  assembler/X86Assembler.h
  assembler/X86_64Registers.h

B3 JIT:
  b3/B3Common.h
  b3/B3Type.h
  b3/B3ValueRep.h

Builtins:
  builtins/BuiltinNames.h
  builtins/BuiltinUtils.h

Bytecode:
  bytecode/ArithProfile.h
  bytecode/ArrayAllocationProfile.h
  bytecode/ArrayProfile.h
  bytecode/BytecodeConventions.h
  bytecode/BytecodeIndex.h
  bytecode/BytecodeIntrinsicRegistry.h
  bytecode/CallEdge.h
  bytecode/CallLinkInfo.h
  bytecode/CallLinkInfoBase.h
  bytecode/CallMode.h
  bytecode/CallVariant.h
  bytecode/CallVariantInlines.h
  bytecode/ChainedWatchpoint.h
  bytecode/CheckPrivateBrandStatus.h
  bytecode/CheckPrivateBrandVariant.h
  bytecode/CodeBlock.h
  bytecode/CodeBlockHash.h
  bytecode/CodeOrigin.h
  bytecode/CodeType.h
  bytecode/DFGExitProfile.h
  bytecode/DataFormat.h
  bytecode/DirectEvalCodeCache.h
  bytecode/ExecutableInfo.h
  bytecode/ExecutionCounter.h
  bytecode/ExitKind.h
  bytecode/ExitingInlineKind.h
  bytecode/ExitingJITType.h
  bytecode/ExpressionInfo.h
  bytecode/ExpressionInfoInlines.h
  bytecode/HandlerInfo.h
  bytecode/ICStatusMap.h
  bytecode/InlineCallFrame.h
  bytecode/Instruction.h
  bytecode/InstructionStream.h
  bytecode/InternalFunctionAllocationProfile.h
  bytecode/IterationModeMetadata.h
  bytecode/JumpTable.h
  bytecode/LLIntPrototypeLoadAdaptiveStructureWatchpoint.h
  bytecode/LazyOperandValueProfile.h
  bytecode/LazyValueProfile.h
  bytecode/LineColumn.h
  bytecode/LinkTimeConstant.h
  bytecode/MetadataTable.h
  bytecode/ObjectAllocationProfile.h
  bytecode/ObjectPropertyCondition.h
  bytecode/Opcode.h
  bytecode/OpcodeSize.h
  bytecode/Operands.h
  bytecode/PropertyCondition.h
  bytecode/PutByIdFlags.h
  bytecode/SetPrivateBrandStatus.h
  bytecode/SetPrivateBrandVariant.h
  bytecode/SourceID.h
  bytecode/SpeculatedType.h
  bytecode/StructureSet.h
  bytecode/SuperSampler.h
  bytecode/ToThisStatus.h
  bytecode/TypeLocation.h
  bytecode/UnlinkedCodeBlock.h
```

----------------------------------------

TITLE: JavaFX CubicCurve Node Properties
DESCRIPTION: The CubicCurve node inherits all CSS properties from the JavaFX Shape and Node classes. It does not introduce any unique CSS properties beyond those inherited.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_99

LANGUAGE: APIDOC
CODE:
```
CubicCurve Node: Inherits all properties of Shape and Node.
```

----------------------------------------

TITLE: Generate Inspector Protocol Bindings (CMake)
DESCRIPTION: This CMake custom command defines the process for generating C++, H, and JS files for Inspector Backend/Frontend Dispatchers and Protocol Objects. It uses a Python script to process a JSON definition file, specifying all output files and their dependencies.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_50

LANGUAGE: CMake
CODE:
```
add_custom_command(
    OUTPUT ${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector/InspectorBackendDispatchers.cpp
           ${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector/InspectorBackendDispatchers.h
           ${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector/InspectorFrontendDispatchers.cpp
           ${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector/InspectorFrontendDispatchers.h
           ${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector/InspectorProtocolObjects.cpp
           ${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector/InspectorProtocolObjects.h
           ${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector/InspectorBackendCommands.js
    MAIN_DEPENDENCY ${JavaScriptCore_DERIVED_SOURCES_DIR}/CombinedDomains.json
    DEPENDS ${JavaScriptCore_INSPECTOR_PROTOCOL_SCRIPTS}
    COMMAND ${PYTHON_EXECUTABLE} ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/generate-inspector-protocol-bindings.py --outputDir ""${JavaScriptCore_DERIVED_SOURCES_DIR}/inspector"" --framework JavaScriptCore ${JavaScriptCore_DERIVED_SOURCES_DIR}/CombinedDomains.json
    VERBATIM)
```

----------------------------------------

TITLE: Reference Existing FXML Elements with fx:reference
DESCRIPTION: Demonstrates using <fx:reference> to assign a previously defined FXML element to a property. In this example, an ImageView's 'image' property is set to an Image instance named 'myImage', showcasing how to reuse objects within the FXML document.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_12

LANGUAGE: FXML
CODE:
```
<ImageView>
    <image>
        <fx:reference source=""myImage""/>
    </image>
</ImageView>
```

----------------------------------------

TITLE: Initialize JavaFX Scene with Stylesheet and Rectangle
DESCRIPTION: This Java code snippet sets up a basic JavaFX scene, adds an external stylesheet, creates a Rectangle, positions it, assigns a style class, and adds it to the scene's root group.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_9

LANGUAGE: Java
CODE:
```
Scene scene = new Scene(new Group());
scene.getStylesheets().add(""test.css"");
Rectangle rect = new Rectangle(100,100);
rect.setLayoutX(50);
rect.setLayoutY(50);
rect.getStyleClass().add(""my-rect"");
((Group)scene.getRoot()).getChildren().add(rect);
```

----------------------------------------

TITLE: FXML Resource Substitution for Localization
DESCRIPTION: Illustrates how FXML uses the '%' prefix to substitute attribute values with locale-specific resources from a java.util.ResourceBundle at load time.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_25

LANGUAGE: FXML
CODE:
```
<Label text=""%myText""/>
```

LANGUAGE: properties
CODE:
```
myText = This is the text!
```

----------------------------------------

TITLE: JavaFX Polygon Node Properties
DESCRIPTION: The Polygon node inherits all CSS properties from the JavaFX Shape and Node classes. It does not introduce any unique CSS properties beyond those inherited.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_103

LANGUAGE: APIDOC
CODE:
```
Polygon Node: Inherits all properties of Shape and Node.
```

----------------------------------------

TITLE: CSS Properties for Pane Layout
DESCRIPTION: Documents the CSS properties for the Pane layout container in JavaFX. Pane extends Region to expose Region's children and does not add any additional CSS properties, inheriting all properties from Region.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_72

LANGUAGE: APIDOC
CODE:
```
Control: Pane
Style Class: empty by default
Properties: None (extends Region)
Inherits: Region properties
```

----------------------------------------

TITLE: JavaFX CSS Property: -fx-background-radius
DESCRIPTION: Defines the radius for the background corners, similar to CSS border-radius. It supports the short-hand syntax. Each comma-separated value applies to the corresponding background color.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_76

LANGUAGE: APIDOC
CODE:
```
-fx-background-radius:
  Syntax: [[<size>]] {1,4} [ / [[<size>]] {1,4} ]? [ , [[<size>]] {1,4} [ / [[<size>]] {1,4} ]? ]*
  Default: 0 0 0 0
  Description: The same syntax and semantics as CSS Backgrounds and Borders Module Level 3: Curve Radii applies to -fx-background-radius. Note that JavaFX supports only the short-hand syntax. Each comma-separated value or set of values in the series applies to the corresponding background color.
```

----------------------------------------

TITLE: Scene Object CSS Styling Behavior
DESCRIPTION: Explains the CSS styling behavior of the `Scene` object in JavaFX, noting its lack of direct settable properties or pseudo-classes, but emphasizing the `:root` pseudo-class and ""root"" style class applied to its root node.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_64

LANGUAGE: APIDOC
CODE:
```
Scene:
  Style Class: not applicable
  CSS Properties:
    - No settable CSS properties.
  CSS Pseudo-classes:
    - No pseudo-classes specific to Scene object itself.
    - Root node of the scene matches the structural pseudo-class `:root`.
    - Root node of the scene matches the legacy style class ""root"".
    - The root node serves as a container for inherited or looked-up properties.
```

----------------------------------------

TITLE: Compile dav1d with Meson and Ninja
DESCRIPTION: Instructions to compile the dav1d decoder from source using Meson and Ninja build systems. This covers creating a build directory, configuring Meson, and initiating the build process. Static linking can be enabled via a Meson option.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/PAL/ThirdParty/dav1d/README.md#_snippet_0

LANGUAGE: Shell
CODE:
```
mkdir build && cd build
```

LANGUAGE: Shell
CODE:
```
meson ..
```

LANGUAGE: Shell
CODE:
```
meson .. --default-library=static
```

LANGUAGE: Shell
CODE:
```
ninja
```

----------------------------------------

TITLE: JavaFX CSS Property: -fx-border-radius
DESCRIPTION: Defines the radius for the border corners, similar to CSS border-radius. It supports the short-hand syntax. Each comma-separated value applies to the corresponding border color.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_84

LANGUAGE: APIDOC
CODE:
```
-fx-border-radius:
  Syntax: [[<size>]] {1,4} [ / [[<size>]] {1,4} ]? [ , [[<size>]] {1,4} [ / [[<size>]] {1,4} ]? ]*
  Default: null
  Description: The same syntax and semantics as CSS Backgrounds and Borders Module Level 3: Curve Radii applies to -fx-border-radius. Note that JavaFX supports only the short-hand syntax. Each comma-separated value or set of values in the series applies to the corresponding border color.
```

----------------------------------------

TITLE: TextField Key Bindings Reference
DESCRIPTION: Provides a comprehensive table of keyboard shortcuts for the TextField component, detailing the key combination, applicable platforms (Linux, Windows, Mac), and the function performed. Includes notes on base class mappings and Mac-specific key representations.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/behavior/TextField.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
|Key Combination|Platform|Function|\n|---------------|--------|--------|\n|ctrl-BACK_SLASH|linux, win|deselect|\n|BACKSPACE| |delete previous char|\n|alt-BACKSPACE|mac|delete previous word|\n|ctrl-BACKSPACE|linux, win|delete previous word|\n|shift-BACKSPACE| |delete previous char|\n|shortcut-BACKSPACE|mac|delete from line start|\n|COPY| |copy|\n|CUT| |cut|\n|DELETE| |delete next char|\n|alt-DELETE|mac|delete next word|\n|ctrl-DELETE|linux, win|delete next word|\n|ctrl-shift-DIGIT9| |toggle the virtual keyboard (if supported)|\n|DOWN| |move to document end|\n|shift-DOWN| |select to document end|\n|END| |move to document end|\n|shift-END|mac|extend selection to document end|\n|shift-END|linux, win|select document end|\n|shift-shortcut-END| |select to document end|\n|shortcut-END| |move to document end|\n|ENTER| |fire event|\n|ESCAPE| |cancel edit (forwarded to the parent container)|\n|HOME| |move to document start|\n|shift-HOME|mac|extend selection to document start|\n|shift-HOME|linux, win|select to document start|\n|shift-shortcut-HOME| |select to document start|\n|shortcut-HOME| |move to document start|\n|shift-INSERT| |paste|\n|shortcut-INSERT| |copy|\n|LEFT| |previous character|\n|alt-LEFT| |left word|\n|alt-shift-LEFT|mac|select left word|\n|ctrl-LEFT|linux, win|left word|\n|ctrl-shift-LEFT|linux, win|select left word|\n|shift-LEFT| |select left|\n|shift-shortcut-LEFT|mac|select to document start|\n|shortcut-LEFT|mac|move to document start|\n|PASTE| |paste|\n|RIGHT| |next character|\n|alt-RIGHT|mac|right word|\n|alt-shift-RIGHT|mac|select right word|\n|ctrl-RIGHT|linux, win|right word|\n|ctrl-shift-RIGHT|linux, win|select right word|\n|shift-RIGHT| |select right|\n|shift-shortcut-RIGHT|mac|select to document end|\n|shortcut-RIGHT|mac|move to document end|\n|TAB| |focus next|\n|ctrl-TAB| |focus next|\n|ctrl-shift-TAB| |focus previous|\n|shift-TAB| |focus previous|\n|UP| |move to document start|\n|shift-UP| |select to document start|\n| | | \u00a0|\n|shortcut-A| |select all|\n|shortcut-C| |copy|\n|ctrl-H|linux, win|delete previous char|\n|shortcut-V| |paste|\n|shortcut-X| |cut|\n|ctrl-Y|win|redo|\n|ctrl-shift-Z|linux|redo|\n|shift-shortcut-Z|mac|redo|\n|shortcut-Z| |undo|\n\nNotes:\n\n1. Base class mappings modified by the TextField class are highlighted in bold.\n2. On Mac, alt is represented by the Option key.\n3. On Mac, shortcut is represented by the Command key.
```

----------------------------------------

TITLE: TextArea Key Bindings Reference
DESCRIPTION: Lists all supported keyboard shortcuts for the TextArea component, including platform-specific variations (Linux, Windows, Mac) and their associated functions for text manipulation, navigation, and selection. Notes clarify special key representations on Mac.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/behavior/TextArea.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
Key Bindings:
  ctrl-BACK_SLASH:
    Platform: linux, win
    Function: deselect
  BACKSPACE:
    Platform: All
    Function: delete previous char
  alt-BACKSPACE:
    Platform: mac
    Function: delete previous word
  ctrl-BACKSPACE:
    Platform: linux, win
    Function: delete previous word
  shift-BACKSPACE:
    Platform: All
    Function: delete previous char
  shortcut-BACKSPACE:
    Platform: mac
    Function: delete from line start
  COPY:
    Platform: All
    Function: copy
  CUT:
    Platform: All
    Function: cut
  DELETE:
    Platform: All
    Function: delete next char
  alt-DELETE:
    Platform: mac
    Function: delete next word
  ctrl-DELETE:
    Platform: linux, win
    Function: delete next word
  ctrl-shift-DIGIT9:
    Platform: All
    Function: toggle the virtual keyboard (if supported)
  DOWN:
    Platform: All
    Function: line down
  alt-DOWN:
    Platform: mac
    Function: paragraph down
  alt-shift-DOWN:
    Platform: mac
    Function: select paragraph down
  ctrl-DOWN:
    Platform: linux, win
    Function: paragraph down
  ctrl-shift-DOWN:
    Platform: linux, win
    Function: select paragraph down
  shift-DOWN:
    Platform: All
    Function: select line down
  shift-shortcut-DOWN:
    Platform: mac
    Function: extend selection to document end
  shortcut-DOWN:
    Platform: All
    Function: move to document end
  END:
    Platform: All
    Function: line end
  shift-END:
    Platform: All
    Function: select to line end
  shortcut-END:
    Platform: All
    Function: move to document end
  shortcut-shift-END:
    Platform: All
    Function: select to document end
  ENTER:
    Platform: All
    Function: insert new line
  ESCAPE:
    Platform: All
    Function: cancel edit (forwarded to the parent container)
  HOME:
    Platform: All
    Function: line start
  shift-HOME:
    Platform: All
    Function: select to line start
  shift-shortcut-HOME:
    Platform: All
    Function: select to document start
  shortcut-HOME:
    Platform: All
    Function: move to document start
  shift-INSERT:
    Platform: All
    Function: paste
  shortcut-INSERT:
    Platform: All
    Function: copy
  LEFT:
    Platform: All
    Function: previous character
  alt-LEFT:
    Platform: All
    Function: left word
  alt-shift-LEFT:
    Platform: mac
    Function: select left word
  ctrl-LEFT:
    Platform: linux, win
    Function: left word
  ctrl-shift-LEFT:
    Platform: linux, win
    Function: select left word
  shift-LEFT:
    Platform: All
    Function: select left
  shift-shortcut-LEFT:
    Platform: mac
    Function: select to line start
  shortcut-LEFT:
    Platform: mac
    Function: move to line start
  PAGE_DOWN:
    Platform: All
    Function: page down
  shift-PAGE_DOWN:
    Platform: All
    Function: select page down
  PAGE_UP:
    Platform: All
    Function: page up
  shift-PAGE_UP:
    Platform: All
    Function: select page up
  PASTE:
    Platform: All
    Function: paste
  RIGHT:
    Platform: All
    Function: next character
  alt-RIGHT:
    Platform: mac
    Function: right word
  alt-shift-RIGHT:
    Platform: mac
    Function: select right word
  ctrl-RIGHT:
    Platform: linux, win
    Function: right word
  ctrl-shift-RIGHT:
    Platform: linux, win
    Function: select right word
  shift-RIGHT:
    Platform: All
    Function: select right
  shift-shortcut-RIGHT:
    Platform: mac
    Function: select to line end
  shortcut-RIGHT:
    Platform: mac
    Function: move to line end
  TAB:
    Platform: All
    Function: insert tab
  ctrl-TAB:
    Platform: All
    Function: focus next
  ctrl-shift-TAB:
    Platform: All
    Function: focus previous
  shift-TAB:
    Platform: All
    Function: focus previous
  UP:
    Platform: All
    Function: line up
  alt-UP:
    Platform: mac
    Function: paragraph up
  alt-shift-UP:
    Platform: mac
    Function: select paragraph up
  ctrl-UP:
    Platform: linux, win
    Function: paragraph up
  ctrl-shift-UP:
    Platform: linux, win
    Function: select paragraph up
  shift-UP:
    Platform: All
    Function: select line up
  shift-shortcut-UP:
    Platform: mac
    Function: extend selection to document start
  shortcut-UP:
    Platform: mac
    Function: move to document start
  shortcut-A:
    Platform: All
    Function: select all
  shortcut-C:
    Platform: All
    Function: copy
  ctrl-H:
    Platform: linux, win
    Function: delete previous char
  shortcut-V:
    Platform: All
    Function: paste
  shortcut-X:
    Platform: All
    Function: cut
  ctrl-Y:
    Platform: win
    Function: redo
  ctrl-shift-Z:
    Platform: linux
    Function: redo
  shift-shortcut-Z:
    Platform: mac
    Function: redo
  shortcut-Z:
    Platform: All
    Function: undo
Notes:
  - Base class mappings modified by the TextArea class are highlighted in bold.
  - On Mac, alt is represented by the Option key.
  - On Mac, shortcut is represented by the Command key.
```

----------------------------------------

TITLE: Run Mandelbrot Set Demo via Command Line
DESCRIPTION: This command line example shows how to execute the Mandelbrot Set JavaFX application from a JAR file. It includes options to specify the minimum and maximum complex values for the fractal area and to set the initial window dimensions.
SOURCE: https://github.com/openjdk/jfx/blob/master/apps/samples/MandelbrotSet/index.html#_snippet_1

LANGUAGE: Shell
CODE:
```
java -jar MandelbrotSet.jar -min _<minReal>_,_<minImaginary>_ -max _<maxReal>_,_<maxImaginary>_ -windowSize _<width>_x_<height>_
```

----------------------------------------

TITLE: ProgressIndicator CSS Properties and Structure
DESCRIPTION: Documents the CSS properties, pseudo-classes, and internal substructure for styling the JavaFX ProgressIndicator control. It includes properties for segment count, progress color, and spin enablement, along with inherited properties and pseudo-classes.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_138

LANGUAGE: APIDOC
CODE:
```
ProgressIndicator:
  Style class: progress-indicator

  Available CSS Properties:
    -fx-indeterminate-segment-count: <number> (Default: 8)
    -fx-progress-color: <paint> (Default: null)
    -fx-spin-enabled: <boolean> (Default: false)
    (Also inherits all properties of Control)

  Available CSS Pseudo-classes:
    determinate: applies if the indeterminate variable is false
    indeterminate: applies if the indeterminate variable is true
    (Also inherits all pseudo-classes of Control)

  Substructure:
    indicator — StackPane
    progress — StackPane
    percentage — Text
    tick — StackPane
```

----------------------------------------

TITLE: TextInputControl Key Bindings Reference
DESCRIPTION: A comprehensive list of keyboard shortcuts and their actions within TextInputControl, categorized by key combination, platform, and function. Includes notes on platform-specific key representations.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/behavior/TextInputControl.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
Key Combination | Platform | Function
----------------|----------|------------------------------------
ctrl-BACK_SLASH | linux, win | deselect
BACKSPACE       |          | delete previous char
alt-BACKSPACE   | mac      | delete previous word
ctrl-BACKSPACE  | linux, win | delete previous word
shift-BACKSPACE |          | delete previous char
shortcut-BACKSPACE | mac      | delete from line start
COPY            |          | copy
CUT             |          | cut
DELETE          |          | delete next char
alt-DELETE      | mac      | delete next word
ctrl-DELETE     | linux, win | delete next word
ctrl-shift-DIGIT9 |          | toggle the virtual keyboard (if supported)
DOWN            |          | move to document end
shift-DOWN      |          | select to document end
END             |          | move to document end
shift-END       | mac      | extend selection to document end
shift-END       | linux, win | select document end
shift-shortcut-END |          | select to document end
shortcut-END    |          | move to document end
ENTER           |          | fire (no-op)
ESCAPE          |          | cancel edit (forwarded to the parent container)
HOME            |          | move to document start
shift-HOME      | mac      | extend selection to document start
shift-HOME      | linux, win | select to document start
shift-shortcut-HOME |          | select to document start
shortcut-HOME   |          | move to document start
shift-INSERT    |          | paste
shortcut-INSERT |          | copy
LEFT            |          | previous character
alt-LEFT        |          | left word
alt-shift-LEFT  | mac      | select left word
ctrl-LEFT       | linux, win | left word
ctrl-shift-LEFT | linux, win | select left word
shift-LEFT      |          | select left
shift-shortcut-LEFT | mac      | select to document start
shortcut-LEFT   | mac      | move to document start
PASTE           |          | paste
RIGHT           |          | next character
alt-RIGHT       | mac      | right word
alt-shift-RIGHT | mac      | select right word
ctrl-RIGHT      | linux, win | right word
ctrl-shift-RIGHT | linux, win | select right word
shift-RIGHT     |          | select right
shift-shortcut-RIGHT | mac      | select to document end
shortcut-RIGHT  | mac      | move to document end
TAB             |          | focus next
ctrl-TAB        |          | focus next
ctrl-shift-TAB  |          | focus previous
shift-TAB       |          | focus previous
UP              |          | move to document start
shift-UP        |          | select to document start
                |          | 
shortcut-A      |          | select all
shortcut-C      |          | copy
ctrl-H          | linux, win | delete previous char
shortcut-V      |          | paste
shortcut-X      |          | cut
ctrl-Y          | win      | redo
ctrl-shift-Z    | linux    | redo
shift-shortcut-Z | mac      | redo
shortcut-Z      |          | undo

Notes:
1. On Mac, alt is represented by the Option key.
2. On Mac, shortcut is represented by the Command key.
```

----------------------------------------

TITLE: Implement Script Event Handler in FXML with JavaScript
DESCRIPTION: This example shows how to attach an inline JavaScript event handler to a button's `onAction` event within an FXML document. It utilizes the `<?language javascript?>` processing instruction to specify the scripting language for the embedded code, which executes when the button is clicked.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_31

LANGUAGE: FXML
CODE:
```
<?language javascript?>
<VBox>
    <children>
        <Button text=""Click Me!""
            onAction=""java.lang.System.out.println('You clicked me!');""/>
    </children>
</VBox>
```

----------------------------------------

TITLE: ASCII_Hex_Digit Property Value Aliases
DESCRIPTION: Examples of property value aliases for the ASCII_Hex_Digit property, showing short and long names for 'No' and 'Yes' values, along with additional aliases like 'F' for False and 'T' for True.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropertyValueAliases.txt#_snippet_1

LANGUAGE: Text
CODE:
```
AHex; N                               ; No                               ; F                                ; False
AHex; Y                               ; Yes                              ; T                                ; True
```

----------------------------------------

TITLE: Apply Red Fill to Rectangle with CSS
DESCRIPTION: A simple CSS rule targeting elements with the my-rect class, setting their -fx-fill property to red. This demonstrates basic styling in JavaFX CSS.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_10

LANGUAGE: CSS
CODE:
```
.my-rect { -fx-fill: red; }
```

----------------------------------------

TITLE: JavaFX Text Node CSS Properties
DESCRIPTION: Defines specific CSS properties for the JavaFX Text node, controlling aspects like bounds type, line spacing, font, alignment, and text decoration. It also inherits properties from Shape.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_107

LANGUAGE: APIDOC
CODE:
```
Text CSS Properties:
  -fx-bounds-type:
    Values: <text-bounds>
    Default: logical
    Comments: 
  -fx-line-spacing:
    Values: <number>
    Default: 0
    Comments: 
  -fx-fill:
    Values: <paint>
    Default: BLACK
    Comments: text color
  -fx-font:
    Values: <font>
    Default: Font.DEFAULT
    Comments: inherits
  -fx-font-smoothing-type:
    Values: [ gray | lcd ]
    Default: gray
    Comments: 
  -fx-strikethrough:
    Values: <boolean>
    Default: false
    Comments: 
  -fx-tab-size:
    Values: <integer>
    Default: 8
    Comments: 
  -fx-text-alignment:
    Values: [ left | center | right | justify ]
    Default: left
    Comments: inherits
  -fx-text-origin:
    Values: [ baseline | top | bottom ]
    Default: baseline
    Comments: 
  -fx-underline:
    Values: <boolean>
    Default: false
    Comments: 
Also has font properties and all properties of Shape.
```

----------------------------------------

TITLE: FXML Expression Language Constants and Operators Reference
DESCRIPTION: Documents the supported constants and operators available within FXML expression bindings, including string, boolean, null, and numerical constants, along with unary, binary, and comparison operators for use in dynamic expressions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_29

LANGUAGE: APIDOC
CODE:
```
Constant / Operator
Description

""string""
'string'
A string constant

true
false
A boolean constant

null
A constant representing the null value

50.0
3e5
42
A numerical constant

-
(unary operator)
Unary minus operator, applied on a number

!
(unary operator)
Unary negation of a boolean

+ -
* / %
Numerical binary operators

&& ||
Boolean binary operators

> >=
< <=
== !=
Binary operators of comparison.
Both arguments must be of type Comparable
```

----------------------------------------

TITLE: Declare a JavaFX Label with text property in FXML
DESCRIPTION: This FXML example demonstrates how to declare a `javafx.scene.control.Label` instance and set its `text` property using an XML attribute. It includes the necessary import statement for the `Label` class, showcasing a basic FXML UI element creation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_2

LANGUAGE: XML
CODE:
```
<?import javafx.scene.control.Label?>
<Label text=""Hello, World!""/>
```

----------------------------------------

TITLE: Disallowed Java Classes for JavaScript in WebEngine
DESCRIPTION: This section lists Java classes on which no methods can be called by JavaScript programs executing within a `WebEngine` context. These classes are explicitly restricted to prevent potential security vulnerabilities and unauthorized access to sensitive system functionalities, such as class loading or system properties.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-15.md#_snippet_1

LANGUAGE: APIDOC
CODE:
```
java.lang.ClassLoader
java.lang.Module
java.lang.Runtime
java.lang.System

java.lang.invoke.*
java.lang.module.*
java.lang.reflect.*
java.security.*
sun.misc.*
```

----------------------------------------

TITLE: Build and Run Tests with CMake
DESCRIPTION: These commands configure CMake to build the test executable, compile the project, and then execute all available tests for the double-conversion library. The '-DBUILD_TESTING=ON' flag enables test compilation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WTF/wtf/dtoa/README.md#_snippet_4

LANGUAGE: bash
CODE:
```
cmake . -DBUILD_TESTING=ON
```

LANGUAGE: bash
CODE:
```
make
```

LANGUAGE: bash
CODE:
```
test/cctest/cctest --list | tr -d '<' | xargs test/cctest/cctest
```

----------------------------------------

TITLE: Table/Tree-Table View Keyboard Shortcuts
DESCRIPTION: This section documents the various key combinations and their effects when interacting with table or tree-table view components. Each entry specifies the key, applicable platform, any conditions, and the resulting function.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/behavior/TreeTableViewBehavior.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
Key Binding: shortcut-A
  Platform: All
  Condition: None
  Function: select all

Key Binding: ADD
  Platform: All
  Condition: None
  Function: expand row (TTV)

Key Binding: DOWN
  Platform: All
  Condition: None
  Function: select next row

Key Binding: alt-shortcut-DOWN
  Platform: All
  Condition: None
  Function: vertical unit scroll down

Key Binding: shift-DOWN
  Platform: All
  Condition: None
  Function: extend selection to the next row

Key Binding: shift-shortcut-DOWN
  Platform: All
  Condition: None
  Function: discontinuous select next row

Key Binding: shortcut-DOWN
  Platform: All
  Condition: None
  Function: focus next row

Key Binding: END
  Platform: All
  Condition: None
  Function: select last row

Key Binding: shift-END
  Platform: All
  Condition: None
  Function: select to last row

Key Binding: shift-shortcut-END
  Platform: All
  Condition: None
  Function: discontinuous select all to last row (win,linux? on mac, END is shortcut-RIGHT)

Key Binding: shortcut-END
  Platform: All
  Condition: None
  Function: focus last row (win,linux? on mac, END is shortcut-RIGHT)

Key Binding: ENTER
  Platform: All
  Condition: None
  Function: activate editing

Key Binding: ESCAPE
  Platform: All
  Condition: None
  Function: cancel editing

Key Binding: F2
  Platform: All
  Condition: None
  Function: activate editing

Key Binding: HOME
  Platform: All
  Condition: None
  Function: select first row

Key Binding: shift-HOME
  Platform: All
  Condition: None
  Function: select to first row

Key Binding: shift-shortcut-HOME
  Platform: All
  Condition: None
  Function: discontinuous select all to first row (win,linux? on mac, HOME is shortcut-LEFT)

Key Binding: shortcut-HOME
  Platform: All
  Condition: None
  Function: focus first row (win,linux? on mac, HOME is shortcut-LEFT)

Key Binding: KP_DOWN
  Platform: All
  Condition: None
  Function: select next row

Key Binding: shift-KP_DOWN
  Platform: All
  Condition: None
  Function: extend selection to the next row

Key Binding: KP_LEFT
  Platform: All
  Condition: None
  Function: LTR: collapse row; RTL: expand row; (TTV)

Key Binding: shift-KP_LEFT
  Platform: All
  Condition: None
  Function: LTR: extend selection left cell; RTL: extend selection right cell;

Key Binding: KP_RIGHT
  Platform: All
  Condition: None
  Function: LTR: select right cell; RTL: select left cell;

Key Binding: shift-KP_RIGHT
  Platform: All
  Condition: None
  Function: LTR: expand row; RTL: collapse row; (TTV)

Key Binding: shortcut-KP_LEFT
  Platform: All
  Condition: None
  Function: LTR: focus left cell; RTL: focus right cell;

Key Binding: KP_UP
  Platform: All
  Condition: None
  Function: select previous row

Key Binding: shift-KP_UP
  Platform: All
  Condition: None
  Function: extend selection to the previous row

Key Binding: shortcut-KP_RIGHT
  Platform: All
  Condition: None
  Function: LTR: focus right cell; RTL: focus left cell;

Key Binding: LEFT
  Platform: All
  Condition: None
  Function: LTR: collapse row; RTL: expand row; (TTV)

Key Binding: alt-shortcut-LEFT
  Platform: All
  Condition: None
  Function: horizontal unit scroll left

Key Binding: shift-LEFT
  Platform: All
  Condition: None
  Function: LTR: extend selection left cell; RTL: extend selection right cell;

Key Binding: shift-shortcut-LEFT
  Platform: All
  Condition: None
  Function: LTR: discontinuous select previuos column; RTL: discontinuous select next column; (win,linux? on mac, HOME is shortcut-LEFT)

Key Binding: shortcut-LEFT
  Platform: All
  Condition: None
  Function: LTR: focus left cell; RTL: focus right cell;

Key Binding: MULTIPLY
  Platform: All
  Condition: None
  Function: expand all (TTV)

Key Binding: PAGE_DOWN
  Platform: All
  Condition: None
  Function: scroll page down

Key Binding: shift-PAGE_DOWN
  Platform: All
  Condition: None
  Function: extend selection page down

Key Binding: shift-shortcut-PAGE_DOWN
  Platform: All
  Condition: None
  Function: discontinuous select page down

Key Binding: shortcut-PAGE_DOWN
  Platform: All
  Condition: None
  Function: focus page down

Key Binding: PAGE_UP
  Platform: All
  Condition: None
  Function: scroll page up

Key Binding: shift-PAGE_UP
  Platform: All
  Condition: None
  Function: extend selection page up

Key Binding: shift-shortcut-PAGE_UP
  Platform: All
  Condition: None
  Function: discontinuous select page up

Key Binding: shortcut-PAGE_UP
  Platform: All
  Condition: None
  Function: focus page up

Key Binding: RIGHT
  Platform: All
  Condition: None
  Function: LTR: expand row; RTL: collapse row; (TTV)

Key Binding: alt-shortcut-RIGHT
  Platform: All
  Condition: None
  Function: horizontal unit scroll right

Key Binding: shift-shortcut-RIGHT
  Platform: All
  Condition: None
  Function: LTR: discontinuous select next column; RTL: discontinuous select previous column; (win,linux? on mac, END is shortcut-RIGHT)

Key Binding: shortcut-RIGHT
  Platform: All
  Condition: None
  Function: LTR: focus right cell; RTL: focus left cell;

Key Binding: shift-RIGHT
  Platform: All
  Condition: None
  Function: LTR: extend selection right cell; RTL: extend selection left cell;

Key Binding: SPACE
  Platform: All
  Condition: None
  Function: activate editing

Key Binding: ctrl-SPACE
  Platform: non-mac
  Condition: None
  Function: toggle focus owner selection

Key Binding: ctrl-shortcut-SPACE
  Platform: mac
  Condition: None
  Function: toggle focus owner selection
```

----------------------------------------

TITLE: Handle Ampersand After Set (set-set-amp)
DESCRIPTION: Defines transitions when an ampersand ('&') is encountered immediately after a set. It can signify an intersection operator ('&'), the start of a '&&' operator, or a literal ampersand.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_24

LANGUAGE: Custom DSL
CODE:
```
'['                  n  set-open      ^set-after-set           doSetBeginIntersection1
'&'                  n  set-after-op                           doSetIntersection2
default                 set-after-lit                          doSetAddAmp
```

----------------------------------------

TITLE: Define JavaFX CSS Font Properties
DESCRIPTION: Documents the various CSS properties for specifying fonts in JavaFX, including individual properties like family, size, style, and weight, as well as a shorthand `font` property. It lists generic font family names and valid values for style and weight.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_29

LANGUAGE: APIDOC
CODE:
```
<font-family>The string name of the font family. An actual font family name available on the system can be used, or one of the following generic family names can be used:
*   'system'
*   'serif' (e.g., Times)
*   'sans-serif' (e.g., Helvetica)
*   'cursive' (e.g., Zapf-Chancery)
*   'fantasy' (e.g., Western)
*   'monospace' (e.g., Courier)

<font-size> The size of the font, using the <size> syntax.

<font-style> The font's style, using the following syntax:
[ normal | italic | oblique ]

<font-weight> The font's weight, using the following syntax:
[ normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900 ]

<font> This font shorthand property can be used in place of the above properties. It uses the following syntax:
[[ <font-style> || <font-weight> ]? <font-size> <font-family> ]

Available CSS Properties
CSS Property | Values | Default | Comments
-fx-font | [<font>] | inherit | shorthand property for font-size, font-family, font-weight and font-style
-fx-font-family | [<font-family>] | inherit |
-fx-font-size | [<font-size>] | inherit |
-fx-font-style | [<font-style>] | inherit |
-fx-font-weight | [<font-weight>] | inherit |
```

----------------------------------------

TITLE: Configure CMake Build for WebKit Testing Components
DESCRIPTION: This CMake script defines build properties and conditionally includes various subdirectories for WebKit testing components such as Layout Tests, Image Diff, DumpRenderTree, WebKitTestRunner, and API Tests. It uses `ENABLE_` flags to control which components are built and includes specific Java-related subdirectories if the port is 'Java' and not a static build.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/CMakeLists.txt#_snippet_0

LANGUAGE: CMake
CODE:
```
set_property(DIRECTORY . PROPERTY FOLDER ""Tools"")

set(TestRunnerShared_LIBRARY_TYPE OBJECT)

# Individual subdirectories are added in the port's cmake file
WEBKIT_INCLUDE_CONFIG_FILES_IF_EXISTS()

if (ENABLE_LAYOUT_TESTS)
    add_subdirectory(TestRunnerShared)

    if (ENABLE_IMAGE_DIFF)
        add_subdirectory(ImageDiff)
    endif ()

    if (ENABLE_WEBKIT_LEGACY)
        add_subdirectory(DumpRenderTree)
    endif ()

    if (ENABLE_WEBKIT)
        add_subdirectory(WebKitTestRunner)
    endif ()
endif ()

if (ENABLE_API_TESTS)
    add_subdirectory(TestWebKitAPI)
endif ()

if (PORT STREQUAL ""Java"")
    if (NOT DEFINED STATIC_BUILD)
        add_subdirectory(TestRunnerShared/java)
        add_subdirectory(DumpRenderTree/java)
    endif ()
endif ()
```

----------------------------------------

TITLE: Define JavaFX CSS Border Image Repeat Property (-fx-border-image-repeat)
DESCRIPTION: A series of repeat-style values, separated by commas. Each item in the series applies to the corresponding image in the series of border images.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_89

LANGUAGE: APIDOC
CODE:
```
-fx-border-image-repeat
<repeat-style> [ , <repeat-style> ]*
where <repeat-style> = repeat-x | repeat-y | [repeat | space | round | no-repeat]{1,2}
```

----------------------------------------

TITLE: Handle Ampersand After Literal (set-lit-amp)
DESCRIPTION: Defines transitions when an ampersand ('&') is encountered after literals within a set (e.g., `[literals&`). It can be the start of a '&&' operator or a literal ampersand.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_25

LANGUAGE: Custom DSL
CODE:
```
'&'                  n  set-after-op                            doSetIntersection2
default                 set-after-lit                           doSetAddAmp
```

----------------------------------------

TITLE: JavaFX CSS Type: <angle> Units
DESCRIPTION: Defines the `<angle>` type in JavaFX CSS, supporting units like degrees, radians, gradians, and turns. All other angle units are converted to degrees.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_21

LANGUAGE: APIDOC
CODE:
```
Syntax: <number>[ deg | rad | grad | turn ]

Units:
  deg: angle in degrees
  rad: angle in radians
  grad: angle in gradians
  turn: angle in turns
```

----------------------------------------

TITLE: CSS Styling for Intersection Observer Test Elements
DESCRIPTION: Defines the essential CSS styles for the parent container, the target element being observed, and the output display area. These styles set up a flexbox layout for the parent, position the target, and prepare the output for displaying the intersection ratio.
SOURCE: https://github.com/openjdk/jfx/blob/master/tests/system/src/test/resources/test/javafx/scene/web/testIObserver.html#_snippet_0

LANGUAGE: CSS
CODE:
```
test #parent { border: 2px solid blue; height: 400px; width: 400px; justify-content: center; margin: 20px auto; display: flex; overflow: hidden; position: relative; } #target { transform: translate3d(-202px, 0, 0); background-color: red; height: 300px; width: 300px; } #output { margin: 20px auto; width: 400px; } #output pre { display: inline; }
```

----------------------------------------

TITLE: Unicode Case Folding Data File Format Specification
DESCRIPTION: Specifies the machine-readable format for entries in the Unicode Case Folding data file, detailing the structure of each line (`code; status; mapping; # name`) and providing definitions for the status field values (C, F, S, T) along with usage instructions for simple and full case folding.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/CaseFolding.txt#_snippet_0

LANGUAGE: APIDOC
CODE:
```
File Format:
  <code>; <status>; <mapping>; # <name>

Status Field Definitions:
  C: common case folding, common mappings shared by both simple and full mappings.
  F: full case folding, mappings that cause strings to grow in length. Multiple characters are separated by spaces.
  S: simple case folding, mappings to single characters where different from F.
  T: special case for uppercase I and dotted uppercase I
     - For non-Turkic languages, this mapping is normally not used.
     - For Turkic languages (tr, az), this mapping can be used instead of the normal mapping for these characters.
       Note that the Turkic mappings do not maintain canonical equivalence without additional processing.
       See the discussions of case mapping in the Unicode Standard for more information.

Usage:
  A. To do a simple case folding, use the mappings with status C + S.
  B. To do a full case folding, use the mappings with status C + F.
  The mappings with status T can be used or omitted depending on the desired case-folding behavior. (The default option is to exclude them.)
```

----------------------------------------

TITLE: UI Component Keyboard Shortcuts Reference
DESCRIPTION: This table provides a comprehensive list of key combinations used to interact with UI components, specifying the platform, any conditions, and the exact function performed. It includes actions for navigation, selection, and editing within the component.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/behavior/TableViewBehavior.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
|Key Combination          |Platform |Condition         |Function                                |
|-------------------------|---------|------------------|----------------------------------------|
|shortcut-A               |         |                  |select all
|DOWN                     |         |                  |select next row
|alt-shortcut-DOWN        |         |                  |vertical unit scroll down
|shift-DOWN               |         |                  |extend selection to the next row
|shift-shortcut-DOWN      |         |                  |discontinuous select next row **function unclear**
|shortcut-DOWN            |         |                  |focus next row
|END                      |         |                  |select last row 
|shift-END                |         |                  |select to last row **function unclear**
|shift-shortcut-END       |         |                  |discontinuous select all to last row **win,linux? on mac, END is shortcut-RIGHT** **function unclear**
|shortcut-END             |         |                  |focus last row **win,linux? on mac, END is shortcut-RIGHT**
|ENTER                    |         |                  |activate editing
|ESCAPE                   |         |                  |cancel editing
|F2                       |         |                  |activate editing
|HOME                     |         |                  |select first row
|shift-HOME               |         |                  |select to first row **function unclear**
|shift-shortcut-HOME      |         |                  |discontinuous select all to first row **win,linux? on mac, HOME is shortcut-LEFT** **function unclear**
|shortcut-HOME            |         |                  |focus first row **win,linux? on mac, HOME is shortcut-LEFT**
|KP_DOWN                  |         |                  |select next row
|shift-KP_DOWN            |         |                  |extend selection to the next row
|KP_LEFT                  |         |                  |LTR: select left cell; RTL: select right cell;
|shift-KP_LEFT            |         |                  |LTR: extend selection left cell; RTL: extend selection right cell;
|KP_RIGHT                 |         |                  |LTR: select right cell; RTL: select left cell;
|shift-KP_RIGHT           |         |                  |LTR: extend selection right cell; RTL: extend selection left cell;
|shortcut-KP_LEFT         |         |                  |LTR: focus left cell; RTL: focus right cell;
|KP_UP                    |         |                  |select previous row
|shift-KP_UP              |         |                  |extend selection to the previous row
|shortcut-KP_RIGHT        |         |                  |LTR: focus right cell; RTL: focus left cell;
|LEFT                     |         |                  |LTR: select left cell; RTL: select right cell;
|alt-shortcut-LEFT        |         |                  |horizontal unti scroll left
|shift-LEFT               |         |                  |LTR: extend selection left cell; RTL: extend selection right cell;
|shift-shortcut-LEFT      |         |                  |LTR: discontinuous select previuos column; RTL: discontinuous select next column; **win,linux? on mac, HOME is shortcut-LEFT**
|shortcut-LEFT            |         |                  |LTR: focus left cell; RTL: focus right cell;
|PAGE_DOWN                |         |                  |scroll page down
|shift-PAGE_DOWN          |         |                  |extend selection page down
|shift-shortcut-PAGE_DOWN |         |                  |discontinuous select page down **function unclear**
|shortcut-PAGE_DOWN       |         |                  |focus page down
|PAGE_UP                  |         |                  |scroll page up
|shift-PAGE_UP            |         |                  |extend selection page up
|shift-shortcut-PAGE_UP   |         |                  |discontinuous select page up **function unclear**
|shortcut-PAGE_UP         |         |                  |focus page up
|RIGHT                    |         |                  |LTR: select right cell; RTL: select left cell;
|alt-shortcut-RIGHT       |         |                  |horizontal unit scroll right
|shift-shortcut-RIGHT     |         |                  |LTR: discontinuous select next column; RTL: discontinuous select previous column; **win,linux? on mac, END is shortcut-RIGHT**
|shortcut-RIGHT           |         |                  |LTR: focus right cell; RTL: focus left cell;
|shift-RIGHT              |         |                  |LTR: extend selection right cell; RTL: extend selection left cell;
|SPACE                    |         |                  |activate editing
|ctrl-SPACE               |non-mac  |                  |toggle focus owner selection
|ctrl-shortcut-SPACE      |mac      |                  |toggle focus owner selection
|shift-SPACE              |         |                  |extend selection to focus
```

----------------------------------------

TITLE: TreeView CSS Properties Reference
DESCRIPTION: Documents the available CSS properties for the JavaFX TreeView control, including their values, default settings, and comments. Notes precedence of -fx-fixed-cell-size and inheritance from Control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_164

LANGUAGE: APIDOC
CODE:
```
Style Class: tree-view
Available CSS Properties:
  -fx-fixed-cell-size: [<size>] (Default: Region.USE_COMPUTED_SIZE) If both -fx-cell-size and -fx-fixed-cell-size properties are specified in CSS, -fx-fixed-cell-size takes precedence.
Inherits: Control
```

----------------------------------------

TITLE: FXML Variable Resolution for Object Reuse
DESCRIPTION: Shows how to define named elements using fx:id and reference them elsewhere in the FXML document using the '$' prefix for variable resolution, enabling object reuse and linking.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_26

LANGUAGE: FXML
CODE:
```
<fx:define>
    <ToggleGroup fx:id=""myToggleGroup""/>
</fx:define>
...
<RadioButton text=""A"" toggleGroup=""$myToggleGroup""/>
<RadioButton text=""B"" toggleGroup=""$myToggleGroup""/>
<RadioButton text=""C"" toggleGroup=""$myToggleGroup""/>
```

----------------------------------------

TITLE: Itanium Mangling: Nested std:: namespace symbols
DESCRIPTION: Patterns for mangled symbols within nested `std::` namespaces, incorporating `restrict`, `volatile`, or `const` qualifiers.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/unexported-libc++.txt#_snippet_1

LANGUAGE: APIDOC
CODE:
```
__ZNSt*
__ZN[KVr]St*
__ZNK[Vr]St*
__ZNKVrSt*
```

----------------------------------------

TITLE: Itanium Mangling: std:: namespace symbols
DESCRIPTION: Patterns for mangled symbols within the `std::` namespace, including combinations of `restrict`, `volatile`, or `const` qualifiers.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/unexported-libc++.txt#_snippet_0

LANGUAGE: APIDOC
CODE:
```
__ZSt*
__Z[KVr]St*
__ZK[Vr]St*
__ZKVrSt*
```

----------------------------------------

TITLE: Separator CSS Properties and Structure
DESCRIPTION: Documents the CSS properties, pseudo-classes, and internal substructure for styling the JavaFX Separator control. It includes properties for orientation and alignment, and pseudo-classes for horizontal/vertical states.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_143

LANGUAGE: APIDOC
CODE:
```
Separator:
  Style class: separator

  Available CSS Properties:
    -fx-orientation: [ horizontal | vertical ] (Default: horizontal)
    -fx-halignment: [ left | center | right ] (Default: center)
    -fx-valignment: [ top | center | baseline | bottom ] (Default: center)
    (Also inherits all properties of Control)

  Available CSS Pseudo-classes:
    horizontal: applies if this Separator is horizontal
    vertical: applies if this Separator is vertical
    (Also inherits all pseudo-classes of Control)

  Substructure:
    line — Region
```

----------------------------------------

TITLE: Compile Software using NMAKE
DESCRIPTION: Initiates the compilation process for the software using Microsoft's NMAKE utility. This command is executed after the configuration stage to build the project, generating executable files in the `win32\binaries` directory.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Readme.txt#_snippet_2

LANGUAGE: Batch
CODE:
```
nmake
```

----------------------------------------

TITLE: Load and Use Custom Font in JavaFX Application
DESCRIPTION: A JavaFX Application class demonstrating how to load a custom font defined by an @font-face rule via a stylesheet URL and apply it to a Label control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_8

LANGUAGE: Java
CODE:
```
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.stage.Stage;
public class HelloFontFace extends Application {
    @Override
    public void start(Stage primaryStage) {
        Label label = new Label(""Hello @FontFace"");
        label.setStyle(""-fx-font-family: sample; -fx-font-size: 80;"");
        Scene scene = new Scene(label);
        scene.getStylesheets().add(""http://font.samples/web?family=samples"");
        primaryStage.setTitle(""Hello @FontFace"");
        primaryStage.setScene(scene);
        primaryStage.show();
    }
    public static void main(String[] args) {
        launch(args);
    }
}
```

----------------------------------------

TITLE: RadioButton CSS Properties and Structure
DESCRIPTION: Documents the CSS properties and internal substructure for styling the JavaFX RadioButton control. It notes that RadioButton inherits all properties from ToggleButton and specifies its internal components for styling.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_139

LANGUAGE: APIDOC
CODE:
```
RadioButton:
  Style class: radio-button
  (Inherits all properties of ToggleButton)

  Substructure:
    radio — Region
      dot — Region
    label — Label
```

----------------------------------------

TITLE: Define Custom Font with @font-face CSS Rule
DESCRIPTION: Demonstrates the CSS3 @font-face rule used in JavaFX to load a custom font from a URL. It specifies font family, style, weight, and source.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_7

LANGUAGE: CSS
CODE:
```
@font-face { font-family: 'sample'; font-style: normal; font-weight: normal; src: local('sample'), url('http://font.samples/resources/sample.ttf';) format('truetype'); }
```

----------------------------------------

TITLE: Java Controller Method for Property Change Handler
DESCRIPTION: Illustrates a Java method to handle property changes, specifically for a 'parent' property. This method's signature aligns with the 'ChangeListener' interface, accepting the observable value, old value, and new value as parameters.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_39

LANGUAGE: Java
CODE:
```
public class MyController {
    public void handleParentChange(ObservableValue value, Parent oldValue, Parent newValue) {
        System.out.println(""Parent changed!"");
    }
}
```

----------------------------------------

TITLE: Create LowLevelInterpreterLib Object Library (CMake)
DESCRIPTION: This CMake command defines an object library named 'LowLevelInterpreterLib'. It compiles 'llint/LowLevelInterpreter.cpp' and includes the generated 'LLIntAssembly.h' (referenced by ${LLIntOutput}) as part of its sources. This separate target addresses toolchain limitations with inline assembly directives.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_33

LANGUAGE: CMake
CODE:
```
add_library(LowLevelInterpreterLib OBJECT llint/LowLevelInterpreter.cpp
        ${JavaScriptCore_DERIVED_SOURCES_DIR}/${LLIntOutput})
```

----------------------------------------

TITLE: Complete CMake Script for ICU Data Library Build
DESCRIPTION: This CMake script orchestrates the entire process of integrating ICU data into the build system. It leverages ""jar"" for initial data extraction, dynamically determines platform-specific symbol file extensions ("".obj"" for MSVC, "".S"" for others), calculates symbol entry points, and uses a custom ""data_as_asm"" tool to convert data into an assembly/object file. Finally, it compiles this into a static library named ""icudata"", ensuring correct linker language settings.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/CMakeLists.txt#_snippet_12

LANGUAGE: CMake
CODE:
```
# Use jar instead of unzip, it will be helpful to get rid of cygwin dependency
find_package(Java)
add_custom_command(
    COMMAND ${Java_JAR_EXECUTABLE} xf ""${ICU_DATA_ZIP_FILE}""
    WORKING_DIRECTORY ""${CMAKE_BINARY_DIR}/icu/data""
    OUTPUT ""${CMAKE_BINARY_DIR}/icu/data/${ICU_DATA_FILE_NAME}.dat""
    VERBATIM
)

if (MSVC)
    # On Windows, data_as_asm could generates .obj file directly.
    set(ICU_DATA_SYMBOL_FILE ""${CMAKE_BINARY_DIR}/icu/data/${ICU_DATA_FILE_NAME}_dat.obj"")
    set_source_files_properties(${ICU_DATA_SYMBOL_FILE} PROPERTIES EXTERNAL_OBJECT TRUE GENERATED TRUE)
else ()
    set(ICU_DATA_SYMBOL_FILE ""${CMAKE_BINARY_DIR}/icu/data/${ICU_DATA_FILE_NAME}_dat.S"")
    enable_language(ASM)
endif ()

# Get data entry point symbol name
string(LENGTH ${ICU_DATA_FILE_NAME} ICU_DATA_FILE_LENGTH)
math(EXPR ICU_DATA_ENTRY_POINT_LENGTH ""${ICU_DATA_FILE_LENGTH} - 1"")
string(SUBSTRING ${ICU_DATA_FILE_NAME} 0 ${ICU_DATA_ENTRY_POINT_LENGTH} ICU_DATA_ENTRY_POINT)

if (APPLE)
    set(ICU_DATA_ASSEMBLER_TYPE gcc-darwin)
elseif (UNIX)
    set(ICU_DATA_ASSEMBLER_TYPE gcc)
else ()
    set(ICU_DATA_ASSEMBLER_TYPE masm)
endif ()

add_custom_command(
    COMMAND $<TARGET_FILE:data_as_asm> ${ICU_DATA_ASSEMBLER_TYPE} ""${CMAKE_BINARY_DIR}/icu/data/${ICU_DATA_FILE_NAME}.dat"" ${CMAKE_BINARY_DIR}/icu/data ${ICU_DATA_ENTRY_POINT}
    OUTPUT ${ICU_DATA_SYMBOL_FILE}
    DEPENDS ""${CMAKE_BINARY_DIR}/icu/data/${ICU_DATA_FILE_NAME}.dat""
    VERBATIM
)

if (APPLE)
    set(CMAKE_ASM_FLAGS ""-mmacosx-version-min=${CMAKE_OSX_DEPLOYMENT_TARGET}"")
endif ()
add_library(icudata STATIC ${ICU_DATA_SYMBOL_FILE})
# Be explicit about the which linker to use, otherwise fails on Windows
# when creating icudata.lib.
set_target_properties(icudata PROPERTIES LINKER_LANGUAGE C)
###### data END ####
```

----------------------------------------

TITLE: Itanium Mangling: std:: vtable symbols
DESCRIPTION: Patterns for mangled vtable symbols associated with the `std::` namespace, including various qualifiers.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/unexported-libc++.txt#_snippet_2

LANGUAGE: APIDOC
CODE:
```
__ZTVSt*
__ZTV[KVr]St*
__ZTVK[Vr]St*
__ZTVKVrSt*
```

----------------------------------------

TITLE: FXML Object Instantiation with fx:factory
DESCRIPTION: Shows how to use the `fx:factory` attribute to create object instances when a class does not have a default constructor. The attribute's value specifies a static, no-argument factory method, as demonstrated with `FXCollections.observableArrayList`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_5

LANGUAGE: FXML
CODE:
```
<FXCollections fx:factory=""observableArrayList"">
    <String fx:value=""A""/>
    <String fx:value=""B""/>
    <String fx:value=""C""/>
</FXCollections>
```

----------------------------------------

TITLE: Collect Source Files by Directory in CMake
DESCRIPTION: This section uses `AUX_SOURCE_DIRECTORY` to gather all source files from specified subdirectories (`src/libpas`, `src/chaos`, etc.) into distinct CMake variables (e.g., `libpasSources`, `chaosSources`). This simplifies managing source lists for different components.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/CMakeLists.txt#_snippet_1

LANGUAGE: CMake
CODE:
```
# Get sources
AUX_SOURCE_DIRECTORY( ""src/libpas""       libpasSources   )
AUX_SOURCE_DIRECTORY( ""src/chaos""        chaosSources    )
AUX_SOURCE_DIRECTORY( ""src/mbmalloc""     mbmallocSources )
AUX_SOURCE_DIRECTORY( ""src/test""         testSources     )
AUX_SOURCE_DIRECTORY( ""src/toys""         toysSources     )
AUX_SOURCE_DIRECTORY( ""src/verifier""     verifierSources )
```

----------------------------------------

TITLE: Page Header Structure Definition
DESCRIPTION: Defines the fields contained within the `pas_segregated_page` header, which is a subtype of `pas_page_base`. These fields manage page state, allocation, locking, and object tracking within the segregated heap, crucial for the memory management algorithm.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/Documentation.md#_snippet_1

LANGUAGE: APIDOC
CODE:
```
pas_segregated_page_header:
  kind: The page's kind, used for safe downcasting from pas_page_base*.
  in_use_for_allocation: Boolean indicating if the page is currently used for allocation (exclusive views only).
  freed_while_allocating: Boolean indicating if an object was freed while allocating (exclusive views only).
  object_sizes: Sizes of objects managed by the page (exclusive views only).
  lock_ptr: Pointer to the lock used by the page.
  timestamp_empty: Timestamp when the page became empty, using a unit of time libpas calls *epoch*.
  owner_view: The exclusive view or shared handle that owns the page.
  view_cache_index: Index for view caching, if enabled.
  alloc_bits: The alloc bits array.
  num_non_empty_words: The number of 32-bit alloc bit words that are not empty.
  granule_use_counts: (Optional) Array of 1-byte use counts per granule, if page size > system page size and divided into granules.
```

----------------------------------------

TITLE: Install double-conversion Library with Scons
DESCRIPTION: This command uses scons to build and install both the static and shared versions of the double-conversion library to their default system locations.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WTF/wtf/dtoa/README.md#_snippet_1

LANGUAGE: bash
CODE:
```
scons install
```

----------------------------------------

TITLE: Itanium Mangling: Global operator new/new[] symbols
DESCRIPTION: Patterns for mangled symbols representing global `operator new` and `operator new[]`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/unexported-libc++.txt#_snippet_4

LANGUAGE: APIDOC
CODE:
```
__Zn[wa]*
```

----------------------------------------

TITLE: Add TreeShowing Listener Conditionally
DESCRIPTION: The `treeShowing` listener is now added only when necessary, optimizing scenegraph performance by reducing unnecessary listener overhead.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md#_snippet_7

LANGUAGE: APIDOC
CODE:
```
Add treeShowing listener only when needed
```

----------------------------------------

TITLE: JavaFX Region CSS Properties
DESCRIPTION: Defines CSS properties that apply to the `Region` class and its subclasses, controlling aspects like shape, positioning, scaling, pixel snapping, background, border, and preferred/min/max dimensions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_92

LANGUAGE: APIDOC
CODE:
```
-fx-position-shape:
  Values: <boolean>
  Default: true
  Comments: If true means the shape centered within the region's width and height, otherwise the shape is positioned at its source position. Has no effect if a shape string is not specified.

-fx-scale-shape:
  Values: <boolean>
  Default: true
  Comments: If true means the shape is scaled to fit the size of the region, otherwise the shape is at its source size, and its position depends on the value of the position-shape property. Has no effect if a shape string is not specified.

-fx-shape:
  Values: ""<string>""
  Default: null
  Comments: An SVG path string. By specifying a shape here the region takes on that shape instead of a rectangle or rounded rectangle. The syntax of this path string is specified in [3].

-fx-snap-to-pixel:
  Values: <boolean>
  Default: true
  Comments: Defines whether this region rounds position/spacing and ceils size values to pixel boundaries when laying out its children.

-fx-region-background:
  Values: 
  Default: null
  Comments: This property is set by specifying -fx-background-color and/or -fx-background-image. Optionally, the properties -fx-background-insets, -fx-background-radius, -fx-background-position, -fx-background-repeat, and -fx-background-size may also be set. In order to set the Region background to null, specify the style ""-fx-background-color: null; -fx-background-image: null;"". There is no shorthand notation for -fx-region-background at this time.

-fx-region-border:
  Values: 
  Default: null
  Comments: This property is set by specifying -fx-border-color and/or -fx-border-image. Optionally -fx-border-insets, -fx-border-radius, -fx-border-style, -fx-border-width, -fx-border-image-insets, -fx-border-image-repeat, and -fx-border-image-slice and -fx-border-image-width may be specified. In order to set the Region background to null, specify the style ""-fx-border-color: null; -fx-border-image: null;"". There is no shorthand notation for -fx-region-border at this time.

-fx-min-height, -fx-pref-height, -fx-max-height:
  Values: <size>
  Default: -1
  Comments: Percentage values are not useful since the actual value would be computed from the width and/or height of the Region's parent before the parent is laid out.

-fx-min-width, -fx-pref-width, -fx-max-width:
  Values: <size>
  Default: -1
  Comments: Percentage values are not useful since the actual value would be computed from the width and/or height of the Region's parent before the parent is laid out.

Inherits all properties of Parent.
```

----------------------------------------

TITLE: Build SQLite Static Library and Apply Configurations (CMake)
DESCRIPTION: This snippet defines the `SqliteJava` static library using the previously specified source files. It then applies the collected compile definitions and options to this target, ensuring the SQLite library is built with all the necessary platform-specific and optimization flags for integration into OpenJDK/JavaFX.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/sqlite/CMakeLists.txt#_snippet_3

LANGUAGE: CMake
CODE:
```
add_library(SqliteJava STATIC ${Sqlite_SOURCES})
target_include_directories(SqliteJava PUBLIC ""."")
target_compile_definitions(SqliteJava PRIVATE ${Sqlite_DEFINES})
target_compile_options(SqliteJava PRIVATE ${Sqlite_COMPILE_FLAGS})
```

----------------------------------------

TITLE: Define Java Controller Method with Event Parameter
DESCRIPTION: This Java code provides the implementation for a controller method designed to handle an event, demonstrating the standard signature that includes an `ActionEvent` parameter. This method is automatically invoked when the corresponding FXML event is triggered, allowing access to event details.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_33

LANGUAGE: Java
CODE:
```
package com.foo;

public class MyController {
    public void handleButtonAction(ActionEvent event) {
        System.out.println(""You clicked me!"");
    }
}
```

----------------------------------------

TITLE: Variable Name Start State
DESCRIPTION: Handles the first character of a variable name after the '$'. It expects a `name_start_char` to transition to `scan-var-body`, otherwise it triggers an `errorDeath` with `doVariableNameExpectedErr`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/rbbirpt.txt#_snippet_11

LANGUAGE: Custom Rule Language
CODE:
```
    name_start_char      n scan-var-body
    default                errorDeath                               doVariableNameExpectedErr
```

----------------------------------------

TITLE: Build libpas Standalone
DESCRIPTION: Command to build libpas independently. By default, it builds both a testing variant and a default variant. Use this for development or when you only need to compile the project without running tests.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/ReadMe.md#_snippet_1

LANGUAGE: Shell
CODE:
```
./build.sh
```

----------------------------------------

TITLE: JavaFX CSS Property: -fx-border-color
DESCRIPTION: Defines the color(s) for the border. It can be a single paint value or four paint values for top, right, bottom, and left, separated by commas. Each item applies to the corresponding border.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_82

LANGUAGE: APIDOC
CODE:
```
-fx-border-color:
  Syntax: [<paint>] | [<paint>] [<paint>] [<paint>] [<paint>] [ , [[<paint>] | [<paint>] [<paint>] [<paint>] [<paint>]] ]*
  Default: null
  Description: A series of paint values or sets of four paint values, separated by commas. For each item in the series, if a single paint value is specified, then that paint is used as the border for all sides of the region; and if a set of four paints is specified, they are used for the top, right, bottom, and left borders of the region, in that order. If the border is not rectangular, only the first paint value in the set is used.
```

----------------------------------------

TITLE: List JavaScriptCore Inspector Protocol Domain Definitions (CMake)
DESCRIPTION: This CMake command defines the `JavaScriptCore_INSPECTOR_DOMAINS` variable, which enumerates a collection of JSON files. Each file represents a distinct domain within the inspector protocol, such as 'Animation' or 'Network', and collectively they define the structure and commands for various aspects of the inspector's functionality.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_48

LANGUAGE: CMake
CODE:
```
set(JavaScriptCore_INSPECTOR_DOMAINS
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Animation.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/ApplicationCache.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Audit.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Browser.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/CPUProfiler.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/CSS.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Canvas.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Console.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/DOM.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/DOMDebugger.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/DOMStorage.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Database.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Debugger.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/GenericTypes.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Heap.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/IndexedDB.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Inspector.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/LayerTree.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Memory.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Network.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Page.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Recording.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Runtime.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/ScriptProfiler.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Security.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/ServiceWorker.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Target.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Timeline.json
    ${JAVASCRIPTCORE_DIR}/inspector/protocol/Worker.json
)
```

----------------------------------------

TITLE: JavaFX CSS Type: inherit
DESCRIPTION: Defines the 'inherit' value for properties in JavaFX CSS. This value allows a property to take the computed value of its parent node, or its initial value if set on the root element.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_14

LANGUAGE: APIDOC
CODE:
```
Value: 'inherit'
Behavior: Property takes computed value of parent node. If set on root, property takes its initial value.
```

----------------------------------------

TITLE: Implement Linear Easing Function
DESCRIPTION: The linear easing function provides a direct, constant rate of change from the input progress to the output progress. It is the simplest form of easing, resulting in uniform animation speed.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_54

LANGUAGE: APIDOC
CODE:
```
linear
```

----------------------------------------

TITLE: Configure Meson Option: enable_docs
DESCRIPTION: Sets the 'enable_docs' build option as a boolean, defaulting to false. This option controls whether dav1d documentation is built.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/PAL/ThirdParty/dav1d/meson_options.txt#_snippet_5

LANGUAGE: Meson
CODE:
```
option('enable_docs',
    type: 'boolean',
    value: false,
    description: 'Build dav1d documentation')
```

----------------------------------------

TITLE: JavaFX Path Node CSS Properties
DESCRIPTION: Defines specific CSS properties for the JavaFX Path node, including fill and stroke. The Path node also inherits all general CSS properties from the Shape class.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_102

LANGUAGE: APIDOC
CODE:
```
Path CSS Properties:
  -fx-fill:
    Values: <paint>
    Default: null
    Comments: 
  -fx-stroke:
    Values: <paint>
    Default: black
    Comments: 
Also has all properties of Shape.
```

----------------------------------------

TITLE: Generate Combined Inspector Protocol JSON (CMake)
DESCRIPTION: This CMake command defines a custom build step to generate a single `CombinedDomains.json` file. It orchestrates the execution of a Python script (`generate-combined-inspector-json.py`) which processes all individual inspector domain JSON files listed in `JavaScriptCore_INSPECTOR_DOMAINS`, consolidating them into one unified output file. This step is crucial for creating a comprehensive inspector protocol definition.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_49

LANGUAGE: CMake
CODE:
```
add_custom_command(
    OUTPUT ${JavaScriptCore_DERIVED_SOURCES_DIR}/CombinedDomains.json
    MAIN_DEPENDENCY ${JavaScriptCore_SCRIPTS_DIR}/generate-combined-inspector-json.py
    DEPENDS ${JavaScriptCore_INSPECTOR_DOMAINS}
    COMMAND ${PYTHON_EXECUTABLE} ${JavaScriptCore_SCRIPTS_DIR}/generate-combined-inspector-json.py ${JavaScriptCore_INSPECTOR_DOMAINS} ""${FEATURE_DEFINES_WITH_SPACE_SEPARATOR}"" > ${JavaScriptCore_DERIVED_SOURCES_DIR}/CombinedDomains.json
    VERBATIM)
```

----------------------------------------

TITLE: Install double-conversion Library to Custom Directory with Scons
DESCRIPTION: Use the DESTDIR option with scons to specify an alternative target directory for installing the double-conversion library, rather than the default system locations.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WTF/wtf/dtoa/README.md#_snippet_2

LANGUAGE: bash
CODE:
```
scons DESTDIR=alternative_directory install
```

----------------------------------------

TITLE: JavaFX Line Node CSS Properties
DESCRIPTION: Defines specific CSS properties for the JavaFX Line node, including fill and stroke. The Line node also inherits all general CSS properties from the Shape class.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_101

LANGUAGE: APIDOC
CODE:
```
Line CSS Properties:
  -fx-fill:
    Values: <paint>
    Default: null
    Comments: 
  -fx-stroke:
    Values: <paint>
    Default: black
    Comments: 
Also has all properties of Shape.
```

----------------------------------------

TITLE: Allow Hardware Cursor on Monocle-EGL Platforms
DESCRIPTION: Hardware cursors can now be utilized on Monocle-EGL platforms, potentially improving cursor performance and responsiveness in embedded environments.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md#_snippet_6

LANGUAGE: APIDOC
CODE:
```
Allow hardware cursor to be used on Monocle-EGL platforms
```

----------------------------------------

TITLE: Deprecated JavaFX CSS radial-gradient Syntax
DESCRIPTION: Documents the deprecated syntax for radial gradients in JavaFX CSS, which does not conform to standard CSS grammar. This syntax was supported in JavaFX 2.0 but may be removed in future releases.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_36

LANGUAGE: APIDOC
CODE:
```
radial [focus-angle <number> | <number> ] ]? [ focus-distance <size> ]? [ center <size,size> ]? <size> stops [ ( <number>, <color> ) ]+ [ repeat | reflect ]?
```

----------------------------------------

TITLE: Itanium Mangling: Global operator delete/delete[] symbols
DESCRIPTION: Patterns for mangled symbols representing global `operator delete` and `operator delete[]`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/unexported-libc++.txt#_snippet_5

LANGUAGE: APIDOC
CODE:
```
__Zd[la]*
```

----------------------------------------

TITLE: Generate Unicode Pattern Tables (CMake)
DESCRIPTION: This CMake custom command generates C++ header files containing Unicode pattern tables for the Yarr engine. It depends on various Unicode character database files and executes a Python script for generation, then adds the generated file to the project's headers and source dependencies.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_43

LANGUAGE: CMake
CODE:
```
add_custom_command(
    OUTPUT ${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr/UnicodePatternTables.h
    MAIN_DEPENDENCY ${JAVASCRIPTCORE_DIR}/yarr/generateYarrUnicodePropertyTables.py
    DEPENDS ${JAVASCRIPTCORE_DIR}/yarr/hasher.py ${JAVASCRIPTCORE_DIR}/ucd/DerivedBinaryProperties.txt ${JAVASCRIPTCORE_DIR}/ucd/DerivedCoreProperties.txt ${JAVASCRIPTCORE_DIR}/ucd/DerivedNormalizationProps.txt ${JAVASCRIPTCORE_DIR}/ucd/PropList.txt ${JAVASCRIPTCORE_DIR}/ucd/PropertyAliases.txt ${JAVASCRIPTCORE_DIR}/ucd/PropertyValueAliases.txt ${JAVASCRIPTCORE_DIR}/ucd/ScriptExtensions.txt ${JAVASCRIPTCORE_DIR}/ucd/Scripts.txt ${JAVASCRIPTCORE_DIR}/ucd/UnicodeData.txt ${JAVASCRIPTCORE_DIR}/ucd/emoji-data.txt
    COMMAND ${PYTHON_EXECUTABLE} ${JAVASCRIPTCORE_DIR}/yarr/generateYarrUnicodePropertyTables.py ${JAVASCRIPTCORE_DIR}/ucd ${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr/UnicodePatternTables.h
    VERBATIM)
list(APPEND JavaScriptCore_HEADERS ${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr/UnicodePatternTables.h)
WEBKIT_ADD_SOURCE_DEPENDENCIES(${CMAKE_CURRENT_SOURCE_DIR}/yarr/UnicodePatternTables.cpp ${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr/UnicodePatternTables.h)
```

----------------------------------------

TITLE: Define JavaFX CSS Drop Shadow Effect
DESCRIPTION: Describes the `dropshadow` CSS function for applying a shadow effect behind content. It details the blur type, color, radius, spread, and x/y offsets for the shadow.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_27

LANGUAGE: APIDOC
CODE:
```
dropshadow( <blur-type> , [<color>] , [<number>] , [<number>] , [<number>] , [<number>] )

<blur-type> = [ gaussian | one-pass-box | three-pass-box | two-pass-box ]
[<color>] The shadow Color.
[<number>] The radius of the shadow blur kernel. In the range [0.0 ... 127.0], typical value 10.
[<number>] The spread of the shadow. The spread is the portion of the radius where the contribution of the source material will be 100%. The remaining portion of the radius will have a contribution controlled by the blur kernel. A spread of 0.0 will result in a distribution of the shadow determined entirely by the blur algorithm. A spread of 1.0 will result in a solid growth outward of the source material opacity to the limit of the radius with a very sharp cutoff to transparency at the radius. Values should be in the range [0.0 ... 1.0].
[<number>] The shadow offset in the x direction, in pixels.
[<number>] The shadow offset in the y direction, in pixels.
```

----------------------------------------

TITLE: Deprecated JavaFX CSS linear-gradient Syntax
DESCRIPTION: Documents the deprecated syntax for linear gradients in JavaFX CSS, which does not conform to standard CSS grammar. This syntax was supported in JavaFX 2.0 but may be removed in future releases.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_33

LANGUAGE: APIDOC
CODE:
```
linear (<size>, <size>) to (<size>, <size>) stops [ (<number>,<color>) ]+ [ repeat | reflect ]?
```

----------------------------------------

TITLE: FXML Markup for Controller Association and Inline Event Handling
DESCRIPTION: This FXML snippet illustrates how to associate a Java controller class (com.foo.MyController) with an FXML document using the fx:controller attribute. It also demonstrates defining an event handler directly within the FXML markup using the onAction attribute, linking it to a method in the associated controller.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_46

LANGUAGE: FXML
CODE:
```
<VBox fx:controller=""com.foo.MyController""
    xmlns:fx=""http://javafx.com/fxml"">
    <children>
        <Button text=""Click Me!"" onAction=""#handleButtonAction""/>
    </children>
</VBox>
```

----------------------------------------

TITLE: Define JavaScriptCore Builtins Source Files (CMake)
DESCRIPTION: This CMake `set` command defines the `JavaScriptCore_BUILTINS_SOURCES` variable, which lists all the JavaScript source files that constitute the built-in functions for JavaScriptCore. These files cover various standard JavaScript objects and prototypes like Array, Function, Promise, and Map.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_26

LANGUAGE: CMake
CODE:
```
set(JavaScriptCore_BUILTINS_SOURCES
    ${JAVASCRIPTCORE_DIR}/builtins/AsyncFromSyncIteratorPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/ArrayConstructor.js
    ${JAVASCRIPTCORE_DIR}/builtins/ArrayIteratorPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/ArrayPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/AsyncFunctionPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/AsyncIteratorPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/AsyncGeneratorPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/FunctionPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/GeneratorPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/GlobalObject.js
    ${JAVASCRIPTCORE_DIR}/builtins/GlobalOperations.js
    ${JAVASCRIPTCORE_DIR}/builtins/InternalPromiseConstructor.js
    ${JAVASCRIPTCORE_DIR}/builtins/IteratorHelpers.js
    ${JAVASCRIPTCORE_DIR}/builtins/IteratorPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/MapConstructor.js
    ${JAVASCRIPTCORE_DIR}/builtins/MapIteratorPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/MapPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/ModuleLoader.js
    ${JAVASCRIPTCORE_DIR}/builtins/NumberConstructor.js
    ${JAVASCRIPTCORE_DIR}/builtins/ObjectConstructor.js
    ${JAVASCRIPTCORE_DIR}/builtins/PromiseConstructor.js
    ${JAVASCRIPTCORE_DIR}/builtins/PromiseOperations.js
    ${JAVASCRIPTCORE_DIR}/builtins/PromisePrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/ProxyHelpers.js
    ${JAVASCRIPTCORE_DIR}/builtins/ReflectObject.js
    ${JAVASCRIPTCORE_DIR}/builtins/RegExpPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/RegExpStringIteratorPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/SetIteratorPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/SetPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/ShadowRealmPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/StringConstructor.js
    ${JAVASCRIPTCORE_DIR}/builtins/StringIteratorPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/StringPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/TypedArrayConstructor.js
    ${JAVASCRIPTCORE_DIR}/builtins/TypedArrayPrototype.js
    ${JAVASCRIPTCORE_DIR}/builtins/WebAssembly.js
    ${JAVASCRIPTCORE_DIR}/inspector/InjectedScriptSource.js
)
```

----------------------------------------

TITLE: JavaFX CSS Property: -fx-border-insets
DESCRIPTION: Specifies the insets for the border. It can be a single size value or four size values (top, right, bottom, left), separated by commas. Each item applies to the corresponding border color.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_83

LANGUAGE: APIDOC
CODE:
```
-fx-border-insets:
  Syntax: [<size>] | [<size>] [<size>] [<size>] [<size>] [ , [ [<size>] | [<size>] [<size>] [<size>] [<size>]] ]*
  Default: null
  Description: A series of inset or sets of four inset values, separated by commas. For each item in the series, a single inset value means that all insets are the same; and if a set of four inset values is specified, they are used for the top, right, bottom, and left edges of the region, in that order. Each item in the series of insets applies to the corresponding item in the series of border colors.
```

----------------------------------------

TITLE: Handle Dash After Set (set-set-dash)
DESCRIPTION: Defines transitions when a dash ('-') is encountered immediately after a set. It can signify a difference operator ('-'), the start of a '--' operator, or a literal dash.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_26

LANGUAGE: Custom DSL
CODE:
```
'['                  n  set-open      ^set-after-set           doSetBeginDifference1
'-'                  n  set-after-op                           doSetDifference2
default                 set-after-lit                          doSetAddDash
```

----------------------------------------

TITLE: Define JavaScriptCore Inspector Protocol Generation Scripts (CMake)
DESCRIPTION: This CMake command defines the `JavaScriptCore_INSPECTOR_PROTOCOL_SCRIPTS` variable, which is a comprehensive list of Python scripts. These scripts are responsible for generating inspector protocol bindings, C++ backend/frontend dispatchers, and protocol type files, forming a critical part of the inspector's code generation process.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_47

LANGUAGE: CMake
CODE:
```
set(JavaScriptCore_INSPECTOR_PROTOCOL_SCRIPTS
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/generate-inspector-protocol-bindings.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/cpp_generator.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/cpp_generator_templates.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/generate_js_backend_commands.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/generate_cpp_backend_dispatcher_header.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/generate_cpp_backend_dispatcher_implementation.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/generate_cpp_frontend_dispatcher_header.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/generate_cpp_frontend_dispatcher_implementation.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/generate_cpp_protocol_types_header.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/generate_cpp_protocol_types_implementation.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/generator.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/generator_templates.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/__init__.py
    ${JavaScriptCore_INSPECTOR_SCRIPTS_DIR}/codegen/models.py
)
```

----------------------------------------

TITLE: ScrollBar CSS Properties and Structure
DESCRIPTION: Documents the CSS properties, pseudo-classes, and internal substructure for styling the JavaFX ScrollBar control. It includes properties for orientation, block increment, and unit increment, along with pseudo-classes for vertical/horizontal states.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_141

LANGUAGE: APIDOC
CODE:
```
ScrollBar:
  Style class: scroll-bar

  Available CSS Properties:
    -fx-orientation: [ horizontal | vertical ] (Default: horizontal)
    -fx-block-increment: <number> (Default: 10)
    -fx-unit-increment: <number> (Default: 1)

  Available CSS Pseudo-classes:
    vertical: applies if this ScrollBar is vertical
    horizontal: applies if this ScrollBar is horizontal
    (Also inherits all pseudo-classes of Control)

  Substructure:
    decrement-button — StackPane
      decrement-arrow — StackPane
    track — StackPane
    thumb — StackPane
    increment-button — StackPane
      increment-arrow — StackPane
```

----------------------------------------

TITLE: FXML VBox with Collection Change Handler
DESCRIPTION: Demonstrates how to attach a change handler to an ObservableList (represented by the 'children' element) in FXML using the 'onChange' attribute. This attribute points to a Java method in the associated controller class.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_37

LANGUAGE: FXML
CODE:
```
<VBox fx:controller=""com.foo.MyController""
    xmlns:fx=""http://javafx.com/fxml"">
    <children onChange=""#handleChildrenChange""/>
</VBox>
```

----------------------------------------

TITLE: MIT License for Microsoft DirectShow Samples
DESCRIPTION: This snippet provides the full text of the MIT License, granting permissions and outlining limitations for the use, modification, and distribution of the Microsoft DirectShow Samples software. It covers copyright, permissions, and disclaimers of warranty.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.media/src/main/legal/directshow.md#_snippet_0

LANGUAGE: Text
CODE:
```
Copyright (c) 1992-2004 Microsoft Corporation. All rights reserved.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
```

----------------------------------------

TITLE: JavaFX CSS Property: -fx-background-insets
DESCRIPTION: Specifies the insets for the background. It can be a single size value or a set of four size values (top, right, bottom, left), separated by commas. Each set applies to the corresponding background color.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_75

LANGUAGE: APIDOC
CODE:
```
-fx-background-insets:
  Syntax: [<size>] | [<size>] [<size>] [<size>] [<size>] [ , [ [<size>] | [<size>] [<size>] [<size>] [<size>]] ]*
  Default: 0 0 0 0
  Description: A series of size values or sets of four size values, separated by commas. A single size value means all insets are the same. Otherwise, the four values for each inset are given in the order top, right, bottom, left. Each comma-separated value or set of values in the series applies to the corresponding background color.
```

----------------------------------------

TITLE: Monocle SPI Refactor for Multi-Screen Support
DESCRIPTION: The Monocle SPI has been refactored to enable support for multiple screens, enhancing display capabilities for embedded and multi-monitor setups.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-17.md#_snippet_9

LANGUAGE: APIDOC
CODE:
```
[Monocle] Refactor monocle SPI to allow support for multiple screens
```

----------------------------------------

TITLE: JavaFX Shape Node CSS Properties
DESCRIPTION: Defines the core CSS properties applicable to all JavaFX Shape nodes, including fill, stroke, and various stroke-related attributes. These properties control the visual appearance of geometric shapes.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_96

LANGUAGE: APIDOC
CODE:
```
Shape CSS Properties:
  -fx-fill:
    Values: <paint>
    Default: BLACK
    Comments: 
  -fx-smooth:
    Values: <boolean>
    Default: true
    Comments: 
  -fx-stroke:
    Values: <paint>
    Default: null
    Comments: 
  -fx-stroke-type:
    Values: [ inside | outside | centered ]
    Default: centered
    Comments: 
  -fx-stroke-dash-array:
    Values: <size>[ <size>]+
    Default: see comment
    Comments: The initial value is that of an empty array, effectively a solid line.
  -fx-stroke-dash-offset:
    Values: <number>
    Default: 0
    Comments: 
  -fx-stroke-line-cap:
    Values: [ square | butt | round ]
    Default: square
    Comments: 
  -fx-stroke-line-join:
    Values: [ miter | bevel | round ]
    Default: miter
    Comments: 
  -fx-stroke-miter-limit:
    Values: <number>
    Default: 10
    Comments: 
  -fx-stroke-width:
    Values: <size>
    Default: 1
    Comments: 
Also has all properties of Node.
```

----------------------------------------

TITLE: Unicode Property Value Aliases File Format Specification
DESCRIPTION: Describes the structure and interpretation of the PropertyValueAliases.txt file, detailing field definitions, special cases for Canonical_Combining_Class, and rules for loose matching of property names and values. It also clarifies potential ambiguities with property value names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropertyValueAliases.txt#_snippet_0

LANGUAGE: APIDOC
CODE:
```
# FORMAT
#
# Each line describes a property value name.
# This consists of three or more fields, separated by semicolons.
#
# First Field: The first field describes the property for which that
# property value name is used.
#
# Second Field: The second field is the short name for the property value.
# It is typically an abbreviation, but in a number of cases it is simply
# a duplicate of the ""long name"" in the third field.
#
# Third Field: The third field is the long name for the property value,
# typically the formal name used in documentation about the property value.
#
# In the case of Canonical_Combining_Class (ccc), there are 4 fields:
# The second field is numeric, the third is the short name, and the fourth is the long name.
#
# The above are the preferred aliases. Other aliases may be listed in additional fields.
#
# Loose matching should be applied to all property names and property values, with
# the exception of String Property values. With loose matching of property names and
# values, the case distinctions, whitespace, hyphens, and '_' are ignored.
# For Numeric Property values, numeric equivalence is applied: thus ""01.00""
# is equivalent to ""1"".
#
# NOTE: Property value names are NOT unique across properties. For example:
#
#   AL means Arabic Letter for the Bidi_Class property, and
#   AL means Above_Left for the Canonical_Combining_Class property, and
#   AL means Alphabetic for the Line_Break property.
#
# In addition, some property names may be the same as some property value names.
# For example:
#
#   sc means the Script property, and
#   Sc means the General_Category property value Currency_Symbol (Sc)
#
# The combination of property value and property name is, however, unique.
```

----------------------------------------

TITLE: Define JavaFX CSS Paint Values
DESCRIPTION: Explains the different types of paint values supported in JavaFX CSS, which can be solid colors, linear gradients, radial gradients, or image patterns. It provides the syntax for combining these types.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_30

LANGUAGE: APIDOC
CODE:
```
<color> | <linear-gradient> | <radial-gradient> | <image-pattern> <repeating-image-pattern>
```

----------------------------------------

TITLE: Macro for Creating Intrinsic Allocators (C)
DESCRIPTION: Demonstrates the use of the `PAS_CREATE_TRY_ALLOCATE_INTRINSIC` macro, which is used to generate both inline and out-of-line allocation functions for intrinsic heaps within libpas. This macro is crucial for setting up the various allocation fast paths.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/Documentation.md#_snippet_9

LANGUAGE: C
CODE:
```
PAS_CREATE_TRY_ALLOCATE_INTRINSIC(
    bmalloc_try_allocate_impl,
    BMALLOC_HEAP_CONFIG,
    &bmalloc_intrinsic_runtime_config.base,
    &bmalloc_allocator_counts,
    pas_allocation_result_identity,
    &bmalloc_common_primitive_heap,
    &bmalloc_common_primitive_heap_support,
    pas_intrinsic_heap_is_designated);
```

----------------------------------------

TITLE: FXML with Script for Dynamic Label Text
DESCRIPTION: Shows how script blocks can be used to dynamically configure FXML elements. A JavaScript variable 'myText' is defined within the script, and its value is then used to populate the 'text' property of a Label instance.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_44

LANGUAGE: FXML
CODE:
```
<fx:script>
var myText = ""This is the text of my label."";
</fx:script>

...

<Label text=""$myText""/>
```

----------------------------------------

TITLE: Generate Regular Expression JIT Tables (CMake)
DESCRIPTION: This CMake custom command generates C++ header files containing JIT tables for regular expressions, used by the Yarr engine. It executes a Python script to perform the generation and adds the generated file to the project's headers and source dependencies.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_42

LANGUAGE: CMake
CODE:
```
add_custom_command(
    OUTPUT ${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr/RegExpJitTables.h
    MAIN_DEPENDENCY ${CMAKE_CURRENT_SOURCE_DIR}/yarr/create_regex_tables
    COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/yarr/create_regex_tables ${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr/RegExpJitTables.h
    VERBATIM)
list(APPEND JavaScriptCore_HEADERS ${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr/RegExpJitTables.h)
WEBKIT_ADD_SOURCE_DEPENDENCIES(${CMAKE_CURRENT_SOURCE_DIR}/yarr/YarrPattern.cpp ${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr/RegExpJitTables.h)
```

----------------------------------------

TITLE: Define WebKitLegacy Interface Libraries and Headers in CMake
DESCRIPTION: Configures the public interface for the WebKitLegacy component. It sets WebKitLegacy itself as an interface library, specifies the directory where its public headers will be installed, and defines a dependency on the header copying step to ensure these headers are available for other modules.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebKitLegacy/CMakeLists.txt#_snippet_5

LANGUAGE: CMake
CODE:
```
set(WebKitLegacy_INTERFACE_LIBRARIES WebKitLegacy)
set(WebKitLegacy_INTERFACE_INCLUDE_DIRECTORIES ${WebKitLegacy_FRAMEWORK_HEADERS_DIR})
set(WebKitLegacy_INTERFACE_DEPENDENCIES WebKitLegacy_CopyHeaders)
```

----------------------------------------

TITLE: CMake Project Initialization and Global Settings
DESCRIPTION: This snippet initializes the CMake project, sets the minimum required CMake version, defines the project name (`libpas`), specifies the C++ standard (C++23), and adds global compile options like `-Wall` for warnings.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/CMakeLists.txt#_snippet_0

LANGUAGE: CMake
CODE:
```
cmake_minimum_required(VERSION 3.21)

project(libpas)

set(CMAKE_CXX_STANDARD 23 CACHE STRING ""C++ standard to be used"")
add_compile_options(-Wall)
```

----------------------------------------

TITLE: Configure Build with CMake
DESCRIPTION: This command initializes the build system using CMake in the root directory. Note that running this command will overwrite any existing Makefile.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WTF/wtf/dtoa/README.md#_snippet_3

LANGUAGE: bash
CODE:
```
cmake .
```

----------------------------------------

TITLE: Define JavaFX CSS Inner Shadow Effect
DESCRIPTION: Describes the `innershadow` CSS function for applying a shadow effect inside the edges of content. It details the blur type, color, radius, choke, and x/y offsets for the inner shadow.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_28

LANGUAGE: APIDOC
CODE:
```
innershadow( <blur-type> , [<color>] , [<number>] , [<number>] , [<number>] , [<number>] )

<blur-type> = [ gaussian | one-pass-box | three-pass-box | two-pass-box ]
[<color>] The shadow Color.
[<number>] The radius of the shadow blur kernel. In the range [0.0 ... 127.0], typical value 10.
[<number>] The choke of the shadow. The choke is the portion of the radius where the contribution of the source material will be 100%. The remaining portion of the radius will have a contribution controlled by the blur kernel. A choke of 0.0 will result in a distribution of the shadow determined entirely by the blur algorithm. A choke of 1.0 will result in a solid growth inward of the shadow from the edges to the limit of the radius with a very sharp cutoff to transparency inside the radius. Values should be in the range [0.0 ... 1.0].
[<number>] The shadow offset in the x direction, in pixels.
[<number>] The shadow offset in the y direction, in pixels.
```

----------------------------------------

TITLE: CMake Build Configuration for ICU i18n Static Library
DESCRIPTION: This CMake snippet defines how the `icui18n` static library is built. It implicitly uses a set of C++ source files (like those listed at the beginning of the document), specifies public and private include directories, defines compiler flags for implementation and public usage, and links against the `icuuc` library.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/CMakeLists.txt#_snippet_9

LANGUAGE: CMake
CODE:
```
add_library(icui18n STATIC ${ICU_I18N_SOURCES})
target_include_directories(icui18n
    PUBLIC ${ICU_PUBLIC_INCLUDES}
)
target_compile_definitions(icui18n
    PRIVATE ""LIB_ICU_I18N_STATIC""
    PRIVATE ""U_I18N_IMPLEMENTATION""
    PRIVATE ${ICU_PRIVATE_DEFINES}
    PUBLIC ${ICU_PUBLIC_DEFINES}
)
target_compile_options(icui18n
    PRIVATE ${ICU_PRIVATE_COMPILER_OPTIONS}
)
target_link_libraries(icui18n PUBLIC icuuc)
```

----------------------------------------

TITLE: FXML Expression Binding for Dynamic Property Updates
DESCRIPTION: Demonstrates how to bind a property value to a variable or expression using the '${}' syntax, ensuring automatic propagation of changes. This allows for dynamic UI updates based on other element properties.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_28

LANGUAGE: FXML
CODE:
```
<TextField fx:id=""textField""/>
<Label text=""${textField.text}""/>
```

----------------------------------------

TITLE: JavaFX CSS Type: <length> Units
DESCRIPTION: Details the various length units supported in JavaFX CSS, categorizing them as relative (px, em, ex) or absolute (in, cm, mm, pt, pc). No whitespace is allowed between the number and the unit.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_19

LANGUAGE: APIDOC
CODE:
```
Syntax: <number>[ px | mm | cm | in | pt | pc | em | ex ]?

Relative Units:
  px: pixels, relative to the viewing device
  em: the 'font-size' of the relevant font
  ex: the 'x-height' of the relevant font

Absolute Units:
  in: inches (1 inch = 2.54 cm)
  cm: centimeters
  mm: millimeters
  pt: points (1/72nd of an inch)
  pc: picas (1 pica = 12 points)
```

----------------------------------------

TITLE: Define Nested FXML Include
DESCRIPTION: This FXML snippet demonstrates how to include another FXML document (dialog.fxml) within a main FXML file (main_window_content.fxml) using <fx:include> and wrap it with <fx:define> to separate scene graphs, allowing its controller to be accessed from the parent controller.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_53

LANGUAGE: FXML
CODE:
```
<VBox fx:controller=""com.foo.MainController"">
   <fx:define>
      <fx:include fx:id=""dialog"" source=""dialog.fxml""/>
   </fx:define>
   ...
</VBox>
```

----------------------------------------

TITLE: JavaFX Rectangle Node CSS Properties
DESCRIPTION: Defines specific CSS properties for the JavaFX Rectangle node, including arc height and width for rounded corners. The Rectangle node also inherits all general CSS properties from the Shape class.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_105

LANGUAGE: APIDOC
CODE:
```
Rectangle CSS Properties:
  -fx-arc-height:
    Values: <size>
    Default: 0
    Comments: 
  -fx-arc-width:
    Values: <size>
    Default: 0
    Comments: 
Also has all properties of Shape.
```

----------------------------------------

TITLE: API: Set Expression Open State
DESCRIPTION: Manages the initial parsing of a character set expression after the opening '['. It checks for negation ('^'), POSIX character class indicator (':'), or defaults to the next state for literal parsing.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_23

LANGUAGE: APIDOC
CODE:
```
State: set-open
  Transitions:
    - Input: '^'
      Consume Input: false
      Next State
```

----------------------------------------

TITLE: Install Compiled Software using NMAKE
DESCRIPTION: Installs the compiled software to the directory specified during the configuration stage. This command is executed after successful compilation to deploy the built artifacts to their final destination.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Readme.txt#_snippet_3

LANGUAGE: Batch
CODE:
```
nmake install
```

----------------------------------------

TITLE: Implement SMIL 3.0 Easing Functions in JavaFX
DESCRIPTION: These JavaFX-specific easing functions (`-fx-ease-in`, `-fx-ease-out`, `-fx-ease-both`) provide compatibility with `javafx.animation.Interpolator` implementations of SMIL 3.0 cubic bezier easing functions. They offer predefined acceleration and deceleration factors.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_57

LANGUAGE: APIDOC
CODE:
```
-fx-ease-in | -fx-ease-out | -fx-ease-both

-fx-ease-in: SMIL 3.0 ease-in function with an acceleration factor of 0.2
-fx-ease-out: SMIL 3.0 ease-out function with a deceleration factor of 0.2
-fx-ease-both: SMIL 3.0 ease-in/out function with an acceleration and decelaration factor of 0.2
```

----------------------------------------

TITLE: FXML Property Setter using Attribute
DESCRIPTION: Shows an alternative way to set a Label's 'text' property using an XML attribute. This method is suitable for simple string values and provides a compact syntax.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_15

LANGUAGE: FXML
CODE:
```
<?import javafx.scene.control.Label?>
<Label text=""Hello, World!""/>
```

----------------------------------------

TITLE: Configure Build with Custom Paths and Debug Symbols
DESCRIPTION: Configures the build process to install the library to `c:\opt`, use `c:\opt\include` and `c:\opt\lib` for compiler/linker search paths, and enable debug symbols in the executables. This command customizes the software's installation location and build parameters, ensuring debug information is included.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src/win32/Readme.txt#_snippet_1

LANGUAGE: Batch
CODE:
```
cscript configure.js prefix=c:\opt include=c:\opt\include lib=c:\opt\lib debug=yes
```

----------------------------------------

TITLE: Define JavaFX CSS Duration Type
DESCRIPTION: Defines the syntax for duration values in JavaFX CSS, which can be a number with 's' (seconds) or 'ms' (milliseconds) units, or the keyword 'indefinite'. It also references the JavaFX Duration.INDEFINITE constant and W3C time units.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_22

LANGUAGE: APIDOC
CODE:
```
duration:
  syntax: ""[ <number> [ s | ms ] ] | indefinite""
  description: ""A duration is a number with second or millisecond units, or the value indefinite.""
  units:
    s: ""duration in seconds""
    ms: ""duration in milliseconds. One second is 1000 milliseconds.""
    indefinite: ""See Duration.INDEFINITE""
  references: ""W3C time units (http://www.w3.org/TR/css3-values/#time)""
```

----------------------------------------

TITLE: Declare and Configure PAL WebKit Framework (CMake)
DESCRIPTION: This CMake snippet uses WebKit-specific macros to declare the PAL module as a framework, include configuration files, copy public headers to the framework's destination, and finalize the framework setup.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/PAL/pal/CMakeLists.txt#_snippet_5

LANGUAGE: CMake
CODE:
```
WEBKIT_FRAMEWORK_DECLARE(PAL)
WEBKIT_INCLUDE_CONFIG_FILES_IF_EXISTS()

WEBKIT_COPY_FILES(PAL_CopyHeaders
    DESTINATION ${PAL_FRAMEWORK_HEADERS_DIR}/pal
    FILES ${PAL_PUBLIC_HEADERS}
)

WEBKIT_FRAMEWORK(PAL)
```

----------------------------------------

TITLE: ProgressBar CSS Properties and Structure
DESCRIPTION: Documents the CSS properties, pseudo-classes, and internal substructure for styling the JavaFX ProgressBar control. It lists specific properties like bar length, escape, flip, and animation time, along with inherited properties from Control.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_137

LANGUAGE: APIDOC
CODE:
```
ProgressBar:
  Style class: progress-bar

  Available CSS Properties:
    -fx-indeterminate-bar-length: <number> (Default: 60)
    -fx-indeterminate-bar-escape: <boolean> (Default: true)
    -fx-indeterminate-bar-flip: <boolean> (Default: true)
    -fx-indeterminate-bar-animation-time: <number> (Default: 2.0)
    (Also inherits all properties of Control)

  Available CSS Pseudo-classes:
    determinate: applies if the indeterminate variable is false
    indeterminate: applies if the indeterminate variable is true
    (Also inherits all pseudo-classes of Control)

  Substructure:
    track — StackPane
      bar — Region
```

----------------------------------------

TITLE: Enable Native Access for JavaFX Modules
DESCRIPTION: Command line argument to suppress warnings and ensure future compatibility for JavaFX applications relying on native access, specifically for `javafx.graphics`, `javafx.media`, and `javafx.web` modules.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-24.md#_snippet_0

LANGUAGE: Bash
CODE:
```
java --enable-native-access=javafx.graphics,javafx.media,javafx.web
```

----------------------------------------

TITLE: Define Text Bounds Measurement Types
DESCRIPTION: This section describes different methods for measuring text geometry: visual bounds for precise graphical positioning and logical bounds for layout relative to other text and components. It also introduces `logical-vertical-center` for vertical alignment.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_58

LANGUAGE: APIDOC
CODE:
```
[ logical | visual | logical-vertical-center ]

logical: The logical bounds are based on font metrics information. The width is based on the glyph advances and the height of the ascent, descent, and line gap, except for the last line which does not include the line gap. This is usually the fastest option.
visual: Use visual bounds as the basis for calculating the bounds. This is likely to be slower than using logical bounds.
logical-vertical-center: Use logical vertical centered bounds as the basis for calculating the bounds. This bounds type is typically used to center Text nodes vertically within the bounds of its parent.
```

----------------------------------------

TITLE: FXML VBox with Property Change Handler
DESCRIPTION: Shows how to register a handler for a specific property (e.g., 'parent') directly within FXML using the 'on<propertyName>Change' attribute. This attribute links to a corresponding method in the FXML controller.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_40

LANGUAGE: FXML
CODE:
```
<VBox fx:controller=""com.foo.MyController""
    xmlns:fx=""http://javafx.com/fxml"" onParentChange=""#handleParentChange""/>
```

----------------------------------------

TITLE: Define Static Properties in FXML
DESCRIPTION: This FXML snippet demonstrates the use of static property attributes, specifically `GridPane.rowIndex` and `GridPane.columnIndex`, on a `Label` element. This approach provides a more concise syntax for setting layout constraints compared to using static property elements.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_30

LANGUAGE: FXML
CODE:
```
<GridPane>
    <children>
        <Label text=""My Label"" GridPane.rowIndex=""0"" GridPane.columnIndex=""0""/>
    </children>
</GridPane>
```

----------------------------------------

TITLE: TreeView Keyboard Shortcuts Reference
DESCRIPTION: Defines the keyboard shortcuts and their corresponding actions for the TreeView component across different platforms. This includes a detailed table of key combinations and their functions, along with specific notes on macOS key mappings.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/behavior/TreeViewBehavior.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
|Key Combination          |Platform |Condition         |Function                                |
|-------------------------|---------|------------------|----------------------------------------|
|shortcut-A               |         |                  |select all
|ADD                      |         |                  |expand row
|DOWN                     |         |                  |select next row
|alt-shortcut-DOWN        |         |                  |vertical unit scroll down
|shift-DOWN               |         |                  |extend selection to the next row
|shift-shortcut-DOWN      |         |                  |discontinuous select next row **function unclear**
|shortcut-DOWN            |         |                  |focus next row
|END                      |         |                  |select last row 
|shift-END                |         |                  |select to last row **function unclear**
|shift-shortcut-END       |         |                  |discontinuous select all to last row **win,linux? on mac, END is shortcut-RIGHT** **function unclear**
|shortcut-END             |         |                  |focus last row **win,linux? on mac, END is shortcut-RIGHT** **function unclear**
|ENTER                    |         |                  |activate editing
|ESCAPE                   |         |                  |cancel editing
|F2                       |         |                  |activate editing
|HOME                     |         |                  |select first row
|shift-HOME               |         |                  |select to first row **function unclear**
|shift-shortcut-HOME      |         |                  |discontinuous select all to first row **win,linux? on mac, HOME is shortcut-LEFT** **function unclear**
|shortcut-HOME            |         |                  |focus first row **win,linux? on mac, HOME is shortcut-LEFT**
|KP_DOWN                  |         |                  |select next row
|shift-KP_DOWN            |         |                  |extend selection to the next row
|KP_LEFT                  |         |                  |LTR: collapse row; RTL: expand row;
|KP_RIGHT                 |         |                  |LTR: expand row; RTL: collapse row;
|KP_UP                    |         |                  |select previous row
|shift-KP_UP              |         |                  |extend selection to the previous row
|LEFT                     |         |                  |LTR: collapse row; RTL: expand row;
|alt-shortcut-LEFT        |         |                  |horizontal unit scroll left
|MULTIPLY                 |         |                  |expand all
|PAGE_DOWN                |         |                  |scroll page down
|shift-PAGE_DOWN          |         |                  |select all page down **function unclear**
|shift-shortcut-PAGE_DOWN |         |                  |discontinuous select page down **function unclear**
|shortcut-PAGE_DOWN       |         |                  |focus page down
|PAGE_UP                  |         |                  |scroll page up
|shift-PAGE_UP            |         |                  |select all page up **function unclear**
|shift-shortcut-PAGE_UP   |         |                  |discontinuous select page up **function unclear**
|shortcut-PAGE_UP         |         |                  |focus page up
|RIGHT                    |         |                  |LTR: expand row; RTL: collapse row;
|alt-shortcut-RIGHT       |         |                  |horizontal unit scroll right
|SPACE                    |         |                  |toggle focus owner selection
|ctrl-SPACE               |non-mac  |                  |toggle focus owner selection
|ctrl-shortcut-SPACE      |mac      |                  |toggle focus owner selection
|shift-SPACE              |         |                  |select all to focus **function unclear**
|shift-shortcut-SPACE     |         |                  |select all to focus, set anchor **function unclear**
|SUBTRACT                 |         |                  |collapse row
|UP                       |         |                  |select previous row
|alt-shortcut-UP          |         |                  |vertical unit scroll up
|shift-UP                 |         |                  |extend selection to the previous row
|shift-shortcut-UP        |         |                  |discontinuous select previous row **function unclear**
|shortcut-UP              |         |                  |focus previous row

### Notes

1. On macOS, `alt` is represented by the `option` key
2. On macOS, `shortcut` is represented by the `command` key
3. On macOS, Home = `command` left arrow key
4. On macOS, End = `command` right arrow key
5. On macOS, PgUp = `fn` + `up arrow` key
6. On macOS, PgDn = `fn` + `down arrow` key
7. On macOS, BACKSPACE = `delete` key
8. On macOS, DELETE = `fn` + `delete` key
```

----------------------------------------

TITLE: Parsing Rules for Interval Quantifier Opening ({)
DESCRIPTION: Specifies the initial parsing rules when encountering the '{' character, which signifies the start of an interval quantifier. It expects a digit character to proceed to the 'interval-lower' state, otherwise, it triggers an error.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_15

LANGUAGE: Parsing Rules DSL
CODE:
```
digit_char              interval-lower
default                 errorDeath                              doIntervalError
```

----------------------------------------

TITLE: Configure LowLevelInterpreterLib Dependencies and Include Paths (CMake)
DESCRIPTION: This CMake section configures the `LowLevelInterpreterLib` target by setting its private include directories based on JavaScriptCore and adding necessary build dependencies like `Bytecodes` and `JSCBuiltins`. It ensures the interpreter library can correctly find its required files.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_54

LANGUAGE: CMake
CODE:
```
target_include_directories(LowLevelInterpreterLib
    PRIVATE ""$<TARGET_PROPERTY:JavaScriptCore,INCLUDE_DIRECTORIES>"")
add_dependencies(LowLevelInterpreterLib Bytecodes JSCBuiltins)
if (TARGET WTF_CopyHeaders)
    add_dependencies(LowLevelInterpreterLib WTF_CopyHeaders)
endif ()
```

----------------------------------------

TITLE: Configure JavaScriptCore Interface Libraries and Headers (CMake)
DESCRIPTION: This section sets up CMake variables for JavaScriptCore's interface libraries, include directories, and dependencies. It ensures that necessary headers and libraries are correctly linked and available for other parts of the build system.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_51

LANGUAGE: CMake
CODE:
```
set(JavaScriptCore_INTERFACE_LIBRARIES JavaScriptCore)
set(JavaScriptCore_INTERFACE_INCLUDE_DIRECTORIES
    ${JavaScriptCore_FRAMEWORK_HEADERS_DIR}
    ${JavaScriptCore_PRIVATE_FRAMEWORK_HEADERS_DIR}
)
set(JavaScriptCore_INTERFACE_DEPENDENCIES
    JavaScriptCore_CopyHeaders
    JavaScriptCore_CopyPrivateHeaders
)

WEBKIT_FRAMEWORK_DECLARE(JavaScriptCore)
WEBKIT_INCLUDE_CONFIG_FILES_IF_EXISTS()
```

----------------------------------------

TITLE: Configure and Generate Web Preferences for DumpRenderTree
DESCRIPTION: This snippet configures the generation of web preferences for DumpRenderTree. It defines template files and YAML configuration files, marks the generated files as such, and sets up a custom command to execute a Ruby script for generating C++ and header files based on these preferences.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/DumpRenderTree/java/CMakeLists.txt#_snippet_1

LANGUAGE: CMake
CODE:
```
set(DumpRenderTree_WEB_PREFERENCES_TEMPLATES
    ${DumpRenderTree_DIR}/Scripts/PreferencesTemplates/TestOptionsGeneratedWebKitLegacyKeyMapping.cpp.erb
    ${DumpRenderTree_DIR}/Scripts/PreferencesTemplates/TestOptionsGeneratedKeys.h.erb
)

set(DumpRenderTree_WEB_PREFERENCES
    ${WTF_SCRIPTS_DIR}/Preferences/UnifiedWebPreferences.yaml
)

set_source_files_properties(${DumpRenderTree_WEB_PREFERENCES} PROPERTIES GENERATED TRUE)

add_custom_command(
    OUTPUT ${DumpRenderTree_DERIVED_SOURCES_DIR}/TestOptionsGeneratedWebKitLegacyKeyMapping.cpp ${DumpRenderTree_DERIVED_SOURCES_DIR}/TestOptionsGeneratedKeys.h
    DEPENDS ${DumpRenderTree_WEB_PREFERENCES_TEMPLATES} ${DumpRenderTree_WEB_PREFERENCES} WTF_CopyPreferences
    COMMAND ${RUBY_EXECUTABLE} ${WTF_SCRIPTS_DIR}/GeneratePreferences.rb --frontend WebKitLegacy --outputDir ""${DumpRenderTree_DERIVED_SOURCES_DIR}"" --template ${DumpRenderTree_DIR}/Scripts/PreferencesTemplates/TestOptionsGeneratedWebKitLegacyKeyMapping.cpp.erb --template ${DumpRenderTree_DIR}/Scripts/PreferencesTemplates/TestOptionsGeneratedKeys.h.erb ${DumpRenderTree_WEB_PREFERENCES}
    VERBATIM)
```

----------------------------------------

TITLE: Configure LLIntOffsetsExtractor Executable (CMake)
DESCRIPTION: This CMake snippet defines the 'LLIntOffsetsExtractor' executable, specifying its source files, include paths, frameworks, and dependencies. It also includes conditional linking of ICU libraries for Unix debug builds on the Java port, demonstrating platform-specific build logic.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_31

LANGUAGE: CMake
CODE:
```
WEBKIT_EXECUTABLE_DECLARE(LLIntOffsetsExtractor)
set(LLIntOffsetsExtractor_SOURCES
    ${JAVASCRIPTCORE_DIR}/llint/LLIntOffsetsExtractor.cpp
    ${JavaScriptCore_DERIVED_SOURCES_DIR}/LLIntDesiredOffsets.h ${JavaScriptCore_DERIVED_SOURCES_DIR}/Bytecodes.h ${JavaScriptCore_DERIVED_SOURCES_DIR}/BytecodeStructs.h
)

set(LLIntOffsetsExtractor_PRIVATE_INCLUDE_DIRECTORIES
    $<TARGET_PROPERTY:JavaScriptCore,INCLUDE_DIRECTORIES>
)
if (UNIX AND NOT APPLE AND CMAKE_BUILD_TYPE STREQUAL ""Debug"" AND PORT STREQUAL ""Java"")
    set(LLIntOffsetsExtractor_LIBRARIES icuuc icui18n icudata)
endif()
set(LLIntOffsetsExtractor_FRAMEWORKS ${JavaScriptCore_FRAMEWORKS})
set(LLIntOffsetsExtractor_DEPENDENCIES JavaScriptCore_CopyHeaders JSCBuiltins)
WEBKIT_EXECUTABLE(LLIntOffsetsExtractor)
```

----------------------------------------

TITLE: Apply Dashed Green Border and Yellow Fill with CSS
DESCRIPTION: This CSS rule provides advanced styling for elements with the my-rect class, including yellow fill, a green dashed stroke, stroke width, dash array pattern, dash offset, and line cap.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_11

LANGUAGE: CSS
CODE:
```
.my-rect {
  -fx-fill: yellow;
  -fx-stroke: green;
  -fx-stroke-width: 5;
  -fx-stroke-dash-array: 12 2 4 2;
  -fx-stroke-dash-offset: 6;
  -fx-stroke-line-cap: butt;
}
```

----------------------------------------

TITLE: Java Controller Method for ListChangeListener
DESCRIPTION: Provides the Java code for the 'handleChildrenChange' method, which is designed to be invoked when the 'children' collection changes. It correctly uses 'javafx.collections.ListChangeListener.Change' as its parameter to access change details.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_38

LANGUAGE: Java
CODE:
```
package com.foo;

import javafx.collections.ListChangeListener.Change;

public class MyController {
    public void handleChildrenChange(ListChangeListener.Change c) {
        System.out.println(""Children changed!"");
    }
}
```

----------------------------------------

TITLE: Convert and Verify Dependency Verification File Format
DESCRIPTION: These commands are used to convert the newline format of the `verification-metadata.xml` file from Windows (CRLF) to Unix (LF) format using `dos2unix`, and then verify the file type and encoding using the `file` command, ensuring cross-platform compatibility.
SOURCE: https://github.com/openjdk/jfx/blob/master/gradle/README.txt#_snippet_2

LANGUAGE: Shell
CODE:
```
dos2unix gradle/verification-metadata.xml
file gradle/verification-metadata.xml
```

----------------------------------------

TITLE: Regex Parser State: open-paren-lookbehind (Lookbehind Parenthesis)
DESCRIPTION: Parses lookbehind assertions within regular expressions. It checks for '=' for positive lookbehind (?<=) or '!' for negative lookbehind (?<!). It also handles the start of named capture groups (?<name>).
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_8

LANGUAGE: Regex Parser DSL
CODE:
```
open-paren-lookbehind:
    '='                  n  term            ^expr-cont              doOpenLookBehind       #  (?<=
    '!'                  n  term            ^expr-cont              doOpenLookBehindNeg    #  (?<!
    ascii_letter            named-capture                           doBeginNamedCapture    #  (?<name
    default                 errorDeath                              doBadOpenParenType
```

----------------------------------------

TITLE: Build WebKitLegacy Framework in CMake
DESCRIPTION: Invokes a custom CMake function, `WEBKIT_FRAMEWORK`, to build the WebKitLegacy framework. This function encapsulates the complex steps required to compile, link, and package the framework, simplifying the overall build process for this component.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebKitLegacy/CMakeLists.txt#_snippet_8

LANGUAGE: CMake
CODE:
```
WEBKIT_FRAMEWORK(WebKitLegacy)
```

----------------------------------------

TITLE: JavaFX CSS Button Opacity Transition on Hover
DESCRIPTION: This CSS snippet demonstrates how to create a smooth opacity transition for a JavaFX button when a user hovers over it. It sets an initial opacity of 0.8 and defines the transition for the -fx-opacity property over 0.5 seconds, changing to 1 on hover.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_4

LANGUAGE: CSS
CODE:
```
.button {
    -fx-opacity: 0.8;
    transition-property: -fx-opacity;
    transition-duration: 0.5s;
}

.button:hover {
    -fx-opacity: 1;
}
```

----------------------------------------

TITLE: PipeWire Specific File Copyright Notices
DESCRIPTION: Individual copyright statements for specific PipeWire source files, indicating the respective organizations or authors and the year of copyright.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/legal/pipewire.md#_snippet_1

LANGUAGE: Plaintext
CODE:
```
Copyright © 2021 Collabora Ltd.
```

LANGUAGE: Plaintext
CODE:
```
Copyright © 2021 Red Hat, Inc.
```

LANGUAGE: Plaintext
CODE:
```
Copyright © 2023 PipeWire authors
```

----------------------------------------

TITLE: CMake Build Configuration for ICU Tools Utility Executable
DESCRIPTION: This CMake snippet defines the `data_as_asm` executable, which is part of the ICU tools. It explicitly lists numerous C++ source files for the utility, sets private include directories, defines implementation-specific compiler flags, and links against both `icuuc` and `icui18n` libraries.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/CMakeLists.txt#_snippet_10

LANGUAGE: CMake
CODE:
```
set(ICU_TOOLSUTILS_SOURCES
    source/tools/toolutil/collationinfo.cpp
    source/tools/toolutil/dbgutil.cpp
    source/tools/toolutil/denseranges.cpp
    source/tools/toolutil/filestrm.cpp
    source/tools/toolutil/filetools.cpp
    source/tools/toolutil/flagparser.cpp
    source/tools/toolutil/package.cpp
    source/tools/toolutil/pkgitems.cpp
    source/tools/toolutil/ppucd.cpp
    source/tools/toolutil/swapimpl.cpp
    source/tools/toolutil/toolutil.cpp
    source/tools/toolutil/unewdata.cpp
    source/tools/toolutil/ucln_tu.cpp
    source/tools/toolutil/ucm.cpp
    source/tools/toolutil/ucmstate.cpp
    source/tools/toolutil/udbgutil.cpp
    source/tools/toolutil/uoptions.cpp
    source/tools/toolutil/uparse.cpp
    source/tools/toolutil/ucbuf.cpp
    source/tools/toolutil/writesrc.cpp
    source/tools/toolutil/pkg_genc.cpp
    source/tools/toolutil/pkg_gencmn.cpp
    source/tools/toolutil/pkg_icu.cpp
    source/tools/toolutil/xmlparser.cpp

    java/data/data_as_asm.cpp
    source/stubdata/stubdata.cpp
)

add_executable(data_as_asm ${ICU_TOOLSUTILS_SOURCES})
target_include_directories(data_as_asm
    PRIVATE ${ICU_PUBLIC_INCLUDES}
    PRIVATE ""source/tools/toolutil""
)
target_compile_definitions(data_as_asm
    PRIVATE ""U_TOOLUTIL_IMPLEMENTATION""
)
target_compile_options(data_as_asm
    PRIVATE ${ICU_PRIVATE_COMPILER_OPTIONS}
)
target_link_libraries(data_as_asm icuuc icui18n)
```

----------------------------------------

TITLE: Manually Cache WebKit and Media Libraries for Unix
DESCRIPTION: Place compiled WebKit and Media shared libraries (e.g., .so or .dylib files) into this specified directory for caching on Unix-like systems. This manual caching avoids recompilation during subsequent builds and speeds up test execution.
SOURCE: https://github.com/openjdk/jfx/blob/master/WEBKIT-MEDIA-STUBS.md#_snippet_1

LANGUAGE: Shell
CODE:
```
$projectDir/../caches/sdk/lib
```

----------------------------------------

TITLE: Regex Parser State: named-capture (Named Capture Group)
DESCRIPTION: Processes the name part of a named capture group `(?<name>...)`. It consumes alphanumeric characters for the name until a '>' is encountered, which signifies the end of the name and the start of the captured expression.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_11

LANGUAGE: Regex Parser DSL
CODE:
```
named-capture:
    ascii_letter         n  named-capture                           doContinueNamedCapture
    digit_char           n  named-capture                           doContinueNamedCapture
    '>'                  n  term               ^expr-quant          doOpenCaptureParen      # common w non-named capture.
    default                 errorDeath                              doBadNamedCapture
```

----------------------------------------

TITLE: Define WebKitLegacy Private Include Directories in CMake
DESCRIPTION: Specifies the private include directories necessary for compiling the WebKitLegacy component. These paths include the CMake binary output directory, specific WebKitLegacy subdirectories (Storage, WebCoreSupport), and the location for generated source files, ensuring all required headers are found during compilation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebKitLegacy/CMakeLists.txt#_snippet_2

LANGUAGE: CMake
CODE:
```
set(WebKitLegacy_PRIVATE_INCLUDE_DIRECTORIES
    ""${CMAKE_BINARY_DIR}""
    ""${WEBKITLEGACY_DIR}/Storage""
    ""${WEBKITLEGACY_DIR}/WebCoreSupport""
    ""${WebKitLegacy_DERIVED_SOURCES_DIR}""
)
```

----------------------------------------

TITLE: Reference List of JavaFX CSS Named Colors
DESCRIPTION: A comprehensive list of all supported named constant colors in JavaFX CSS, along with their corresponding hexadecimal RGB values. These colors can be used directly by their unquoted name in CSS properties, providing a wide palette of predefined options.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_43

LANGUAGE: APIDOC
CODE:
```
aliceblue = #f0f8ff
antiquewhite = #faebd7
aqua = #00ffff
aquamarine = #7fffd4
azure = #f0ffff
beige = #f5f5dc
bisque = #ffe4c4
black = #000000
blanchedalmond = #ffebcd
blue = #0000ff
blueviolet = #8a2be2
brown = #a52a2a
burlywood = #deb887
cadetblue = #5f9ea0
chartreuse = #7fff00
chocolate = #d2691e
coral = #ff7f50
cornflowerblue = #6495ed
cornsilk = #fff8dc
crimson = #dc143c
cyan = #00ffff
darkblue = #00008b
darkcyan = #008b8b
darkgoldenrod = #b8860b
darkgray = #a9a9a9
darkgreen = #006400
darkgrey = #a9a9a9
darkkhaki = #bdb76b
darkmagenta = #8b008b
darkolivegreen = #556b2f
darkorange = #ff8c00
darkorchid = #9932cc
darkred = #8b0000
darksalmon = #e9967a
darkseagreen = #8fbc8f
darkslateblue = #483d8b
darkslategray = #2f4f4f
darkslategrey = #2f4f4f
darkturquoise = #00ced1
darkviolet = #9400d3
deeppink = #ff1493
deepskyblue = #00bfff
dimgray = #696969
dimgrey = #696969
dodgerblue = #1e90ff
firebrick = #b22222
floralwhite = #fffaf0
forestgreen = #228b22
fuchsia = #ff00ff
gainsboro = #dcdcdc
ghostwhite = #f8f8ff
gold = #ffd700
goldenrod = #daa520
gray = #808080
green = #008000
greenyellow = #adff2f
grey = #808080
honeydew = #f0fff0
hotpink = #ff69b4
indianred = #cd5c5c
indigo = #4b0082
ivory = #fffff0
khaki = #f0e68c
lavender = #e6e6fa
lavenderblush = #fff0f5
lawngreen = #7cfc00
lemonchiffon = #fffacd
lightblue = #add8e6
lightcoral = #f08080
lightcyan = #e0ffff
lightgoldenrodyellow = #fafad2
lightgray = #d3d3d3
lightgreen = #90ee90
lightgrey = #d3d3d3
lightpink = #ffb6c1
lightsalmon = #ffa07a
lightseagreen = #20b2aa
lightskyblue = #87cefa
lightslategray = #778899
lightslategrey = #778899
lightsteelblue = #b0c4de
lightyellow = #ffffe0
lime = #00ff00
limegreen = #32cd32
linen = #faf0e6
magenta = #ff00ff
maroon = #800000
mediumaquamarine = #66cdaa
mediumblue = #0000cd
mediumorchid = #ba55d3
mediumpurple = #9370db
mediumseagreen = #3cb371
mediumslateblue = #7b68ee
mediumspringgreen = #00fa9a
mediumturquoise = #48d1cc
mediumvioletred = #c71585
midnightblue = #191970
mintcream = #f5fffa
mistyrose = #ffe4e1
moccasin = #ffe4b5
navajowhite = #ffdead
navy = #000080
oldlace = #fdf5e6
olive = #808000
olivedrab = #6b8e23
orange = #ffa500
orangered = #ff4500
orchid = #da70d6
palegoldenrod = #eee8aa
palegreen = #98fb98
paleturquoise = #afeeee
palevioletred = #db7093
papayawhip = #ffefd5
peachpuff = #ffdab9
peru = #cd853f
pink = #ffc0cb
plum = #dda0dd
powderblue = #b0e0e6
purple = #800080
red = #ff0000
rosybrown = #bc8f8f
royalblue = #4169e1
saddlebrown = #8b4513
salmon = #fa8072
sandybrown = #f4a460
seagreen = #2e8b57
seashell = #fff5ee
sienna = #a0522d
silver = #c0c0c0
skyblue = #87ceeb
slateblue = #6a5acd
slategray = #708090
slategrey = #708090
snow = #fffafa
springgreen = #00ff7f
steelblue = #4682b4
tan = #d2b48c
teal = #008080
thistle = #d8bfd8
tomato = #ff6347
turquoise = #40e0d0
violet = #ee82ee
wheat = #f5deb3
white = #ffffff
whitesmoke = #f5f5f5
yellow = #ffff00
yellowgreen = #9acd32
transparent = rgba(0,0,0,0)
```

----------------------------------------

TITLE: Java Controller with @FXML for Private Event Handler Method
DESCRIPTION: This Java code demonstrates using the @FXML annotation to allow the FXML loader to access and invoke a private event handler method (handleButtonAction). This provides a way to maintain stricter visibility for controller members while still enabling FXML-based event wiring.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_51

LANGUAGE: Java
CODE:
```
package com.foo;

public class MyController {
    @FXML
    private void handleButtonAction(ActionEvent event) {
        System.out.println(""You clicked me!"");
    }
}
```

----------------------------------------

TITLE: Configure Gradle to Compile WebKit and Media Libraries
DESCRIPTION: This Gradle property configuration enables the compilation of WebKit and Media shared libraries directly from their source code. This process requires additional build tooling and can be time-consuming. It is recommended to cache the output if you are not actively developing these sources.
SOURCE: https://github.com/openjdk/jfx/blob/master/WEBKIT-MEDIA-STUBS.md#_snippet_0

LANGUAGE: Gradle
CODE:
```
-PCOMPILE_WEBKIT=true -PCOMPILE_MEDIA=true
```

----------------------------------------

TITLE: Deprecated JavaFX CSS ladder() Function Syntax
DESCRIPTION: This syntax for the ladder() function is deprecated in JavaFX 2.0 as it does not conform to standard CSS grammar. While currently supported by the JavaFX 2.0 CSS parser, its support may be removed in future releases, and users should transition to the standard syntax.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_52

LANGUAGE: APIDOC
CODE:
```
ladder([<color>](#typecolor)) stops \[ ( [<number>](#typenumber) , [<color>](#typecolor) ) \]+
```

----------------------------------------

TITLE: List JavaScriptCore Object Lookup Table Sources (CMake)
DESCRIPTION: This extensive snippet defines the `JavaScriptCore_OBJECT_LUT_SOURCES` variable, which lists numerous C++ source files. These files are primarily from the 'runtime' and 'wasm/js' directories and contribute to the JavaScriptCore engine's object lookup table and core functionalities, including various built-in objects, prototypes, and WebAssembly components.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_2

LANGUAGE: CMake
CODE:
```
set(JavaScriptCore_OBJECT_LUT_SOURCES
    runtime/ArrayConstructor.cpp
    runtime/AsyncFromSyncIteratorPrototype.cpp
    runtime/AsyncGeneratorPrototype.cpp
    runtime/BigIntConstructor.cpp
    runtime/BigIntPrototype.cpp
    runtime/BooleanPrototype.cpp
    runtime/DateConstructor.cpp
    runtime/DatePrototype.cpp
    runtime/ErrorPrototype.cpp
    runtime/GeneratorPrototype.cpp
    runtime/IntlCollatorConstructor.cpp
    runtime/IntlCollatorPrototype.cpp
    runtime/IntlDateTimeFormatConstructor.cpp
    runtime/IntlDateTimeFormatPrototype.cpp
    runtime/IntlDisplayNamesConstructor.cpp
    runtime/IntlDisplayNamesPrototype.cpp
    runtime/IntlDurationFormatConstructor.cpp
    runtime/IntlDurationFormatPrototype.cpp
    runtime/IntlListFormatConstructor.cpp
    runtime/IntlListFormatPrototype.cpp
    runtime/IntlLocalePrototype.cpp
    runtime/IntlNumberFormatConstructor.cpp
    runtime/IntlNumberFormatPrototype.cpp
    runtime/IntlObject.cpp
    runtime/IntlPluralRulesConstructor.cpp
    runtime/IntlPluralRulesPrototype.cpp
    runtime/IntlRelativeTimeFormatConstructor.cpp
    runtime/IntlRelativeTimeFormatPrototype.cpp
    runtime/IntlSegmentIteratorPrototype.cpp
    runtime/IntlSegmenterConstructor.cpp
    runtime/IntlSegmenterPrototype.cpp
    runtime/IntlSegmentsPrototype.cpp
    runtime/JSDataViewPrototype.cpp
    runtime/JSGlobalObject.cpp
    runtime/JSInternalPromiseConstructor.cpp
    runtime/JSONObject.cpp
    runtime/JSPromiseConstructor.cpp
    runtime/JSPromisePrototype.cpp
    runtime/MapConstructor.cpp
    runtime/MapPrototype.cpp
    runtime/NumberConstructor.cpp
    runtime/NumberPrototype.cpp
    runtime/ObjectConstructor.cpp
    runtime/ReflectObject.cpp
    runtime/RegExpConstructor.cpp
    runtime/RegExpPrototype.cpp
    runtime/RegExpStringIteratorPrototype.cpp
    runtime/SetPrototype.cpp
    runtime/ShadowRealmObject.cpp
    runtime/ShadowRealmPrototype.cpp
    runtime/StringConstructor.cpp
    runtime/StringPrototype.cpp
    runtime/SymbolConstructor.cpp
    runtime/SymbolPrototype.cpp
    runtime/TemporalCalendarConstructor.cpp
    runtime/TemporalCalendarPrototype.cpp
    runtime/TemporalDurationConstructor.cpp
    runtime/TemporalDurationPrototype.cpp
    runtime/TemporalInstantConstructor.cpp
    runtime/TemporalInstantPrototype.cpp
    runtime/TemporalNow.cpp
    runtime/TemporalObject.cpp
    runtime/TemporalPlainDateConstructor.cpp
    runtime/TemporalPlainDatePrototype.cpp
    runtime/TemporalPlainDateTimeConstructor.cpp
    runtime/TemporalPlainDateTimePrototype.cpp
    runtime/TemporalPlainTimeConstructor.cpp
    runtime/TemporalPlainTimePrototype.cpp
    runtime/TemporalTimeZoneConstructor.cpp
    runtime/TemporalTimeZonePrototype.cpp

    wasm/js/JSWebAssembly.cpp
    wasm/js/WebAssemblyArrayConstructor.cpp
    wasm/js/WebAssemblyArrayPrototype.cpp
    wasm/js/WebAssemblyCompileErrorConstructor.cpp
    wasm/js/WebAssemblyCompileErrorPrototype.cpp
    wasm/js/WebAssemblyExceptionConstructor.cpp
    wasm/js/WebAssemblyExceptionPrototype.cpp
    wasm/js/WebAssemblyGlobalConstructor.cpp
    wasm/js/WebAssemblyGlobalPrototype.cpp
    wasm/js/WebAssemblyInstanceConstructor.cpp
)
```

----------------------------------------

TITLE: Handle Dash After Literal (set-lit-dash)
DESCRIPTION: Defines transitions when a dash ('-') is encountered after literals within a set (e.g., `[literals-`). It can be part of a range, a '--' operator, or a literal dash. Examples illustrate cases where it's a literal, an error, or a range.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_29

LANGUAGE: Custom DSL
CODE:
```
'-'                  n  set-after-op                            doSetDifference2
'['                     set-after-lit                           doSetAddDash
']'                     set-after-lit                           doSetAddDash
'\'                  n  set-lit-dash-escape
default              n  set-after-range                         doSetRange
```

----------------------------------------

TITLE: Generate Unicode Canonicalization Source (CMake)
DESCRIPTION: This CMake custom command generates a C++ source file for Unicode canonicalization, specifically for case folding. It uses a Python script and depends on the Unicode CaseFolding.txt file to produce the necessary C++ code.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_44

LANGUAGE: CMake
CODE:
```
add_custom_command(
    OUTPUT ${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr/YarrCanonicalizeUnicode.cpp
    MAIN_DEPENDENCY ${JAVASCRIPTCORE_DIR}/yarr/generateYarrCanonicalizeUnicode
    DEPENDS ${JAVASCRIPTCORE_DIR}/ucd/CaseFolding.txt
    COMMAND ${PYTHON_EXECUTABLE} ${JAVASCRIPTCORE_DIR}/yarr/generateYarrCanonicalizeUnicode ${JAVASCRIPTCORE_DIR}/ucd/CaseFolding.txt ${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr/YarrCanonicalizeUnicode.cpp
    VERBATIM)
```

----------------------------------------

TITLE: Build Debug Configuration of libpas
DESCRIPTION: Command to build libpas in Debug configuration instead of the default Release. This enables debugging symbols and disables optimizations, making it easier to step through code and identify issues during development.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/ReadMe.md#_snippet_6

LANGUAGE: Shell
CODE:
```
./build.sh -c Debug
```

----------------------------------------

TITLE: Define JavaScriptCore Builtins Generation Scripts (CMake)
DESCRIPTION: This CMake `set` command defines a list of Python scripts (`BUILTINS_GENERATOR_SCRIPTS`) responsible for generating JavaScriptCore's built-in functions. These scripts handle various aspects of the generation, including combining headers and implementations, and creating wrappers.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_25

LANGUAGE: CMake
CODE:
```
set(BUILTINS_GENERATOR_SCRIPTS
    ${JavaScriptCore_SCRIPTS_DIR}/wkbuiltins.py
    ${JavaScriptCore_SCRIPTS_DIR}/builtins_generator.py
    ${JavaScriptCore_SCRIPTS_DIR}/builtins_model.py
    ${JavaScriptCore_SCRIPTS_DIR}/builtins_templates.py
    ${JavaScriptCore_SCRIPTS_DIR}/builtins_generate_combined_header.py
    ${JavaScriptCore_SCRIPTS_DIR}/builtins_generate_combined_implementation.py
    ${JavaScriptCore_SCRIPTS_DIR}/builtins_generate_separate_header.py
    ${JavaScriptCore_SCRIPTS_DIR}/builtins_generate_separate_implementation.py
    ${JavaScriptCore_SCRIPTS_DIR}/builtins_generate_wrapper_header.py
    ${JavaScriptCore_SCRIPTS_DIR}/builtins_generate_wrapper_implementation.py
    ${JavaScriptCore_SCRIPTS_DIR}/builtins_generate_internals_wrapper_header.py
    ${JavaScriptCore_SCRIPTS_DIR}/builtins_generate_internals_wrapper_implementation.py
    ${JavaScriptCore_SCRIPTS_DIR}/generate-js-builtins.py
    ${JavaScriptCore_SCRIPTS_DIR}/lazywriter.py
)
```

----------------------------------------

TITLE: Implement Dynamic Looked-up Colors in JavaFX CSS
DESCRIPTION: Shows how to define a custom color variable at the `:root` level and then use it as a looked-up color for UI elements. This powerful feature allows for centralized color management and dynamic updates at runtime, affecting all dependent elements in the scene graph.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_44

LANGUAGE: CSS
CODE:
```
:root { abc: #f00 }
.button { -fx-background-color: abc }
```

----------------------------------------

TITLE: Configure Include and Link Directories in CMake
DESCRIPTION: This snippet defines the directories where CMake should search for header files (`include_directories`) and libraries (`link_directories`). These paths are essential for the compiler and linker to locate necessary files during the build process, ensuring all dependencies are found.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/CMakeLists.txt#_snippet_2

LANGUAGE: CMake
CODE:
```
# Directories
include_directories(    ${CMAKE_SOURCE_DIR}/src/libpas
                        ${CMAKE_SOURCE_DIR}/src/verifier
                        ${CMAKE_SOURCE_DIR}/src/chaos
                        ${CMAKE_SOURCE_DIR}/src/toys
                        ${CMAKE_SOURCE_DIR}/src/test
                        ${CMAKE_SOURCE_DIR}/src/mbmalloc )

link_directories(       ${CMAKE_SOURCE_DIR}/src/libpas
                        ${CMAKE_SOURCE_DIR}/src/verifier
                        ${CMAKE_SOURCE_DIR}/src/chaos
                        ${CMAKE_SOURCE_DIR}/src/toys
                        ${CMAKE_SOURCE_DIR}/src/test
                        ${CMAKE_SOURCE_DIR}/src/mbmalloc )
```

----------------------------------------

TITLE: Define WebKitLegacy Source Files in CMake
DESCRIPTION: Defines the `WebKitLegacy_SOURCES` variable, listing all C++ source files required for compiling the WebKitLegacy component. This includes files from the Storage and WebCoreSupport subdirectories, which are essential parts of the WebKit engine's functionality.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebKitLegacy/CMakeLists.txt#_snippet_1

LANGUAGE: CMake
CODE:
```
set(WebKitLegacy_SOURCES
    Storage/InProcessIDBServer.cpp
    Storage/StorageAreaImpl.cpp
    Storage/StorageAreaSync.cpp
    Storage/StorageNamespaceImpl.cpp
    Storage/StorageSyncManager.cpp
    Storage/StorageThread.cpp
    Storage/StorageTracker.cpp
    Storage/WebDatabaseProvider.cpp
    Storage/WebStorageNamespaceProvider.cpp

    WebCoreSupport/NetworkStorageSessionMap.cpp
    WebCoreSupport/WebBroadcastChannelRegistry.cpp
    WebCoreSupport/WebResourceLoadScheduler.cpp
    WebCoreSupport/WebViewGroup.cpp
)
```

----------------------------------------

TITLE: Implement Cubic Bézier Easing Functions
DESCRIPTION: Cubic Bézier easing functions define animation curves using four control points. Predefined functions like ease, ease-in, ease-out, and ease-in-out are provided, along with a custom `cubic-bezier` option for precise control over animation acceleration and deceleration.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_55

LANGUAGE: APIDOC
CODE:
```
ease | ease-in | ease-out | ease-in-out | cubic-bezier([<number [0,1]>](#typenumber), [<number>](#typenumber), [<number [0,1]>](#typenumber), [<number>](#typenumber))

ease: equivalent to cubic-bezier(0.25, 0.1, 0.25, 1)
ease-in: equivalent to cubic-bezier(0.42, 0, 1, 1)
ease-out: equivalent to cubic-bezier(0, 0, 0.58, 1)
ease-in-out: equivalent to cubic-bezier(0.42, 0, 0.58, 1)
cubic-bezier: defines the control points P1 and P2 using four real numbers: (xP1, yP1, xP2, yP2)
```

----------------------------------------

TITLE: Define WebKitLegacy Required Frameworks in CMake
DESCRIPTION: Lists the core frameworks that WebKitLegacy depends on for its functionality. These include fundamental libraries such as JavaScriptCore, PAL (Portable Abstraction Layer), WTF (Web Template Framework), and WebCore, which provide essential services for the WebKit engine.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebKitLegacy/CMakeLists.txt#_snippet_3

LANGUAGE: CMake
CODE:
```
set(WebKitLegacy_FRAMEWORKS
    JavaScriptCore
    PAL
    WTF
    WebCore
)
```

----------------------------------------

TITLE: Case Folding (cf) Rules
DESCRIPTION: Specifies rules for Unicode case folding, which maps characters to their case-folded equivalents for caseless matching. This section includes a directive for handling missing code points in the case folding process.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropertyValueAliases.txt#_snippet_9

LANGUAGE: APIDOC
CODE:
```
# @missing: 0000..10FFFF; Case_Folding; <code point>
```

----------------------------------------

TITLE: Implement Step Easing Functions
DESCRIPTION: Step easing functions divide an animation into discrete intervals, causing abrupt changes rather than smooth transitions. Options include `step-start`, `step-end`, and a customizable `steps` function with an integer for intervals and a `step-position` for defining where the ""jump"" occurs within the interval.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_56

LANGUAGE: APIDOC
CODE:
```
step-start | step-end | steps([<integer>](#typenumber)[,<step-position>]?)

where <step-position> = jump-start | jump-end | jump-none | jump-both | start | end

step-start: equivalent to steps(1, start)
step-end: equivalent to steps(1, end)
steps: defines a step function with [<integer>](#typenumber) intervals and an optional <step-position>; if omitted, end is implied

jump-start: the interval starts with a rise point when the input progress value is 0
jump-end: the interval ends with a rise point when the input progress value is 1
jump-none: all rise points are within the open interval (0..1)
jump-both: the interval starts with a rise point when the input progress value is 0, and ends with a rise point when the input progress value is 1
start: equivalent to jump-start
end: equivalent to jump-end
```

----------------------------------------

TITLE: Configure JavaScriptCore Frameworks (CMake)
DESCRIPTION: Sets the initial frameworks required by JavaScriptCore to WTF. Conditionally appends the 'bmalloc' framework if USE_SYSTEM_MALLOC is not enabled, indicating that a custom memory allocator is used instead of the system's default.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_5

LANGUAGE: CMake
CODE:
```
set(JavaScriptCore_FRAMEWORKS
    WTF
)
if (NOT USE_SYSTEM_MALLOC)
    list(APPEND JavaScriptCore_FRAMEWORKS bmalloc)
endif ()
```

----------------------------------------

TITLE: ICU Regex Parser: 'start' State Definition
DESCRIPTION: Defines the initial state of the regular expression pattern parser. From this state, any input character ('default') triggers a transition to the 'term' state, initiating the pattern parsing process with the 'doPatStart' action.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_0

LANGUAGE: ICU Regex State Table DSL
CODE:
```
start:
   default                 term                                     doPatStart
```

----------------------------------------

TITLE: PipeWire MIT License Text
DESCRIPTION: The comprehensive text of the MIT License governing the distribution and use of PipeWire header files, outlining permissions for modification, distribution, and commercial use, along with disclaimers of warranty.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/legal/pipewire.md#_snippet_0

LANGUAGE: License
CODE:
```
Copyright © 2018-2023 Wim Taymans

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the ""Software""),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice (including the next
paragraph) shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
```

----------------------------------------

TITLE: Glob JavaScriptCore Script Files (CMake)
DESCRIPTION: Uses the file(GLOB) command to find all files matching the defined script source paths. The discovered script files are then stored in the JavaScriptCore_SCRIPTS_SOURCES variable, making them available for subsequent processing and custom build commands.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_8

LANGUAGE: CMake
CODE:
```
file(GLOB JavaScriptCore_SCRIPTS_SOURCES ${JavaScriptCore_SCRIPTS_SOURCES_PATHS})
```

----------------------------------------

TITLE: JavaFX CSS ladder() Function Definition
DESCRIPTION: The ladder() function interpolates between colors based on the brightness of an input color, using provided color stops. It effectively indexes a conceptual gradient with the input color's brightness, returning a single color. Color stops conform to W3C color-stop syntax.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_50

LANGUAGE: APIDOC
CODE:
```
ladder([<color>](#typecolor) , [<color-stop>](#typecolorstop) \[, [<color-stop>](#typecolorstop)\]+)
```

----------------------------------------

TITLE: JavaFX CSS derive() Function Definition
DESCRIPTION: The derive() function computes a brighter or darker version of a given color. The second parameter, a percentage, indicates the brightness offset: positive values brighten, negative values darken. A value of -100% results in black, 0% means no change, and 100% results in white.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_49

LANGUAGE: APIDOC
CODE:
```
derive( [<color>](#typecolor) , [<number>](#typenumber)% )
```

----------------------------------------

TITLE: Build Monkey Tester with Ant
DESCRIPTION: Command to build the Monkey Tester application using Ant, requiring the absolute path to the JavaFX SDK to be specified.
SOURCE: https://github.com/openjdk/jfx/blob/master/tests/manual/monkey/README.md#_snippet_0

LANGUAGE: Shell
CODE:
```
ant -Djavafx.home=<JAVAFX>
```

----------------------------------------

TITLE: CMake: Handle LowLevelInterpreterLib based on JavaScriptCore Library Type
DESCRIPTION: This CMake snippet conditionally appends the LowLevelInterpreterLib to either `JavaScriptCore_PRIVATE_LIBRARIES` or `JavaScriptCore_SOURCES` based on whether `JavaScriptCore_LIBRARY_TYPE` is 'OBJECT'. This ensures proper linking or source inclusion depending on the build configuration.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_56

LANGUAGE: CMake
CODE:
```
if (${JavaScriptCore_LIBRARY_TYPE} STREQUAL ""OBJECT"")
    list(APPEND JavaScriptCore_PRIVATE_LIBRARIES $<TARGET_OBJECTS:LowLevelInterpreterLib>)
else ()
    list(APPEND JavaScriptCore_SOURCES $<TARGET_OBJECTS:LowLevelInterpreterLib>)
endif ()
```

----------------------------------------

TITLE: Apply Named Colors to UI Elements in JavaFX CSS
DESCRIPTION: Demonstrates how to use a predefined named color directly in JavaFX CSS to set a property like background color for a button. Named colors are simple, unquoted strings representing specific RGB values, offering a straightforward way to apply standard colors.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_42

LANGUAGE: CSS
CODE:
```
.button {
    -fx-background-color: red;
}
```

----------------------------------------

TITLE: JavaFX Region CSS Properties Reference
DESCRIPTION: Detailed reference for CSS properties used to style JavaFX Region backgrounds and borders. These properties control fills, images, strokes, and image borders, allowing for complex visual customization. The properties are applied in layers: background fills, background images, border strokes, border images, and finally contents.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_73

LANGUAGE: APIDOC
CODE:
```
Region CSS Properties:

BACKGROUND FILLS:
  -fx-background-color: <paint> values (comma-separated series)
    Description: Specifies one or more background fills. The number of values determines the number of background rectangles painted. Each value defines a fill layer.
  -fx-background-radius: <length> values (comma-separated series or sets of 4)
    Description: Defines the radius for corners of background rectangles. Can be a single value (applied to all four corners) or a set of four values (top-left, top-right, bottom-right, bottom-left).
  -fx-background-insets: <length> values (comma-separated series or sets of 4)
    Description: Defines insets for background rectangles. Can be a single value (applied to all four edges) or a set of four values (top, right, bottom, left).
  -fx-region-background: javafx.scene.layout.Background
    Default: null
    Comments: This property is likely an internal representation of the Region's background object.

BACKGROUND IMAGES:
  -fx-background-image: <url> values (comma-separated series)
    Description: Specifies one or more background images. The number of images determines the number of background image layers painted.
  -fx-background-repeat: <repeat-style> values (comma-separated series)
    Description: Defines how background images are repeated (e.g., 'repeat', 'no-repeat', 'repeat-x', 'repeat-y'). Corresponds to the background-image series.
  -fx-background-position: <position> values (comma-separated series)
    Description: Defines the initial position of background images. Corresponds to the background-image series.
  -fx-background-size: <size> values (comma-separated series)
    Description: Defines the size of background images. Corresponds to the background-image series.

STROKED BORDERS:
  -fx-border-color: <paint> values (comma-separated series)
    Description: Specifies one or more border colors. The maximum number of items in this or -fx-border-style determines the number of border layers. Default: black.
  -fx-border-style: <border-style> values (comma-separated series)
    Description: Specifies one or more border styles (e.g., 'solid', 'dashed', 'dotted'). Default: solid.
  -fx-border-width: <length> values (comma-separated series)
    Description: Specifies the width of borders.
  -fx-border-radius: <length> values (comma-separated series)
    Description: Defines the radius for corners of stroked borders.
  -fx-border-insets: <length> values (comma-separated series)
    Description: Defines insets for stroked borders.

IMAGE BORDERS:
  -fx-border-image-source: <url> values (comma-separated series)
    Description: Specifies the source image for border images. The number of items determines the number of image border layers.
  -fx-border-image-repeat: <repeat-style> values (comma-separated series)
    Description: Defines how border images are repeated.
  -fx-border-image-slice: <slice> values (comma-separated series)
    Description: Defines how the border image is sliced.
  -fx-border-image-width: <length> values (comma-separated series)
    Description: Defines the width of border images.
  -fx-border-image-insets: <length> values (comma-separated series)
    Description: Defines insets for border images.
```

----------------------------------------

TITLE: Unicode Code Points for Avestan Script
DESCRIPTION: Defines Unicode code point ranges, categories, and character names for the Avestan script, including letters and punctuation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_21

LANGUAGE: APIDOC
CODE:
```
10B00..10B35  ; Avestan # Lo  [54] AVESTAN LETTER A..AVESTAN LETTER HE
10B39..10B3F  ; Avestan # Po   [7] AVESTAN ABBREVIATION MARK..LARGE ONE RING OVER TWO RINGS PUNCTUATION
```

----------------------------------------

TITLE: Run JavaFX SDK Applications with Upgraded `jdk.jsobject` Module
DESCRIPTION: Commands to compile and run JavaFX applications using the SDK, leveraging the `--upgrade-module-path` argument to use the JavaFX-provided `jdk.jsobject` module instead of the deprecated JDK version. This approach requires JDK 24 or later.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-24.md#_snippet_1

LANGUAGE: Bash
CODE:
```
javac --upgrade-module-path=/path/to/javafx-sdk-24/lib
java --upgrade-module-path=/path/to/javafx-sdk-24/lib
```

----------------------------------------

TITLE: Regex Parser State: paren-flag (Match Mode Flags)
DESCRIPTION: Parses match mode flags within a regular expression group, such as `(?ismx-ismx)`. It continues to consume flag characters ('i', 'd', 'm', 's', 'u', 'w', 'x', '-') until a ')' or ':' is found, which signifies the end of the flag sequence or the start of a group with flags.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/i18n/regexcst.txt#_snippet_10

LANGUAGE: Regex Parser DSL
CODE:
```
paren-flag:
    'i'                  n  paren-flag                              doMatchMode
    'd'                  n  paren-flag                              doMatchMode
    'm'                  n  paren-flag                              doMatchMode
    's'                  n  paren-flag                              doMatchMode
    'u'                  n  paren-flag                              doMatchMode
    'w'                  n  paren-flag                              doMatchMode
    'x'                  n  paren-flag                              doMatchMode
    '-'                  n  paren-flag                              doMatchMode
    ')'                  n  term                                    doSetMatchMode
    ':'                  n  term              ^expr-quant           doMatchModeParen
    default                 errorDeath                              doBadModeFlag
```

----------------------------------------

TITLE: Tamil Unicode Character Definitions
DESCRIPTION: Defines the Unicode code points and their corresponding character names and general categories for the Tamil script. This includes various letters, signs, digits, and punctuation marks used in the Tamil writing system, specifying both individual characters and ranges.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_1

LANGUAGE: APIDOC
CODE:
```
0B82          ; Tamil # Mn       TAMIL SIGN ANUSVARA
0B83          ; Tamil # Lo       TAMIL SIGN VISARGA
0B85..0B8A    ; Tamil # Lo   [6] TAMIL LETTER A..TAMIL LETTER UU
0B8E..0B90    ; Tamil # Lo   [3] TAMIL LETTER E..TAMIL LETTER AI
0B92..0B95    ; Tamil # Lo   [4] TAMIL LETTER O..TAMIL LETTER KA
0B99..0B9A    ; Tamil # Lo   [2] TAMIL LETTER NGA..TAMIL LETTER CA
0B9C          ; Tamil # Lo       TAMIL LETTER JA
0B9E..0B9F    ; Tamil # Lo   [2] TAMIL LETTER NYA..TAMIL LETTER TTA
0BA3..0BA4    ; Tamil # Lo   [2] TAMIL LETTER NNA..TAMIL LETTER TA
0BA8..0BAA    ; Tamil # Lo   [3] TAMIL LETTER NA..TAMIL LETTER PA
0BAE..0BB9    ; Tamil # Lo  [12] TAMIL LETTER MA..TAMIL LETTER HA
0BBE..0BBF    ; Tamil # Mc   [2] TAMIL VOWEL SIGN AA..TAMIL VOWEL SIGN I
0BC0          ; Tamil # Mn       TAMIL VOWEL SIGN II
0BC1..0BC2    ; Tamil # Mc   [2] TAMIL VOWEL SIGN U..TAMIL VOWEL SIGN UU
0BC6..0BC8    ; Tamil # Mc   [3] TAMIL VOWEL SIGN E..TAMIL VOWEL SIGN AI
0BCA..0BCC    ; Tamil # Mc   [3] TAMIL VOWEL SIGN O..TAMIL VOWEL SIGN AU
0BCD          ; Tamil # Mn       TAMIL SIGN VIRAMA
0BD0          ; Tamil # Lo       TAMIL OM
0BD7          ; Tamil # Mc       TAMIL AU LENGTH MARK
0BE6..0BEF    ; Tamil # Nd  [10] TAMIL DIGIT ZERO..TAMIL DIGIT NINE
0BF0..0BF2    ; Tamil # No   [3] TAMIL NUMBER TEN..TAMIL NUMBER ONE THOUSAND
0BF3..0BF8    ; Tamil # So   [6] TAMIL DAY SIGN..TAMIL AS ABOVE SIGN
0BF9          ; Tamil # Sc       TAMIL RUPEE SIGN
0BFA          ; Tamil # So       TAMIL NUMBER SIGN
11FC0..11FD4  ; Tamil # No  [21] TAMIL FRACTION ONE THREE-HUNDRED-AND-TWENTIETH..TAMIL FRACTION DOWNSCALING FACTOR KIIZH
11FD5..11FDC  ; Tamil # So   [8] TAMIL SIGN NEL..TAMIL SIGN MUKKURUNI
11FDD..11FE0  ; Tamil # Sc   [4] TAMIL SIGN KAACU..TAMIL SIGN VARAAKAN
11FE1..11FF1  ; Tamil # So  [17] TAMIL SIGN PAARAM..TAMIL SIGN VAKAIYARAA
11FFF         ; Tamil # Po       TAMIL PUNCTUATION END OF TEXT

# Total code points: 123
```

----------------------------------------

TITLE: RBBI Rule Parser 'start-after-caret' State Definition
DESCRIPTION: This state is active immediately after a '^' character has been scanned, which signifies that rule chaining is inhibited. It is similar to the 'start' state but has stricter error handling: empty rules are forbidden, and a second '^' character also results in an error. It processes escaped characters, whitespace, and variable names.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/rbbirpt.txt#_snippet_3

LANGUAGE: Custom DSL
CODE:
```
start-after-caret:
    escaped                term                                     doExprStart
    white_space          n start-after-caret
    '^'                    errorDeath                               doRuleError    # two '^'s
    '$'                    scan-var-name         ^term-var-ref      doExprStart
    ';'                    errorDeath                               doRuleError    # ^ ;
    eof                    errorDeath                               doRuleError
    default                term                                     doExprStart
```

----------------------------------------

TITLE: Create CMake Custom Target for Bytecode Generation
DESCRIPTION: This CMake snippet defines a custom target named `Bytecodes`. This target's sole purpose is to ensure that the `Bytecodes.h` header file, which is generated by a previous custom command, is built. This establishes a dependency chain for other parts of the build system.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_15

LANGUAGE: CMake
CODE:
```
add_custom_target(Bytecodes DEPENDS ""${JavaScriptCore_DERIVED_SOURCES_DIR}/Bytecodes.h"")
```

----------------------------------------

TITLE: Unicode Character Ranges for Georgian Script
DESCRIPTION: This snippet lists the Unicode code point ranges and individual code points assigned to the Georgian script. Each entry specifies the hexadecimal code range, script name, general category (e.g., Letter, Modifier Letter), count of code points in the range, and the character names for the start and end of the range.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_2

LANGUAGE: Unicode Data
CODE:
```
10A0..10C5    ; Georgian # L&  [38] GEORGIAN CAPITAL LETTER AN..GEORGIAN CAPITAL LETTER HOE
10C7          ; Georgian # L&       GEORGIAN CAPITAL LETTER YN
10CD          ; Georgian # L&       GEORGIAN CAPITAL LETTER AEN
10D0..10FA    ; Georgian # L&  [43] GEORGIAN LETTER AN..GEORGIAN LETTER AIN
10FC          ; Georgian # Lm       MODIFIER LETTER GEORGIAN NAR
10FD..10FF    ; Georgian # L&   [3] GEORGIAN LETTER AEN..GEORGIAN LETTER LABIAL SIGN
1C90..1CBA    ; Georgian # L&  [43] GEORGIAN MTAVRULI CAPITAL LETTER AN..GEORGIAN MTAVRULI CAPITAL LETTER AIN
1CBD..1CBF    ; Georgian # L&   [3] GEORGIAN MTAVRULI CAPITAL LETTER AEN..GEORGIAN MTAVRULI CAPITAL LETTER LABIAL SIGN
2D00..2D25    ; Georgian # L&  [38] GEORGIAN SMALL LETTER AN..GEORGIAN SMALL LETTER HOE
2D27          ; Georgian # L&       GEORGIAN SMALL LETTER YN
2D2D          ; Georgian # L&       GEORGIAN SMALL LETTER AEN
```

----------------------------------------

TITLE: Unicode Emoji Presentation Property Listing
DESCRIPTION: This snippet contains the raw data defining Unicode code points and ranges that have the Emoji_Presentation property. Each line specifies a code point or range, its property, the Unicode version, the number of characters, the visual emoji, and a textual description. This information is critical for applications that need to correctly identify and display emoji characters according to Unicode standards. All code points not listed explicitly have Emoji_Presentation=No.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/emoji-data.txt#_snippet_1

LANGUAGE: APIDOC
CODE:
```
231A..231B    ; Emoji_Presentation   # E0.6   [2] (⌚..⌛)    watch..hourglass done
23E9..23EC    ; Emoji_Presentation   # E0.6   [4] (⏩..⏬)    fast-forward button..fast down button
23F0          ; Emoji_Presentation   # E0.6   [1] (⏰)       alarm clock
23F3          ; Emoji_Presentation   # E0.6   [1] (⏳)       hourglass not done
25FD..25FE    ; Emoji_Presentation   # E0.6   [2] (◽..◾)    white medium-small square..black medium-small square
2614..2615    ; Emoji_Presentation   # E0.6   [2] (☔..☕)    umbrella with rain drops..hot beverage
2648..2653    ; Emoji_Presentation   # E0.6  [12] (♈..♓)    Aries..Pisces
267F          ; Emoji_Presentation   # E0.6   [1] (♿)       wheelchair symbol
2693          ; Emoji_Presentation   # E0.6   [1] (⚓)       anchor
26A1          ; Emoji_Presentation   # E0.6   [1] (⚡)       high voltage
26AA..26AB    ; Emoji_Presentation   # E0.6   [2] (⚪..⚫)    white circle..black circle
26BD..26BE    ; Emoji_Presentation   # E0.6   [2] (⚽..⚾)    soccer ball..baseball
26C4..26C5    ; Emoji_Presentation   # E0.6   [2] (⛄..⛅)    snowman without snow..sun behind cloud
26CE          ; Emoji_Presentation   # E0.6   [1] (⛎)       Ophiuchus
26D4          ; Emoji_Presentation   # E0.6   [1] (⛔)       no entry
26EA          ; Emoji_Presentation   # E0.6   [1] (⛪)       church
26F2..26F3    ; Emoji_Presentation   # E0.6   [2] (⛲..⛳)    fountain..flag in hole
26F5          ; Emoji_Presentation   # E0.6   [1] (⛵)       sailboat
26FA          ; Emoji_Presentation   # E0.6   [1] (⛺)       tent
26FD          ; Emoji_Presentation   # E0.6   [1] (⛽)       fuel pump
2705          ; Emoji_Presentation   # E0.6   [1] (✅)       check mark button
270A..270B    ; Emoji_Presentation   # E0.6   [2] (✊..✋)    raised fist..raised hand
2728          ; Emoji_Presentation   # E0.6   [1] (✨)       sparkles
274C          ; Emoji_Presentation   # E0.6   [1] (❌)       cross mark
274E          ; Emoji_Presentation   # E0.6   [1] (❎)       cross mark button
2753..2755    ; Emoji_Presentation   # E0.6   [3] (❓..❕)    red question mark..white exclamation mark
2757          ; Emoji_Presentation   # E0.6   [1] (❗)       red exclamation mark
2795..2797    ; Emoji_Presentation   # E0.6   [3] (➕..➗)    plus..divide
27B0          ; Emoji_Presentation   # E0.6   [1] (➰)       curly loop
27BF          ; Emoji_Presentation   # E1.0   [1] (➿)       double curly loop
2B1B..2B1C    ; Emoji_Presentation   # E0.6   [2] (⬛..⬜)    black large square..white large square
2B50          ; Emoji_Presentation   # E0.6   [1] (⭐)       star
2B55          ; Emoji_Presentation   # E0.6   [1] (⭕)       hollow red circle
1F004         ; Emoji_Presentation   # E0.6   [1] (🀄)       mahjong red dragon
1F0CF         ; Emoji_Presentation   # E0.6   [1] (🃏)       joker
1F18E         ; Emoji_Presentation   # E0.6   [1] (🆎)       AB button (blood type)
1F191..1F19A  ; Emoji_Presentation   # E0.6  [10] (🆑..🆚)    CL button..VS button
1F1E6..1F1FF  ; Emoji_Presentation   # E0.0  [26] (🇦..🇿)    regional indicator symbol letter a..regional indicator symbol letter z
1F201         ; Emoji_Presentation   # E0.6   [1] (🈁)       Japanese “here” button
1F21A         ; Emoji_Presentation   # E0.6   [1] (🈚)       Japanese “free of charge” button
1F22F         ; Emoji_Presentation   # E0.6   [1] (🈯)       Japanese “reserved” button
1F232..1F236  ; Emoji_Presentation   # E0.6   [5] (🈲..🈶)    Japanese “prohibited” button..Japanese “not free of charge” button
1F238..1F23A  ; Emoji_Presentation   # E0.6   [3] (🈸..🈺)    Japanese “application” button..Japanese “open for business” button
1F250..1F251  ; Emoji_Presentation   # E0.6   [2] (🉐..🉑)    Japanese “bargain” button..Japanese “acceptable” button
1F300..1F30C  ; Emoji_Presentation   # E0.6  [13] (🌀..🌌)    cyclone..milky way
1F30D..1F30E  ; Emoji_Presentation   # E0.7   [2] (🌍..🌎)    globe showing Europe-Africa..globe showing Americas
1F30F         ; Emoji_Presentation   # E0.6   [1] (🌏)       globe showing Asia-Australia
1F310         ; Emoji_Presentation   # E1.0   [1] (🌐)       globe with meridians
1F311         ; Emoji_Presentation   # E0.6   [1] (🌑)       new moon
1F312         ; Emoji_Presentation   # E1.0   [1] (🌒)       waxing crescent moon
1F313..1F315  ; Emoji_Presentation   # E0.6   [3] (🌓..🌕)    first quarter moon..full moon
1F316..1F318  ; Emoji_Presentation   # E1.0   [3] (🌖..🌘)    waning gibbous moon..waning crescent moon
1F319         ; Emoji_Presentation   # E0.6   [1] (🌙)       crescent moon
1F31A         ; Emoji_Presentation   # E1.0   [1] (🌚)       new moon face
1F31B         ; Emoji_Presentation   # E0.6   [1] (🌛)       first quarter moon face
1F31C         ; Emoji_Presentation   # E0.7   [1] (🌜)       last quarter moon face
1F31D..1F31E  ; Emoji_Presentation   # E1.0   [2] (🌝..🌞)    full moon face..sun with face
1F31F..1F320  ; Emoji_Presentation   # E0.6   [2] (🌟..🌠)    glowing star..shooting star
```

----------------------------------------

TITLE: RBBI Rule Parser 'start' State Definition
DESCRIPTION: This state represents the initial parsing position, either at the beginning of the rules file or between two rules. It defines transitions for various input characters, including escaped sequences, whitespace, special characters like '^' and '$', semicolons, and the end-of-file marker. Default actions lead to term processing or error handling.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/icu/source/common/rbbirpt.txt#_snippet_1

LANGUAGE: Custom DSL
CODE:
```
start:
    escaped                term                  ^break-rule-end    doExprStart
    white_space          n start
    '^'                  n start-after-caret     ^break-rule-end    doNoChain
    '$'                    scan-var-name         ^assign-or-rule    doExprStart
    '!'                  n rev-option
    ';'                  n start                                                  # ignore empty rules.
    eof                    exit
    default                term                  ^break-rule-end    doExprStart
```

----------------------------------------

TITLE: Generate Keyword Hash Lookup Table (CMake)
DESCRIPTION: This CMake command generates a hash lookup table for keywords from a specified table file, used by the lexer. It outputs the lookup table to a header file, which is then used in the compilation process.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_40

LANGUAGE: CMake
CODE:
```
GENERATE_HASH_LUT(${CMAKE_CURRENT_SOURCE_DIR}/parser/Keywords.table ${JavaScriptCore_DERIVED_SOURCES_DIR}/Lexer.lut.h)
```

----------------------------------------

TITLE: Define JavaFX CSS Border Image Insets Property (-fx-border-image-insets)
DESCRIPTION: A series of inset or sets of four inset values, separated by commas. For each item in the series, a single inset value means that all insets are the same; and if a set of four inset values is specified, they are used for the top, right, bottom, and left edges of the region, in that order. Each item in the series of insets applies to the corresponding image in the series of border images.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_88

LANGUAGE: APIDOC
CODE:
```
-fx-border-image-insets
[<size>] | [<size>] [<size>] [<size>] [<size>] [ , [ [<size>] | [<size>] [<size>] [<size>] [<size>]] ]*
```

----------------------------------------

TITLE: Unicode Code Points for Lisu Script
DESCRIPTION: Defines Unicode code point ranges, categories, and character names for the Lisu script, including letters, tone marks, and punctuation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_24

LANGUAGE: APIDOC
CODE:
```
A4D0..A4F7    ; Lisu # Lo  [40] LISU LETTER BA..LISU LETTER OE
A4F8..A4FD    ; Lisu # Lm   [6] LISU LETTER TONE MYA TI..LISU LETTER TONE MYA JEU
A4FE..A4FF    ; Lisu # Po   [2] LISU PUNCTUATION COMMA..LISU PUNCTUATION FULL STOP
11FB0         ; Lisu # Lo       LISU LETTER YHA
```

----------------------------------------

TITLE: Define JavaFX CSS Border Width Property (-fx-border-width)
DESCRIPTION: A series of width or sets of four width values, separated by commas. For each item in the series, a single width value means that all border widths are the same; and if a set of four width values is specified, they are used for the top, right, bottom, and left border widths, in that order. If the border is not rectangular, only the first width value is used. Each item in the series of widths applies to the corresponding item in the series of border colors.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_86

LANGUAGE: APIDOC
CODE:
```
-fx-border-width
[<size>] | [<size>] [<size>] [<size>] [<size>] [ , [ [<size>] | [<size>] [<size>] [<size>] [<size>]] ]*
```

----------------------------------------

TITLE: Define JavaFX CSS Border Style Property (-fx-border-style)
DESCRIPTION: A series of border style values, separated by commas. Each item in the series applies to the corresponding item in the series of border colors. The segments dash-style defines a sequence representing the lengths of the dash segments. Alternate entries in the sequence represent the lengths of the opaque and transparent segments of the dashes. This corresponds to the strokeDashArray variable of Shape. The optional phase parameter defines the point in the dashing pattern that will correspond to the beginning of the stroke. This corresponds to the strokeDashOffset variable of Shape.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_85

LANGUAGE: APIDOC
CODE:
```
-fx-border-style
<border-style> [ , <border-style> ]*
where <border-style> = <dash-style> [phase <number>]? [centered | inside | outside]? [line-join [miter [<number>] | bevel | round]]? [line-cap [square | butt | round]]?
where <dash-style> = [ none | solid | dotted | dashed | segments( <number>, <number> [, <number>]* ) ]
```

----------------------------------------

TITLE: Run dav1d Decoder Tests
DESCRIPTION: Instructions for setting up and running the dav1d test suite. This requires cloning a separate test data repository and enabling test data during Meson configuration before executing the tests.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/PAL/ThirdParty/dav1d/README.md#_snippet_3

LANGUAGE: Shell
CODE:
```
git clone https://code.videolan.org/videolan/dav1d-test-data.git tests/dav1d-test-data
```

LANGUAGE: Shell
CODE:
```
meson build -Dtestdata_tests=true
```

LANGUAGE: Shell
CODE:
```
meson test -v
```

----------------------------------------

TITLE: Define JavaFX CSS Border Image Width Property (-fx-border-image-width)
DESCRIPTION: A series of width or sets of four width values, separated by commas. For each item in the series, a single width value means that all border widths are the same; and if a set of four width values is specified, they are used for the top, right, bottom, and left border widths, in that order. If the border is not rectangular, only the first width value is used. Each item in the series of widths applies to the corresponding item in the series of border images. Percentage values may be used here, in which case the values are considered proportional to the border image area.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_91

LANGUAGE: APIDOC
CODE:
```
-fx-border-image-width
[<size>] | [<size>] [<size>] [<size>] [<size>] [ , [ [<size>] | [<size>] [<size>] [<size>] [<size>]] ]*
```

----------------------------------------

TITLE: Define JavaFX CSS Border Image Slice Property (-fx-border-image-slice)
DESCRIPTION: A series of image slice values or sets of four values, separated by commas. Each item in the series applies to the corresponding image in the series of border images. For each item in the series, if four values are given, they specify the size of the top, right, bottom, and left slices. This effectively divides the image into nine regions: an upper left corner, a top edge, an upper right corner, a right edge, a lower right corner, a bottom edge, a lower left corner, a left edge and a middle. If one value is specified, this value is used for the slice values for all four edges. If 'fill' is present, the middle slice is preserved, otherwise it is discarded. Percentage values may be used here, in which case the values are considered proportional to the source image.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.graphics/src/main/docs/javafx/scene/doc-files/cssref.html#_snippet_90

LANGUAGE: APIDOC
CODE:
```
-fx-border-image-slice
[[<size>] | [<size>] [<size>] [<size>] [<size>] ] fill? [ , [ [<size>] | [<size>] [<size>] [<size>] [<size>] [<size>] ] fill? ]*
```

----------------------------------------

TITLE: Define Code Generator Ruby Script Files
DESCRIPTION: This CMake snippet defines the `GENERATOR` variable, which lists Ruby script files responsible for various code generation tasks within the JavaScriptCore build system. These scripts automate the creation of source files based on definitions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_13

LANGUAGE: CMake
CODE:
```
set(GENERATOR
    generator/Argument.rb
    generator/Assertion.rb
    generator/Checkpoints.rb
    generator/DSL.rb
    generator/Fits.rb
    generator/GeneratedFile.rb
    generator/Metadata.rb
    generator/Opcode.rb
    generator/OpcodeGroup.rb
    generator/Options.rb
    generator/Section.rb
    generator/Template.rb
    generator/Type.rb
    generator/Wasm.rb
    generator/main.rb
)
```

----------------------------------------

TITLE: Define JavaScriptCore Script Source Paths (CMake)
DESCRIPTION: Defines the base directory for JavaScriptCore scripts and then specifies glob patterns to find various script types. This includes Perl (.pl) and Python (.py) files, as well as specific Python builtins scripts, which are used for build-time operations or code generation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_7

LANGUAGE: CMake
CODE:
```
set(JavaScriptCore_SCRIPTS_SOURCES_DIR ""${JAVASCRIPTCORE_DIR}/Scripts"")

# Globbing relies on the fact that generator-specific file names are prefixed with their directory.
# Top-level scripts should have a file extension, since they are invoked during the build.

set(JavaScriptCore_SCRIPTS_SOURCES_PATHS
    ${JavaScriptCore_SCRIPTS_SOURCES_DIR}/*.pl
    ${JavaScriptCore_SCRIPTS_SOURCES_DIR}/*.py
    ${JavaScriptCore_SCRIPTS_SOURCES_DIR}/wkbuiltins/builtins*.py
    ${JavaScriptCore_SCRIPTS_SOURCES_DIR}/wkbuiltins/wkbuiltins.py
)
```

----------------------------------------

TITLE: CMake: Version and Install JavaScriptCore Shared Library on Non-Mac Platforms
DESCRIPTION: This CMake block handles versioning and installation of the JavaScriptCore shared library. It applies only when the `PORT` is not 'Mac' and the `JavaScriptCore_LIBRARY_TYPE` is 'SHARED', populating version information and installing the library to the specified destination.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_58

LANGUAGE: CMake
CODE:
```
if (NOT ""${PORT}"" STREQUAL ""Mac"")
    if (${JavaScriptCore_LIBRARY_TYPE} STREQUAL ""SHARED"")
        WEBKIT_POPULATE_LIBRARY_VERSION(JAVASCRIPTCORE)
        set_target_properties(JavaScriptCore PROPERTIES VERSION ${JAVASCRIPTCORE_VERSION} SOVERSION ${JAVASCRIPTCORE_VERSION_MAJOR})
        install(TARGETS JavaScriptCore DESTINATION ""${LIB_INSTALL_DIR}"")
    endif ()
endif ()
```

----------------------------------------

TITLE: C/C++ Header File for Basic Heap Configuration
DESCRIPTION: This C header file defines alignment macros and the `ISO_HEAP_CONFIG` using `PAS_BASIC_HEAP_CONFIG`. It configures various parameters for small segregated, small bitfit, medium, and marge bitfit pages, including activation functions, type size/alignment getters, deallocation checks, sharing shifts, page sizes, wasteage handicaps, logging modes, and view cache settings. It also declares the `iso_heap_config` extern and uses `PAS_BASIC_HEAP_CONFIG_DECLARATIONS`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/Documentation.md#_snippet_6

LANGUAGE: C
CODE:
```
#define ISO_MINALIGN_SHIFT ((size_t)4)
#define ISO_MINALIGN_SIZE ((size_t)1 << ISO_MINALIGN_SHIFT)

#define ISO_HEAP_CONFIG PAS_BASIC_HEAP_CONFIG( \
    iso, \
    .activate = pas_heap_config_utils_null_activate, \
    .get_type_size = pas_simple_type_as_heap_type_get_type_size, \
    .get_type_alignment = pas_simple_type_as_heap_type_get_type_alignment, \
    .dump_type = pas_simple_type_as_heap_type_dump, \
    .check_deallocation = true, \
    .small_segregated_min_align_shift = ISO_MINALIGN_SHIFT, \
    .small_segregated_sharing_shift = PAS_SMALL_SHARING_SHIFT, \
    .small_segregated_page_size = PAS_SMALL_PAGE_DEFAULT_SIZE, \
    .small_segregated_wasteage_handicap = PAS_SMALL_PAGE_HANDICAP, \
    .small_exclusive_segregated_logging_mode = pas_segregated_deallocation_size_oblivious_logging_mode, \
    .small_shared_segregated_logging_mode = pas_segregated_deallocation_no_logging_mode, \
    .small_exclusive_segregated_enable_empty_word_eligibility_optimization = false, \
    .small_shared_segregated_enable_empty_word_eligibility_optimization = false, \
    .small_segregated_use_reversed_current_word = PAS_ARM64, \
    .enable_view_cache = false, \
    .use_small_bitfit = true, \
    .small_bitfit_min_align_shift = ISO_MINALIGN_SHIFT, \
    .small_bitfit_page_size = PAS_SMALL_BITFIT_PAGE_DEFAULT_SIZE, \
    .medium_page_size = PAS_MEDIUM_PAGE_DEFAULT_SIZE, \
    .granule_size = PAS_GRANULE_DEFAULT_SIZE, \
    .use_medium_segregated = true, \
    .medium_segregated_min_align_shift = PAS_MIN_MEDIUM_ALIGN_SHIFT, \
    .medium_segregated_sharing_shift = PAS_MEDIUM_SHARING_SHIFT, \
    .medium_segregated_wasteage_handicap = PAS_MEDIUM_PAGE_HANDICAP, \
    .medium_exclusive_segregated_logging_mode = pas_segregated_deallocation_size_aware_logging_mode, \
    .medium_shared_segregated_logging_mode = pas_segregated_deallocation_no_logging_mode, \
    .use_medium_bitfit = true, \
    .medium_bitfit_min_align_shift = PAS_MIN_MEDIUM_ALIGN_SHIFT, \
    .use_marge_bitfit = true, \
    .marge_bitfit_min_align_shift = PAS_MIN_MARGE_ALIGN_SHIFT, \
    .marge_bitfit_page_size = PAS_MARGE_PAGE_DEFAULT_SIZE, \
    .pgm_enabled = false)

PAS_API extern const pas_heap_config iso_heap_config;

PAS_BASIC_HEAP_CONFIG_DECLARATIONS(iso, ISO);
```

----------------------------------------

TITLE: FXML Property Setter using Element
DESCRIPTION: Demonstrates setting a Label's 'text' property by nesting a <text> element within the <Label> element. This approach is typically used when the property value is a complex type or a long string, improving readability compared to attributes.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_14

LANGUAGE: FXML
CODE:
```
<?import javafx.scene.control.Label?>
<Label>
    <text>Hello, World!</text>
</Label>
```

----------------------------------------

TITLE: Configure TestRunnerShared Module with CMake
DESCRIPTION: This CMake script defines the TestRunnerShared module, setting up its source files, linking libraries, specifying include directories, and generating bindings from IDL files. It's part of the OpenJDK JFX project's build system.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/TestRunnerShared/java/CMakeLists.txt#_snippet_0

LANGUAGE: CMake
CODE:
```
WEBKIT_FRAMEWORK_DECLARE(TestRunnerShared)

set(DumpRenderTree_BINDINGS_DIR ${TOOLS_DIR}/DumpRenderTree/Bindings)
set(TestRunnerShared_DIR ${TOOLS_DIR}/TestRunnerShared)

file(MAKE_DIRECTORY ${TestRunnerShared_DERIVED_SOURCES_DIR})

set(TestRunnerShared_SOURCES
    ../TestCommand.cpp

    ../Bindings/JSBasics.cpp
    ../Bindings/JSWrapper.cpp

    ../UIScriptContext/UIScriptContext.cpp
    ../UIScriptContext/UIScriptControllerShared.cpp
)

set(TestRunnerShared_LIBRARIES
    ${JAVA_JVM_LIBRARY}
    ${ICU_I18N_LIBRARIES}
)

add_dependencies(TestRunnerShared WebCore_CopyPrivateHeaders)

set(TestRunnerShared_PRIVATE_INCLUDE_DIRECTORIES
    ${CMAKE_BINARY_DIR}
    ${TestRunnerShared_DERIVED_SOURCES_DIR}
    ${TestRunnerShared_DIR}
    ${TestRunnerShared_DIR}/Bindings
    ${TestRunnerShared_DIR}/UIScriptContext
    ${TestRunnerShared_DIR}/config
    ${WebCore_PRIVATE_FRAMEWORK_HEADERS_DIR}
    ${JavaScriptCore_PRIVATE_FRAMEWORK_HEADERS_DIR}
    ${CMAKE_BINARY_DIR}/JavaScriptCore/Headers
    ${CMAKE_BINARY_DIR}/WTF/Headers
    ${CMAKE_BINARY_DIR}/bmalloc/Headers
    ${JAVA_INCLUDE_PATH}
    ${JAVA_INCLUDE_PATH2}
)

list(APPEND TestRunnerShared_PRIVATE_INCLUDE_DIRECTORIES
    ${PAL_FRAMEWORK_HEADERS_DIR}
    ${WebCore_PRIVATE_FRAMEWORK_HEADERS_DIR}
)

set(TestRunnerShared_IDL_FILES
    ${TestRunnerShared_DIR}/UIScriptContext/Bindings/UIScriptController.idl
)

GENERATE_BINDINGS(TestRunnerSharedBindings
    OUTPUT_SOURCE TestRunnerShared_SOURCES
    INPUT_FILES ${TestRunnerShared_IDL_FILES}
    BASE_DIR ${DumpRenderTree_BINDINGS_DIR}
    IDL_INCLUDES ../Bindings
    FEATURES ${FEATURE_DEFINES_WITH_SPACE_SEPARATOR}
    DESTINATION ${TestRunnerShared_DERIVED_SOURCES_DIR}
    GENERATOR DumpRenderTree)

set(TestRunnerShared_LIBRARY_TYPE OBJECT)
set(TestRunnerShared_DEPENDENCIES TestRunnerSharedBindings)

WEBKIT_INCLUDE_CONFIG_FILES_IF_EXISTS()
WEBKIT_FRAMEWORK(TestRunnerShared)
```

----------------------------------------

TITLE: Generate C++ Bindings for TestRunnerShared IDL
DESCRIPTION: Invokes the `GENERATE_BINDINGS` CMake function to process IDL files and produce C++ source code for TestRunnerShared. This step integrates UI script controllers with the underlying system by creating necessary glue code.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/TestRunnerShared/CMakeLists.txt#_snippet_6

LANGUAGE: CMake
CODE:
```
GENERATE_BINDINGS(TestRunnerSharedBindings
    OUTPUT_SOURCE TestRunnerShared_SOURCES
    INPUT_FILES ${TestRunnerShared_IDL_FILES}
    BASE_DIR ${DumpRenderTree_BINDINGS_DIR}
    FEATURES ${FEATURE_DEFINES_WITH_SPACE_SEPARATOR}
    DESTINATION ${TestRunnerShared_DERIVED_SOURCES_DIR}
    GENERATOR DumpRenderTree)
```

----------------------------------------

TITLE: Define Source Files for TestRunnerShared Component
DESCRIPTION: Lists all C++ source files that comprise the TestRunnerShared component. This includes core functionalities, JavaScript bindings, and UI script context implementations, organizing them for compilation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/TestRunnerShared/CMakeLists.txt#_snippet_2

LANGUAGE: CMake
CODE:
```
set(TestRunnerShared_SOURCES
    TestCommand.cpp
    TestFeatures.cpp
    WPTFunctions.cpp

    Bindings/JSBasics.cpp
    Bindings/JSWrapper.cpp

    UIScriptContext/UIScriptContext.cpp
    UIScriptContext/UIScriptControllerShared.cpp
)
```

----------------------------------------

TITLE: PasswordField Key Bindings Reference
DESCRIPTION: Defines the keyboard shortcuts and their corresponding actions within the PasswordField component, noting platform-specific differences and security-related disabled functionalities. This reference includes common text editing commands and navigation.
SOURCE: https://github.com/openjdk/jfx/blob/master/doc-files/behavior/PasswordField.md#_snippet_0

LANGUAGE: APIDOC
CODE:
```
Key Bindings for PasswordField:

Key Combination     Platform    Function
--------------------------------------------------------------------------------
ctrl-BACK_SLASH     linux, win  deselect
BACKSPACE                       delete previous char
alt-BACKSPACE       mac         disabled for security reasons
ctrl-BACKSPACE      linux, win  disabled for security reasons
shift-BACKSPACE                 delete previous char
shortcut-BACKSPACE  mac         delete from line start
COPY                            copy
CUT                             cut
DELETE                          delete next char
alt-DELETE          mac         disabled for security reasons
ctrl-DELETE         linux, win  disabled for security reasons
ctrl-shift-DIGIT9               toggle the virtual keyboard (if supported)
DOWN                            move to document end
shift-DOWN                      select to document end
END                             move to document end
shift-END           mac         extend selection to document end
shift-END           linux, win  select document end
shift-shortcut-END              select to document end
shortcut-END                    move to document end
ENTER                           fire event
ESCAPE                          cancel edit (forwarded to the parent container)
HOME                            move to document start
shift-HOME          mac         extend selection to document start
shift-HOME          linux, win  select to document start
shift-shortcut-HOME             select to document start
shortcut-HOME                   move to document start
shift-INSERT                    paste
shortcut-INSERT                 copy
LEFT                            previous character
alt-LEFT                        disabled for security reasons
alt-shift-LEFT      mac         disabled for security reasons
ctrl-LEFT           linux, win  disabled for security reasons
ctrl-shift-LEFT     linux, win  disabled for security reasons
shift-LEFT                      select left
shift-shortcut-LEFT mac         select to document start
shortcut-LEFT       mac         move to document start
PASTE                           paste
RIGHT                           next character
alt-RIGHT           mac         disabled for security reasons
alt-shift-RIGHT     mac         disabled for security reasons
ctrl-RIGHT          linux, win  disabled for security reasons
ctrl-shift-RIGHT    linux, win  disabled for security reasons
shift-RIGHT                     select right
shift-shortcut-RIGHT mac        select to document end
shortcut-RIGHT      mac         move to document end
TAB                             focus next
ctrl-TAB                        focus next
ctrl-shift-TAB                  focus previous
shift-TAB                       focus previous
UP                              move to document start
shift-UP                        select to document start
shortcut-A                      select all
shortcut-C                      copy
ctrl-H              linux, win  delete previous char
shortcut-V                      paste
shortcut-X                      cut
ctrl-Y              win         redo
ctrl-shift-Z        linux       redo
shift-shortcut-Z    mac         redo
shortcut-Z                      undo

Notes:
1. Base class mappings modified by the PasswordField class are highlighted in bold.
2. On Mac, alt is represented by the Option key.
3. On Mac, shortcut is represented by the Command key.
```

----------------------------------------

TITLE: Implement JavaFX Controller with EventHandler Field
DESCRIPTION: This Java code defines a `MyController` class with an `@FXML` annotated `EventHandler<ActionEvent>` field named `onActionHandler`. This field is initialized as a new `EventHandler` instance and can be referenced from FXML to handle events.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_36

LANGUAGE: Java
CODE:
```
public class MyController {

    @FXML
    public EventHandler<ActionEvent> onActionHandler = new EventHandler<>() { ... }

    ...
}
```

----------------------------------------

TITLE: Generate Gradle Dependency Verification File
DESCRIPTION: This Gradle command regenerates the `verification-metadata.xml` file, including specific build properties for WebKit and LibAV stubs, and writes the verification metadata using SHA256 checksums. This step is typically performed on Linux first.
SOURCE: https://github.com/openjdk/jfx/blob/master/gradle/README.txt#_snippet_1

LANGUAGE: Shell
CODE:
```
gradle -PCOMPILE_WEBKIT=true -PBUILD_LIBAV_STUBS=true \
  --write-verification-metadata sha256 help
```

----------------------------------------

TITLE: FXML Read-Only Map Property (Node Properties)
DESCRIPTION: Demonstrates setting properties on a read-only map property, like the 'properties' map of a `Node`. Attributes defined within the map element are applied as key-value pairs to the map when the closing tag is processed.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_17

LANGUAGE: FXML
CODE:
```
<?import javafx.scene.control.*?>
<Button>
    <properties foo=""123"" bar=""456""/>
</Button>
```

----------------------------------------

TITLE: Remove tabs from C/H source files
DESCRIPTION: These commands use `expand` and `sponge` to replace tabs with 8 spaces in all `.c` and `.h` files within the `src/` directory. The `moreutils` package is required for `sponge`.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/UPDATING.txt#_snippet_3

LANGUAGE: Bash
CODE:
```
sudo apt install moreutils
find src/ -name ""*.c"" -type f -exec bash -c 'expand -t 8 ""$0"" | sponge ""$0""' {} \;
find src/ -name ""*.h"" -type f -exec bash -c 'expand -t 8 ""$0"" | sponge ""$0""' {} \;
```

----------------------------------------

TITLE: Generate Lexer Keyword Lookup Header (CMake)
DESCRIPTION: This CMake custom command generates a C++ header file containing a keyword decision tree, which is used by the lexer for efficient keyword lookup. It executes a Python script and depends on the Keywords.table file, then adds the generated file to the project's headers and source dependencies.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_45

LANGUAGE: CMake
CODE:
```
add_custom_command(
    OUTPUT ${JavaScriptCore_DERIVED_SOURCES_DIR}/KeywordLookup.h
    MAIN_DEPENDENCY ${CMAKE_CURRENT_SOURCE_DIR}/KeywordLookupGenerator.py
    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/parser/Keywords.table
    COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/KeywordLookupGenerator.py ${CMAKE_CURRENT_SOURCE_DIR}/parser/Keywords.table > ${JavaScriptCore_DERIVED_SOURCES_DIR}/KeywordLookup.h
    VERBATIM)
list(APPEND JavaScriptCore_HEADERS ${JavaScriptCore_DERIVED_SOURCES_DIR}/KeywordLookup.h)
WEBKIT_ADD_SOURCE_DEPENDENCIES(${CMAKE_CURRENT_SOURCE_DIR}/parser/Lexer.cpp ${JavaScriptCore_DERIVED_SOURCES_DIR}/KeywordLookup.h)
```

----------------------------------------

TITLE: Unicode Emoji Code Point Data
DESCRIPTION: This data snippet enumerates Unicode code points that are recognized as Emoji. Each line specifies a code point or range, its 'Emoji' property, the Unicode Emoji version it was introduced or modified in, the number of characters represented, the visual emoji character(s), and a descriptive name. This is a direct mapping of Unicode data for emoji classification.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/emoji-data.txt#_snippet_0

LANGUAGE: APIDOC
CODE:
```
# All omitted code points have Emoji=No

0023          ; Emoji                # E0.0   [1] (#️)       hash sign
002A          ; Emoji                # E0.0   [1] (*️)       asterisk
0030..0039    ; Emoji                # E0.0  [10] (0️..9️)    digit zero..digit nine
00A9          ; Emoji                # E0.6   [1] (©️)       copyright
00AE          ; Emoji                # E0.6   [1] (®️)       registered
203C          ; Emoji                # E0.6   [1] (‼️)       double exclamation mark
2049          ; Emoji                # E0.6   [1] (⁉️)       exclamation question mark
2122          ; Emoji                # E0.6   [1] (™️)       trade mark
2139          ; Emoji                # E0.6   [1] (ℹ️)       information
2194..2199    ; Emoji                # E0.6   [6] (↔️..↙️)    left-right arrow..down-left arrow
21A9..21AA    ; Emoji                # E0.6   [2] (↩️..↪️)    right arrow curving left..left arrow curving right
231A..231B    ; Emoji                # E0.6   [2] (⌚..⌛)    watch..hourglass done
2328          ; Emoji                # E1.0   [1] (⌨️)       keyboard
23CF          ; Emoji                # E1.0   [1] (⏏️)       eject button
23E9..23EC    ; Emoji                # E0.6   [4] (⏩..⏬)    fast-forward button..fast down button
23ED..23EE    ; Emoji                # E0.7   [2] (⏭️..⏮️)    next track button..last track button
23EF          ; Emoji                # E1.0   [1] (⏯️)       play or pause button
23F0          ; Emoji                # E0.6   [1] (⏰)       alarm clock
23F1..23F2    ; Emoji                # E1.0   [2] (⏱️..⏲️)    stopwatch..timer clock
23F3          ; Emoji                # E0.6   [1] (⏳)       hourglass not done
23F8..23FA    ; Emoji                # E0.7   [3] (⏸️..⏺️)    pause button..record button
24C2          ; Emoji                # E0.6   [1] (Ⓜ️)       circled M
25AA..25AB    ; Emoji                # E0.6   [2] (▪️..▫️)    black small square..white small square
25B6          ; Emoji                # E0.6   [1] (▶️)       play button
25C0          ; Emoji                # E0.6   [1] (◀️)       reverse button
25FB..25FE    ; Emoji                # E0.6   [4] (◻️..◾)    white medium square..black medium-small square
2600..2601    ; Emoji                # E0.6   [2] (☀️..☁️)    sun..cloud
2602..2603    ; Emoji                # E0.7   [2] (☂️..☃️)    umbrella..snowman
2604          ; Emoji                # E1.0   [1] (☄️)       comet
260E          ; Emoji                # E0.6   [1] (☎️)       telephone
2611          ; Emoji                # E0.6   [1] (☑️)       check box with check
2614..2615    ; Emoji                # E0.6   [2] (☔..☕)    umbrella with rain drops..hot beverage
2618          ; Emoji                # E1.0   [1] (☘️)       shamrock
261D          ; Emoji                # E0.6   [1] (☝️)       index pointing up
2620          ; Emoji                # E1.0   [1] (☠️)       skull and crossbones
2622..2623    ; Emoji                # E1.0   [2] (☢️..☣️)    radioactive..biohazard
2626          ; Emoji                # E1.0   [1] (☦️)       orthodox cross
262A          ; Emoji                # E0.7   [1] (☪️)       star and crescent
262E          ; Emoji                # E1.0   [1] (☮️)       peace symbol
262F          ; Emoji                # E0.7   [1] (☯️)       yin yang
2638..2639    ; Emoji                # E0.7   [2] (☸️..☹️)    wheel of dharma..frowning face
263A          ; Emoji                # E0.6   [1] (☺️)       smiling face
2640          ; Emoji                # E4.0   [1] (♀️)       female sign
2642          ; Emoji                # E4.0   [1] (♂️)       male sign
2648..2653    ; Emoji                # E0.6  [12] (♈..♓)    Aries..Pisces
265F          ; Emoji                # E11.0  [1] (♟️)       chess pawn
2660          ; Emoji                # E0.6   [1] (♠️)       spade suit
2663          ; Emoji                # E0.6   [1] (♣️)       club suit
2665..2666    ; Emoji                # E0.6   [2] (♥️..♦️)    heart suit..diamond suit
2668          ; Emoji                # E0.6   [1] (♨️)       hot springs
267B          ; Emoji                # E0.6   [1] (♻️)       recycling symbol
267E          ; Emoji                # E11.0  [1] (♾️)       infinity
267F          ; Emoji                # E0.6   [1] (♿)       wheelchair symbol
2692          ; Emoji                # E1.0   [1] (⚒️)       hammer and pick
2693          ; Emoji                # E0.6   [1] (⚓)       anchor
2694          ; Emoji                # E1.0   [1] (⚔️)       crossed swords
2695          ; Emoji                # E4.0   [1] (⚕️)       medical symbol
2696..2697    ; Emoji                # E1.0   [2] (⚖️..⚗️)    balance scale..alembic
2699          ; Emoji                # E1.0   [1] (⚙️)       gear
269B..269C    ; Emoji                # E1.0   [2] (⚛️..⚜️)    atom symbol..fleur-de-lis
26A0..26A1    ; Emoji                # E0.6   [2] (⚠️..⚡)    warning..high voltage
26A7          ; Emoji                # E13.0  [1] (⚧️)       transgender symbol
```

----------------------------------------

TITLE: Configure JavaScriptCore Build Properties and Unified Source List (CMake)
DESCRIPTION: This snippet sets the FOLDER property for the current directory to 'JavaScriptCore', which helps organize the project in IDEs. It then appends 'Sources.txt' to the `JavaScriptCore_UNIFIED_SOURCE_LIST_FILES` variable, indicating a primary source file list for the component's build process.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_0

LANGUAGE: CMake
CODE:
```
set_property(DIRECTORY . PROPERTY FOLDER ""JavaScriptCore"")

list(APPEND JavaScriptCore_UNIFIED_SOURCE_LIST_FILES
    ""Sources.txt""
)
```

----------------------------------------

TITLE: Print WebKit Build Options
DESCRIPTION: Invokes a custom CMake function named 'PRINT_WEBKIT_OPTIONS()'. This function is typically used to output a summary of the configured build options and enabled features to the console, providing visibility into the final build setup.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/CMakeLists.txt#_snippet_6

LANGUAGE: CMake
CODE:
```
PRINT_WEBKIT_OPTIONS()
```

----------------------------------------

TITLE: Define Shared Libraries and Executables in CMake
DESCRIPTION: This section creates various shared libraries (e.g., `pas_lib`, `chaos_lib`, `verifier_lib`, and several `mbmalloc` variants) and two executables (`test_pas`, `chaos`). It specifies the source files required for building each target.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/CMakeLists.txt#_snippet_3

LANGUAGE: CMake
CODE:
```
# Create libraries
add_library(pas_lib                                 SHARED ${libpasSources})
add_library(chaos_lib                               SHARED ${chaosSources} )
add_library(verifier_lib                            SHARED ${verifierSources} )
add_library(mbmalloc_bmalloc                        SHARED ${CMAKE_SOURCE_DIR}/src/mbmalloc/mbmalloc_bmalloc.c)
add_library(mbmalloc_hotbit                         SHARED ${CMAKE_SOURCE_DIR}/src/mbmalloc/mbmalloc_hotbit.c)
add_library(mbmalloc_iso_common_primitive           SHARED ${CMAKE_SOURCE_DIR}/src/mbmalloc/mbmalloc_iso_common_primitive.c)
add_library(mbmalloc_iso_common_primitive_verified  SHARED ${CMAKE_SOURCE_DIR}/src/mbmalloc/mbmalloc_iso_common_primitive.c)

# Create executables
add_executable(test_pas ${testSources} )
add_executable(chaos    ${chaosSources} )
```

----------------------------------------

TITLE: Generate JavaScriptCore Bytecode and WebAssembly Files
DESCRIPTION: This CMake custom command generates various C/C++ headers and assembly files related to JavaScriptCore bytecodes and WebAssembly. It uses a Ruby script (`generator/main.rb`) to process bytecode definitions (`BytecodeList.rb`) and WebAssembly specifications (`wasm.json`), producing files essential for the interpreter and JIT.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_14

LANGUAGE: CMake
CODE:
```
add_custom_command(
    OUTPUT ${JavaScriptCore_DERIVED_SOURCES_DIR}/Bytecodes.h ${JavaScriptCore_DERIVED_SOURCES_DIR}/InitBytecodes.asm ${JavaScriptCore_DERIVED_SOURCES_DIR}/BytecodeStructs.h ${JavaScriptCore_DERIVED_SOURCES_DIR}/BytecodeIndices.h ${JavaScriptCore_DERIVED_SOURCES_DIR}/WasmLLIntGeneratorInlines.h ${JavaScriptCore_DERIVED_SOURCES_DIR}/InitWasm.asm ${JavaScriptCore_DERIVED_SOURCES_DIR}/BytecodeDumperGenerated.cpp
    MAIN_DEPENDENCY ${JAVASCRIPTCORE_DIR}/generator/main.rb
    DEPENDS ${GENERATOR} bytecode/BytecodeList.rb ${JAVASCRIPTCORE_DIR}/wasm/wasm.json
    COMMAND ${RUBY_EXECUTABLE} ${JAVASCRIPTCORE_DIR}/generator/main.rb --bytecodes_h ${JavaScriptCore_DERIVED_SOURCES_DIR}/Bytecodes.h --init_bytecodes_asm ${JavaScriptCore_DERIVED_SOURCES_DIR}/InitBytecodes.asm --bytecode_structs_h ${JavaScriptCore_DERIVED_SOURCES_DIR}/BytecodeStructs.h --bytecode_indices_h ${JavaScriptCore_DERIVED_SOURCES_DIR}/BytecodeIndices.h ${JAVASCRIPTCORE_DIR}/bytecode/BytecodeList.rb --wasm_json ${JAVASCRIPTCORE_DIR}/wasm/wasm.json --wasm_llint_generator_h ${JavaScriptCore_DERIVED_SOURCES_DIR}/WasmLLIntGeneratorInlines.h --init_wasm_llint ${JavaScriptCore_DERIVED_SOURCES_DIR}/InitWasm.asm --bytecode_dumper ${JavaScriptCore_DERIVED_SOURCES_DIR}/BytecodeDumperGenerated.cpp
    VERBATIM)
```

----------------------------------------

TITLE: Unicode Ideographic Description Sequence Trinary Operators
DESCRIPTION: This snippet identifies Unicode code points that serve as trinary operators in Ideographic Description Sequences (IDS). These operators are used to describe the structural composition of CJK characters by combining three components, enabling more complex character descriptions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropList.txt#_snippet_9

LANGUAGE: Unicode Property List
CODE:
```
2FF2..2FF3    ; IDS_Trinary_Operator # So   [2] IDEOGRAPHIC DESCRIPTION CHARACTER LEFT TO MIDDLE AND RIGHT..IDEOGRAPHIC DESCRIPTION CHARACTER ABOVE TO MIDDLE AND BELOW

# Total code points: 2
```

----------------------------------------

TITLE: CMake Macro for Python-based File Generation
DESCRIPTION: This CMake macro, GENERATE_PYTHON, defines a custom build command to execute a Python script. It takes a generator script, additional dependencies, an input file, and an output file, ensuring the output is added to JavaScriptCore_HEADERS and tracked for source dependencies.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_34

LANGUAGE: CMake
CODE:
```
macro(GENERATE_PYTHON _generator _additional_deps _input _output)
    add_custom_command(
        OUTPUT ${_output}
        MAIN_DEPENDENCY ${_generator}
        DEPENDS ${_input} ${_additional_deps}
        COMMAND ${PYTHON_EXECUTABLE} ${_generator} ${_input} ${_output}
        VERBATIM)
    list(APPEND JavaScriptCore_HEADERS ${_output})
    WEBKIT_ADD_SOURCE_DEPENDENCIES(${_input} ${_output})
endmacro()
```

----------------------------------------

TITLE: Copy JavaScriptCore Scripts with Retry Logic and Custom Command (CMake)
DESCRIPTION: Iterates through discovered JavaScriptCore script files. For the 'Java' port, it implements a robust file copying mechanism with a retry loop (up to 10 attempts with 1-second delays) to mitigate potential file lock issues on macOS. Additionally, it adds a custom build command to copy scripts if they differ, ensuring they are correctly placed in the build directory.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_9

LANGUAGE: CMake
CODE:
```
foreach (_file ${JavaScriptCore_SCRIPTS_SOURCES})
    get_filename_component(_script ""${_file}"" NAME)
    #the copy_if_different  is failing on Mac OSX 11 platform if build using -j12
    #Introducing sleep for 1 s and retry file copy 10 times, to prevent copy failing error
    if (PORT STREQUAL ""Java"")
    # introduce one second delay to prevent any lock
    execute_process(COMMAND ${CMAKE_COMMAND} -E sleep 1)
    set(copy_success FALSE)
    set(copy_attempts 0)
    while(NOT copy_success AND copy_attempts LESS 10)
        execute_process(
            COMMAND ${CMAKE_COMMAND} -E copy_if_different ${_file} ${JavaScriptCore_SCRIPTS_DIR}/${_script}
            RESULT_VARIABLE copy_result
            OUTPUT_VARIABLE copy_output
        )
        if(copy_result)
            message(WARNING ""Failed to copy ${_file} to ${JavaScriptCore_SCRIPTS_DIR}/${_script}: ${copy_output}"")
            # retry the copy after a delay of one second
            execute_process(COMMAND ${CMAKE_COMMAND} -E sleep 1)
        else()
            set(copy_success TRUE)
        endif()
        math(EXPR copy_attempts ""${copy_attempts}+1"")
    endwhile()
    if(NOT copy_success)
        message(FATAL_ERROR ""Failed to copy ${_file} after multiple attempts"")
    endif()
    endif() # end for port ""Java""
    add_custom_command(
        OUTPUT ${JavaScriptCore_SCRIPTS_DIR}/${_script}
        MAIN_DEPENDENCY ${_file}
        WORKING_DIRECTORY ${JavaScriptCore_DERIVED_SOURCES_DIR}
        COMMAND ${CMAKE_COMMAND} -E copy_if_different ${_file} ${JavaScriptCore_SCRIPTS_DIR}/${_script}
        VERBATIM)
    list(APPEND JavaScriptCore_SCRIPTS ${JavaScriptCore_SCRIPTS_DIR}/${_script})
endforeach ()
```

----------------------------------------

TITLE: CMake: Create Script Directory and Copy Script
DESCRIPTION: This CMake snippet ensures the existence of the `WTF_SCRIPTS_DIR` and then copies a build script (`generate-unified-source-bundles.rb`) into it. This is a common practice for managing build-related scripts within a project.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WTF/wtf/CMakeLists.txt#_snippet_10

LANGUAGE: CMake
CODE:
```
file(MAKE_DIRECTORY ${WTF_SCRIPTS_DIR})

message(STATUS ""Copying generate-unified-source-bundles.rb to: ${WTF_SCRIPTS_DIR}"")

file(COPY
    ../Scripts/generate-unified-source-bundles.rb
)
```

----------------------------------------

TITLE: Nandinagari Unicode Character Ranges
DESCRIPTION: Outlines the Unicode code point ranges for the Nandinagari script, encompassing letters, various vowel signs, diacritics, and punctuation. Each line details the hexadecimal range, script, character type, and character descriptions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_44

LANGUAGE: APIDOC
CODE:
```
119A0..119A7  ; Nandinagari # Lo   [8] NANDINAGARI LETTER A..NANDINAGARI LETTER VOCALIC RR
119AA..119D0  ; Nandinagari # Lo  [39] NANDINAGARI LETTER E..NANDINAGARI LETTER RRA
119D1..119D3  ; Nandinagari # Mc   [3] NANDINAGARI VOWEL SIGN AA..NANDINAGARI VOWEL SIGN II
119D4..119D7  ; Nandinagari # Mn   [4] NANDINAGARI VOWEL SIGN U..NANDINAGARI VOWEL SIGN VOCALIC RR
119DA..119DB  ; Nandinagari # Mn   [2] NANDINAGARI VOWEL SIGN E..NANDINAGARI VOWEL SIGN AI
119DC..119DF  ; Nandinagari # Mc   [4] NANDINAGARI VOWEL SIGN O..NANDINAGARI SIGN VISARGA
119E0         ; Nandinagari # Mn       NANDINAGARI SIGN VIRAMA
119E1         ; Nandinagari # Lo       NANDINAGARI SIGN AVAGRAHA
119E2         ; Nandinagari # Po       NANDINAGARI SIGN SIDDHAM
119E3         ; Nandinagari # Lo       NANDINAGARI HEADSTROKE
119E4         ; Nandinagari # Mc       NANDINAGARI VOWEL SIGN PRISHTHAMATRA E

# Total code points: 65
```

----------------------------------------

TITLE: FXML Read-Only List Property (Children)
DESCRIPTION: Illustrates how to add elements to a read-only list property, such as the 'children' property of a `Group` node. Sub-elements nested within the property element are automatically added to the list returned by the getter method (e.g., Group#getChildren()).
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_16

LANGUAGE: FXML
CODE:
```
<?import javafx.scene.*?>
<?import javafx.scene.shape.*?>
<Group xmlns:fx=""http://javafx.com/fxml"">
    <children>
        <Rectangle fx:id=""rectangle"" x=""10"" y=""10"" width=""320"" height=""240""
            fill=""#ff0000""/>
        ...
    </children>
</Group>
```

----------------------------------------

TITLE: ID Compat Math Continue Property Definition
DESCRIPTION: Defines the possible boolean values for the Unicode ID_Compat_Math_Continue property, indicating characters that can continue an identifier in mathematical contexts.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropertyValueAliases.txt#_snippet_50

LANGUAGE: APIDOC
CODE:
```
ID_Compat_Math_Continue; N; No; F; False
ID_Compat_Math_Continue; Y; Yes; T; True
```

----------------------------------------

TITLE: Implement Custom FXML Control in Java
DESCRIPTION: This Java class CustomControl extends VBox and acts as both the root and controller for an FXML document. Its constructor loads the FXML file, setting itself as the root and controller, and includes methods for text manipulation and handling button actions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_57

LANGUAGE: Java
CODE:
```
package fxml;

import java.io.IOException;

import javafx.beans.property.StringProperty;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.control.TextField;
import javafx.scene.layout.VBox;

public class CustomControl extends VBox {
    @FXML private TextField textField;

    public CustomControl() {
        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(""custom_control.fxml""));
        fxmlLoader.setRoot(this);
        fxmlLoader.setController(this);

        try {
            fxmlLoader.load();
        } catch (IOException exception) {
            throw new RuntimeException(exception);
        }
    }

    public String getText() {
        return textProperty().get();
    }

    public void setText(String value) {
        textProperty().set(value);
    }

    public StringProperty textProperty() {
        return textField.textProperty();
    }

    @FXML
    protected void doSomething() {
        System.out.println(""The button was clicked!"");
    }
}
```

----------------------------------------

TITLE: Add Source Subdirectory
DESCRIPTION: Includes the 'Source' directory in the CMake build process. This command tells CMake to process the CMakeLists.txt file within the 'Source' directory, which typically contains the main compilation targets for the project.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/CMakeLists.txt#_snippet_3

LANGUAGE: CMake
CODE:
```
add_subdirectory(Source)
```

----------------------------------------

TITLE: Java Controller Implementing Initializable with fx:id Injection
DESCRIPTION: This Java controller implements the Initializable interface, allowing it to define an initialize() method. This method is used to programmatically attach an EventHandler to a Button instance variable, which is injected by the FXML loader via fx:id. This approach provides more control over event handling compared to inline FXML attributes.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_50

LANGUAGE: Java
CODE:
```
package com.foo;

public class MyController implements Initializable {
    public Button button;

    @Override
    public void initialize(URL location, Resources resources)
        button.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                System.out.println(""You clicked me!"");
            }
        });
    }
}
```

----------------------------------------

TITLE: Enable Downloading Official OpenJFX Libraries via Gradle
DESCRIPTION: This Gradle property activates a task to automatically download officially released OpenJFX libraries from MavenCentral. Be aware that these libraries might not be fully compatible with your current source tree. It is advisable to use the latest available version for improved compatibility.
SOURCE: https://github.com/openjdk/jfx/blob/master/WEBKIT-MEDIA-STUBS.md#_snippet_3

LANGUAGE: Gradle
CODE:
```
-PSTUB_RUNTIME_OPENJFX=""15-ea+4""
```

----------------------------------------

TITLE: Unicode Code Points for Samaritan Script
DESCRIPTION: Defines Unicode code point ranges, categories, and character names for the Samaritan script, including letters, marks, and punctuation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_23

LANGUAGE: APIDOC
CODE:
```
0800..0815    ; Samaritan # Lo  [22] SAMARITAN LETTER ALAF..SAMARITAN LETTER TAAF
0816..0819    ; Samaritan # Mn   [4] SAMARITAN MARK IN..SAMARITAN MARK DAGESH
081A          ; Samaritan # Lm       SAMARITAN MODIFIER LETTER EPENTHETIC YUT
081B..0823    ; Samaritan # Mn   [9] SAMARITAN MARK EPENTHETIC YUT..SAMARITAN VOWEL SIGN A
0824          ; Samaritan # Lm       SAMARITAN MODIFIER LETTER SHORT A
0825..0827    ; Samaritan # Mn   [3] SAMARITAN VOWEL SIGN SHORT A..SAMARITAN VOWEL SIGN U
0828          ; Samaritan # Lm       SAMARITAN MODIFIER LETTER I
0829..082D    ; Samaritan # Mn   [5] SAMARITAN VOWEL SIGN LONG I..SAMARITAN MARK NEQUDAA
0830..083E    ; Samaritan # Po  [15] SAMARITAN PUNCTUATION NEQUDAA..SAMARITAN PUNCTUATION ANNAAU
```

----------------------------------------

TITLE: Access Nested FXML Controller in Java
DESCRIPTION: This Java code shows how a main controller (MainController.java) can declare @FXML annotated fields to directly access the root element (Window dialog) and the controller (DialogController dialogController) of an FXML document included via <fx:include>, enabling interaction with the nested component.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_54

LANGUAGE: Java
CODE:
```
public class MainController extends Controller {
    @FXML private Window dialog;
    @FXML private DialogController dialogController;

    ...
}
```

----------------------------------------

TITLE: Elymaic Unicode Character Ranges
DESCRIPTION: Defines the Unicode code point range for the Elymaic script, specifically for letters and a ligature. The entry provides the hexadecimal range, script name, character type, and a description of the included characters.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_43

LANGUAGE: APIDOC
CODE:
```
10FE0..10FF6  ; Elymaic # Lo  [23] ELYMAIC LETTER ALEPH..ELYMAIC LIGATURE ZAYIN-YODH

# Total code points: 23
```

----------------------------------------

TITLE: C/C++ Source File for Basic Heap Configuration Definition
DESCRIPTION: This C source file defines the `iso_heap_config` using the `ISO_HEAP_CONFIG` macro, which is typically defined in a corresponding header file. It then uses `PAS_BASIC_HEAP_CONFIG_DEFINITIONS` to configure runtime properties for the intrinsic heap, such as whether newly allocated pages should be zeroed and the capacity of the intrinsic view cache.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/Documentation.md#_snippet_7

LANGUAGE: C
CODE:
```
const pas_heap_config iso_heap_config = ISO_HEAP_CONFIG;

PAS_BASIC_HEAP_CONFIG_DEFINITIONS(
    iso, ISO,
    .allocate_page_should_zero = false,
    .intrinsic_view_cache_capacity = pas_heap_runtime_config_zero_view_cache_capacity);
```

----------------------------------------

TITLE: Define SQLite Source Files and Core Compile Definitions (CMake)
DESCRIPTION: This snippet defines the primary source file for the SQLite library and sets a series of core compile-time definitions. These definitions enable thread safety and disable unused or deprecated features to optimize the SQLite build for OpenJDK/JavaFX, such as load extension, TCL variables, and tracing.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/sqlite/CMakeLists.txt#_snippet_0

LANGUAGE: CMake
CODE:
```
set(Sqlite_SOURCES
    sqlite3.c
)

set(Sqlite_DEFINES
    ""SQLITE_THREADSAFE=1""

    # The flags below are recommended in the SQLite documentation, and disable
    # features we don't use.
    ""SQLITE_LIKE_DOESNT_MATCH_BLOBS""
    ""SQLITE_OMIT_DEPRECATED""
    ""SQLITE_OMIT_PROGRESS_CALLBACK""
    ""SQLITE_OMIT_SHARED_CACHE""
    ""SQLITE_USE_ALLOCA""

    # We don't use sqlite3_{enable_}load_extension().
    ""SQLITE_OMIT_LOAD_EXTENSION""
    # We don't use TCL variables.
    ""SQLITE_OMIT_TCL_VARIABLE""

    # We don't use sqlite3_{profile,trace}().
    ""SQLITE_OMIT_TRACE""
)
```

----------------------------------------

TITLE: Set Instance Properties with Attributes and Type Coercion in FXML (Rectangle)
DESCRIPTION: Demonstrates setting multiple instance properties (x, y, width, height, fill) on a Rectangle using attributes in FXML. Highlights FXML's automatic type coercion, converting string attribute values to appropriate types like double and Color.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_23

LANGUAGE: FXML
CODE:
```
<Rectangle fx:id=""rectangle"" x=""10"" y=""10"" width=""320"" height=""240""
    fill=""#ff0000""/>
```

----------------------------------------

TITLE: Build and Configure XMLJava Static Library (CMake)
DESCRIPTION: This CMake snippet defines the 'XMLJava' static library from the specified source files. It applies conditional compile definitions, sets public and private compile options, links necessary libraries (icuuc, icudata), and configures public and private include directories for the library, ensuring proper compilation and linking.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/CMakeLists.txt#_snippet_2

LANGUAGE: CMake
CODE:
```
if (UNIX)
    set(XML_DEFINES ""_REENTRANT"")
endif ()

add_library(XMLJava STATIC ${XML_SOURCES})

if (XML_DEFINES)
    target_compile_definitions(XMLJava PRIVATE ${XML_DEFINES})
endif ()

target_compile_definitions(XMLJava PUBLIC ""LIBXML_STATIC"")
target_compile_options(XMLJava PRIVATE ${XML_COMPILE_OPTIONS})
target_link_libraries(XMLJava PUBLIC icuuc icudata)
# Export to other moduels who uses libxml
target_include_directories(XMLJava
    PUBLIC ""src/include""
    PUBLIC ""${XML_PLATFORM_INCLUDE_DIRECTORY}/include""
    PRIVATE ""${XML_PLATFORM_INCLUDE_DIRECTORY}""
)
```

----------------------------------------

TITLE: Oriya Unicode Character Definitions
DESCRIPTION: Defines the Unicode code points and their corresponding character names and general categories for the Oriya script. This includes various letters, signs, digits, and punctuation marks used in the Oriya writing system, specifying both individual characters and ranges.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_0

LANGUAGE: APIDOC
CODE:
```
0B01          ; Oriya # Mn       ORIYA SIGN CANDRABINDU
0B02..0B03    ; Oriya # Mc   [2] ORIYA SIGN ANUSVARA..ORIYA SIGN VISARGA
0B05..0B0C    ; Oriya # Lo   [8] ORIYA LETTER A..ORIYA LETTER VOCALIC L
0B0F..0B10    ; Oriya # Lo   [2] ORIYA LETTER E..ORIYA LETTER AI
0B13..0B28    ; Oriya # Lo  [22] ORIYA LETTER O..ORIYA LETTER NA
0B2A..0B30    ; Oriya # Lo   [7] ORIYA LETTER PA..ORIYA LETTER RA
0B32..0B33    ; Oriya # Lo   [2] ORIYA LETTER LA..ORIYA LETTER LLA
0B35..0B39    ; Oriya # Lo   [5] ORIYA LETTER VA..ORIYA LETTER HA
0B3C          ; Oriya # Mn       ORIYA SIGN NUKTA
0B3D          ; Oriya # Lo       ORIYA SIGN AVAGRAHA
0B3E          ; Oriya # Mc       ORIYA VOWEL SIGN AA
0B3F          ; Oriya # Mn       ORIYA VOWEL SIGN I
0B40          ; Oriya # Mc       ORIYA VOWEL SIGN II
0B41..0B44    ; Oriya # Mn   [4] ORIYA VOWEL SIGN U..ORIYA VOWEL SIGN VOCALIC RR
0B47..0B48    ; Oriya # Mc   [2] ORIYA VOWEL SIGN E..ORIYA VOWEL SIGN AI
0B4B..0B4C    ; Oriya # Mc   [2] ORIYA VOWEL SIGN O..ORIYA VOWEL SIGN AU
0B4D          ; Oriya # Mn       ORIYA SIGN VIRAMA
0B55..0B56    ; Oriya # Mn   [2] ORIYA SIGN OVERLINE..ORIYA AI LENGTH MARK
0B57          ; Oriya # Mc       ORIYA AU LENGTH MARK
0B5C..0B5D    ; Oriya # Lo   [2] ORIYA LETTER RRA..ORIYA LETTER RHA
0B5F..0B61    ; Oriya # Lo   [3] ORIYA LETTER YYA..ORIYA LETTER VOCALIC LL
0B62..0B63    ; Oriya # Mn   [2] ORIYA VOWEL SIGN VOCALIC L..ORIYA VOWEL SIGN VOCALIC LL
0B66..0B6F    ; Oriya # Nd  [10] ORIYA DIGIT ZERO..ORIYA DIGIT NINE
0B70          ; Oriya # So       ORIYA ISSHAR
0B71          ; Oriya # Lo       ORIYA LETTER WA
0B72..0B77    ; Oriya # No   [6] ORIYA FRACTION ONE QUARTER..ORIYA FRACTION THREE SIXTEENTHS

# Total code points: 91
```

----------------------------------------

TITLE: Configure and Copy WebKit Preferences
DESCRIPTION: This snippet defines a set of WebKit-related preference files and scripts, then copies them to a specified destination directory within the build environment. It utilizes CMake-like commands for variable assignment and file system operations.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WTF/wtf/CMakeLists.txt#_snippet_11

LANGUAGE: CMake
CODE:
```
    DESTINATION ${WTF_SCRIPTS_DIR}
)

set(WTF_PREFERENCES
    ../Scripts/GeneratePreferences.rb
    ../Scripts/Preferences/UnifiedWebPreferences.yaml
)

WEBKIT_COPY_FILES(WTF_CopyPreferences
    DESTINATION ${WTF_SCRIPTS_DIR}
    FILES ${WTF_PREFERENCES}
)
```

----------------------------------------

TITLE: Generate LLIntAssembly.h with Offline Assembler (CMake)
DESCRIPTION: This custom command orchestrates the generation of 'LLIntAssembly.h' using the 'asm.rb' script and the 'LLIntOffsetsExtractor' binary. It includes platform-specific arguments and a 'touch_nocreate' command to manage file modification times, preventing unnecessary rebuilds by the build system.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_32

LANGUAGE: CMake
CODE:
```
set(LLIntOutput LLIntAssembly.h)

if (CMAKE_SYSTEM_NAME MATCHES ""Linux"")
    set(OFFLINE_ASM_ARGS --binary-format=ELF)
endif ()

if (MSVC AND NOT ENABLE_C_LOOP)
    set(OFFLINE_ASM_ARGS --platform=Windows)
endif ()

add_custom_command(
    OUTPUT ${JavaScriptCore_DERIVED_SOURCES_DIR}/${LLIntOutput}
    MAIN_DEPENDENCY ${JAVASCRIPTCORE_DIR}/offlineasm/asm.rb
    DEPENDS LLIntOffsetsExtractor ${LLINT_ASM} ${OFFLINE_ASM} ${JavaScriptCore_DERIVED_SOURCES_DIR}/InitBytecodes.asm ${JavaScriptCore_DERIVED_SOURCES_DIR}/InitWasm.asm
    COMMAND ${CMAKE_COMMAND} -E env CMAKE_CXX_COMPILER_ID=${CMAKE_CXX_COMPILER_ID} GCC_OFFLINEASM_SOURCE_MAP=${GCC_OFFLINEASM_SOURCE_MAP} ${RUBY_EXECUTABLE} ${JAVASCRIPTCORE_DIR}/offlineasm/asm.rb -I${JavaScriptCore_DERIVED_SOURCES_DIR}/ ${JAVASCRIPTCORE_DIR}/llint/LowLevelInterpreter.asm $<TARGET_FILE:LLIntOffsetsExtractor> ${JavaScriptCore_DERIVED_SOURCES_DIR}/${LLIntOutput} ${BUILD_VARIANTS} ${OFFLINE_ASM_ARGS}
    COMMAND ${CMAKE_COMMAND} -E touch_nocreate ${JavaScriptCore_DERIVED_SOURCES_DIR}/${LLIntOutput}
    WORKING_DIRECTORY ${JavaScriptCore_DERIVED_SOURCES_DIR}
    VERBATIM)
```

----------------------------------------

TITLE: Java Controller Class with Public Event Handler Method
DESCRIPTION: This Java code defines a simple controller class (MyController) with a public method handleButtonAction. This method serves as an event handler, designed to be invoked directly from FXML markup. It prints a message to the console when triggered by a UI event.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_47

LANGUAGE: Java
CODE:
```
package com.foo;

public class MyController {
    public void handleButtonAction(ActionEvent event) {
        System.out.println(""You clicked me!"");
    }
}
```

----------------------------------------

TITLE: Set Instance Property with Attribute in FXML (Button)
DESCRIPTION: Shows how to set an instance property, specifically the text property of a Button, directly using an attribute in FXML. This is a concise way to configure properties.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_22

LANGUAGE: FXML
CODE:
```
<?import javafx.scene.control.*?>
<Button text=""Click Me!""/>
```

----------------------------------------

TITLE: Configure module-info for FXML Reflective Access
DESCRIPTION: This module-info.java configuration demonstrates how to open a package containing FXML-referenced types (like controllers or custom nodes) to the javafx.fxml module. This ensures that these types are reflectively accessible, which is necessary when deploying an application as a named module.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_60

LANGUAGE: Java
CODE:
```
module foo.app {
    opens com.foo to javafx.fxml;
}
```

----------------------------------------

TITLE: Unicode Script Extensions for Dupl Script
DESCRIPTION: Lists Unicode code points associated with the 'Dupl' (Duployan shorthand) script extension property. This section defines characters used in Duployan shorthand, such as SHORTHAND FORMAT LETTER OVERLAP.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_2

LANGUAGE: Data
CODE:
```
# Script_Extensions=Dupl

1BCA0..1BCA3  ; Dupl # Cf   [4] SHORTHAND FORMAT LETTER OVERLAP..SHORTHAND FORMAT UP STEP
```

----------------------------------------

TITLE: Configure Trusted Artifacts in Gradle Verification File
DESCRIPTION: This XML snippet is added inside the `<configuration>` section of the `verification-metadata.xml` file. It configures Gradle to automatically trust all source JAR files matching the specified regular expression, which is useful for preventing verification failures for source dependencies.
SOURCE: https://github.com/openjdk/jfx/blob/master/gradle/README.txt#_snippet_3

LANGUAGE: XML
CODE:
```
<trusted-artifacts>
      <trust file="".*-sources[.]jar"" regex=""true""/>
   </trusted-artifacts>
```

----------------------------------------

TITLE: Define CMake Variables for DumpRenderTree Paths, Sources, and Dependencies
DESCRIPTION: This snippet defines various CMake variables crucial for the DumpRenderTree build process. It sets up directory paths, lists source files, specifies required libraries, and configures private include directories. It also creates a necessary directory for derived sources.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/DumpRenderTree/java/CMakeLists.txt#_snippet_0

LANGUAGE: CMake
CODE:
```
set(DumpRenderTree_DIR ""${TOOLS_DIR}/DumpRenderTree"")
set(DumpRenderTree_BINDINGS_DIR ""${TOOLS_DIR}/DumpRenderTree/Bindings"")
set(WebKitTestRunner_SHARED_DIR ""${TOOLS_DIR}/TestRunnerShared/"")
set(WebKitTestRunner_UISCRIPTCONTEXT_DIR ""${TOOLS_DIR}/TestRunnerShared/UIScriptContext"")

file(MAKE_DIRECTORY ${DumpRenderTree_DERIVED_SOURCES_DIR})

set(DumpRenderTree_SOURCES
    ../CyclicRedundancyCheck.cpp
    ../GCController.cpp
    ../TestRunner.cpp
    ../WorkQueue.cpp
    DumpRenderTree.cpp
    EventSender.cpp
    GCControllerJava.cpp
    JavaEnv.cpp
    TestRunnerJava.cpp
    UIScriptControllerJava.cpp
    WorkQueueItemJava.cpp
)

set(DumpRenderTree_LIBRARIES
    WebKitLegacy
    TestRunnerShared
    ${JAVA_JVM_LIBRARY}
    ${ICU_I18N_LIBRARIES}
    ${ICU_LIBRARIES}
)

set(DumpRenderTree_PRIVATE_INCLUDE_DIRECTORIES
    ${CMAKE_BINARY_DIR}
    ${DumpRenderTree_DERIVED_SOURCES_DIR}
    ${DumpRenderTree_DIR}
    ${WebKitTestRunner_SHARED_DIR}
    ${WebKitTestRunner_SHARED_DIR}/Bindings
    ${WebKitTestRunner_UISCRIPTCONTEXT_DIR}
)

list(APPEND DumpRenderTree_PRIVATE_INCLUDE_DIRECTORIES
    ${PAL_FRAMEWORK_HEADERS_DIR}
    ${WebCore_PRIVATE_FRAMEWORK_HEADERS_DIR}
    ${WebKitLegacy_FRAMEWORK_HEADERS_DIR}
    ${JavaScriptCore_PRIVATE_FRAMEWORK_HEADERS_DIR}
    ${CMAKE_BINARY_DIR}/JavaScriptCore/Headers
    ${CMAKE_BINARY_DIR}/WTF/Headers
    ${CMAKE_BINARY_DIR}/bmalloc/Headers
    ${JAVA_INCLUDE_PATH}
    ${JAVA_INCLUDE_PATH2}
    ${CMAKE_SOURCE_DIR}/Source
    ${WEBCORE_DIR}/testing/js
)

list(APPEND DumpRenderTree_SOURCES
    ${DumpRenderTree_DERIVED_SOURCES_DIR}/TestOptionsGeneratedWebKitLegacyKeyMapping.cpp
    ${DumpRenderTree_DERIVED_SOURCES_DIR}/TestOptionsGeneratedKeys.h
)
```

----------------------------------------

TITLE: Define XML Source Files for Compilation (CMake)
DESCRIPTION: This CMake snippet defines the 'XML_SOURCES' variable, listing all C source files that are part of the 'XMLJava' static library. It includes core libxml2 components, with some files commented out, indicating they might be optional or not currently used.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxml/CMakeLists.txt#_snippet_0

LANGUAGE: CMake
CODE:
```
set(XML_SOURCES
     # src/c14n.c
     # src/catalog.c
     src/buf.c
     src/chvalid.c
     # src/debugXML.c
     src/dict.c
     # src/DOCBparser.c
     src/encoding.c
     src/entities.c
     src/error.c
     src/globals.c
     src/hash.c
     src/HTMLparser.c
     src/HTMLtree.c
     # src/legacy.c
     src/list.c
     # src/nanoftp.c
     # src/nanohttp.c
     src/parser.c
     src/parserInternals.c
     src/pattern.c
     # src/relaxng.c
     src/SAX2.c
     # src/SAX.c
     # src/schematron.c
     src/threads.c
     src/tree.c
     src/uri.c
     src/valid.c
     # src/xinclude.c
     # src/xlink.c
     src/xmlIO.c
     src/xmlmemory.c
     src/xmlreader.c
     # src/xmlregexp.c
     # src/xmlmodule.c
     src/xmlsave.c
     # src/xmlschemas.c
     # src/xmlschemastypes.c
     # src/xmlunicode.c
     src/xmlwriter.c
     src/xpath.c
     # src/xpointer.c
     src/xmlstring.c
)
```

----------------------------------------

TITLE: Instantiate Custom FXML Control in Java Code
DESCRIPTION: This Java code demonstrates how to programmatically create an instance of the CustomControl class, set its text property, and add it as a child to an HBox, integrating it into a JavaFX scene graph.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_58

LANGUAGE: Java
CODE:
```
HBox hbox = new HBox();
CustomControl customControl = new CustomControl();
customControl.setText(""Hello World!"");
hbox.getChildren().add(customControl);
```

----------------------------------------

TITLE: Configure Common CMake Paths and Includes
DESCRIPTION: Establishes the module search path for CMake to include custom modules located in the 'Source/cmake' directory. It then includes the 'WebKitCommon' CMake file, which likely contains shared definitions and configurations for the project.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/CMakeLists.txt#_snippet_1

LANGUAGE: CMake
CODE:
```
set(CMAKE_MODULE_PATH ""${CMAKE_SOURCE_DIR}/Source/cmake"")
include(WebKitCommon)
```

----------------------------------------

TITLE: Manage Performance Test Execution and Results
DESCRIPTION: This set of functions implements a simple performance test runner. `startTest` initializes the test, and `continueTest` records timestamps, calculates the average FPS over a defined duration (10 seconds), and displays the final results.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/test/resources/test/html/guimark2-vector.html#_snippet_5

LANGUAGE: JavaScript
CODE:
```
var testBegin = 0;
var testData = [];
var testRunning = false;
function startTest(){
  testBegin = TimeUtil.getTimer();
  testRunning = true;
  testData = [];
  results.innerHTML = ""Running..."";
}
function continueTest(){
  var time = TimeUtil.getTimer();
  testData.push(time);
  if(time-testBegin > 10000){
    testRunning = false;
    var output = testData.length/(time-testBegin)*1000;
    results.innerHTML = ""Test Average: ""+FPSMeter.formatNumber(output)+"" fps"";
  }
}
```

----------------------------------------

TITLE: Copy JavaScriptCore Public and Private Headers (CMake)
DESCRIPTION: These CMake commands define rules for copying JavaScriptCore's public and private headers to their designated framework directories. Dependencies are also managed to ensure that header copying occurs at the correct stage of the build process.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_53

LANGUAGE: CMake
CODE:
```
WEBKIT_COPY_FILES(JavaScriptCore_CopyHeaders
    DESTINATION ${JavaScriptCore_FRAMEWORK_HEADERS_DIR}/JavaScriptCore
    FILES ${JavaScriptCore_PUBLIC_FRAMEWORK_HEADERS}
    FLATTENED
)

WEBKIT_COPY_FILES(JavaScriptCore_CopyPrivateHeaders
    DESTINATION ${JavaScriptCore_PRIVATE_FRAMEWORK_HEADERS_DIR}/JavaScriptCore
    FILES ${JavaScriptCore_PRIVATE_FRAMEWORK_HEADERS}
    FLATTENED
)
add_dependencies(JavaScriptCore_CopyPrivateHeaders Bytecodes JSCBuiltins)
# JavaScriptCore_CopyPrivateHeaders needs to have a direct or indirect
# dependency of JavaScriptCore for CMake Visual Studio generator to
# eliminate duplicated custom commands. Otherwise,
# CombinedDomains.json will be generated in both projects.
if (NOT INTERNAL_BUILD)
    add_dependencies(JavaScriptCore_CopyPrivateHeaders JavaScriptCore)
endif ()
```

----------------------------------------

TITLE: RGI Emoji Modifier Sequence Specification
DESCRIPTION: Defines the combinations of base emoji Unicode code points with skin tone modifier code points to form RGI Emoji Modifier Sequences. Each line specifies the base code point, the modifier code point, the sequence type, a human-readable description, and the emoji version.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/emoji-sequences.txt#_snippet_1

LANGUAGE: APIDOC
CODE:
```
261D 1F3FB    ; RGI_Emoji_Modifier_Sequence  ; index pointing up: light skin tone                             # E1.0   [1] (☝🏻)
261D 1F3FC    ; RGI_Emoji_Modifier_Sequence  ; index pointing up: medium-light skin tone                      # E1.0   [1] (☝🏼)
261D 1F3FD    ; RGI_Emoji_Modifier_Sequence  ; index pointing up: medium skin tone                            # E1.0   [1] (☝🏽)
261D 1F3FE    ; RGI_Emoji_Modifier_Sequence  ; index pointing up: medium-dark skin tone                       # E1.0   [1] (☝🏾)
261D 1F3FF    ; RGI_Emoji_Modifier_Sequence  ; index pointing up: dark skin tone                              # E1.0   [1] (☝🏿)
26F9 1F3FB    ; RGI_Emoji_Modifier_Sequence  ; person bouncing ball: light skin tone                          # E2.0   [1] (⛹🏻)
26F9 1F3FC    ; RGI_Emoji_Modifier_Sequence  ; person bouncing ball: medium-light skin tone                   # E2.0   [1] (⛹🏼)
26F9 1F3FD    ; RGI_Emoji_Modifier_Sequence  ; person bouncing ball: medium skin tone                         # E2.0   [1] (⛹🏽)
26F9 1F3FE    ; RGI_Emoji_Modifier_Sequence  ; person bouncing ball: medium-dark skin tone                    # E2.0   [1] (⛹🏾)
26F9 1F3FF    ; RGI_Emoji_Modifier_Sequence  ; person bouncing ball: dark skin tone                           # E2.0   [1] (⛹🏿)
270A 1F3FB    ; RGI_Emoji_Modifier_Sequence  ; raised fist: light skin tone                                   # E1.0   [1] (✊🏻)
270A 1F3FC    ; RGI_Emoji_Modifier_Sequence  ; raised fist: medium-light skin tone                            # E1.0   [1] (✊🏼)
270A 1F3FD    ; RGI_Emoji_Modifier_Sequence  ; raised fist: medium skin tone                                  # E1.0   [1] (✊🏽)
270A 1F3FE    ; RGI_Emoji_Modifier_Sequence  ; raised fist: medium-dark skin tone                             # E1.0   [1] (✊🏾)
270A 1F3FF    ; RGI_Emoji_Modifier_Sequence  ; raised fist: dark skin tone                                    # E1.0   [1] (✊🏿)
270B 1F3FB    ; RGI_Emoji_Modifier_Sequence  ; raised hand: light skin tone                                   # E1.0   [1] (✋🏻)
270B 1F3FC    ; RGI_Emoji_Modifier_Sequence  ; raised hand: medium-light skin tone                            # E1.0   [1] (✋🏼)
270B 1F3FD    ; RGI_Emoji_Modifier_Sequence  ; raised hand: medium skin tone                                  # E1.0   [1] (✋🏽)
270B 1F3FE    ; RGI_Emoji_Modifier_Sequence  ; raised hand: medium-dark skin tone                             # E1.0   [1] (✋🏾)
270B 1F3FF    ; RGI_Emoji_Modifier_Sequence  ; raised hand: dark skin tone                                    # E1.0   [1] (✋🏿)
270C 1F3FB    ; RGI_Emoji_Modifier_Sequence  ; victory hand: light skin tone                                  # E1.0   [1] (✌🏻)
270C 1F3FC    ; RGI_Emoji_Modifier_Sequence  ; victory hand: medium-light skin tone                           # E1.0   [1] (✌🏼)
270C 1F3FD    ; RGI_Emoji_Modifier_Sequence  ; victory hand: medium skin tone                                 # E1.0   [1] (✌🏽)
270C 1F3FE    ; RGI_Emoji_Modifier_Sequence  ; victory hand: medium-dark skin tone                            # E1.0   [1] (✌🏾)
270C 1F3FF    ; RGI_Emoji_Modifier_Sequence  ; victory hand: dark skin tone                                   # E1.0   [1] (✌🏿)
270D 1F3FB    ; RGI_Emoji_Modifier_Sequence  ; writing hand: light skin tone                                  # E1.0   [1] (✍🏻)
270D 1F3FC    ; RGI_Emoji_Modifier_Sequence  ; writing hand: medium-light skin tone                           # E1.0   [1] (✍🏼)
270D 1F3FD    ; RGI_Emoji_Modifier_Sequence  ; writing hand: medium skin tone                                 # E1.0   [1] (✍🏽)
270D 1F3FE    ; RGI_Emoji_Modifier_Sequence  ; writing hand: medium-dark skin tone                            # E1.0   [1] (✍🏾)
270D 1F3FF    ; RGI_Emoji_Modifier_Sequence  ; writing hand: dark skin tone                                   # E1.0   [1] (✍🏿)
1F385 1F3FB   ; RGI_Emoji_Modifier_Sequence  ; Santa Claus: light skin tone                                   # E1.0   [1] (🎅🏻)
1F385 1F3FC   ; RGI_Emoji_Modifier_Sequence  ; Santa Claus: medium-light skin tone                            # E1.0   [1] (🎅🏼)
1F385 1F3FD   ; RGI_Emoji_Modifier_Sequence  ; Santa Claus: medium skin tone                                  # E1.0   [1] (🎅🏽)
1F385 1F3FE   ; RGI_Emoji_Modifier_Sequence  ; Santa Claus: medium-dark skin tone                             # E1.0   [1] (🎅🏾)
1F385 1F3FF   ; RGI_Emoji_Modifier_Sequence  ; Santa Claus: dark skin tone                                    # E1.0   [1] (🎅🏿)
1F3C2 1F3FB   ; RGI_Emoji_Modifier_Sequence  ; snowboarder: light skin tone                                   # E1.0   [1] (🏂🏻)
1F3C2 1F3FC   ; RGI_Emoji_Modifier_Sequence  ; snowboarder: medium-light skin tone                            # E1.0   [1] (🏂🏼)
1F3C2 1F3FD   ; RGI_Emoji_Modifier_Sequence  ; snowboarder: medium skin tone                                  # E1.0   [1] (🏂🏽)
```

----------------------------------------

TITLE: Unicode Code Points for Tai Viet Script
DESCRIPTION: Defines Unicode code point ranges, categories, and character names for the Tai Viet script, including letters, vowels, and tone marks.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_20

LANGUAGE: APIDOC
CODE:
```
AA80..AAAF    ; Tai_Viet # Lo  [48] TAI VIET LETTER LOW KO..TAI VIET LETTER HIGH O
AAB0          ; Tai_Viet # Mn       TAI VIET MAI KANG
AAB1          ; Tai_Viet # Lo       TAI VIET VOWEL AA
AAB2..AAB4    ; Tai_Viet # Mn   [3] TAI VIET VOWEL I..TAI VIET VOWEL U
AAB5..AAB6    ; Tai_Viet # Lo   [2] TAI VIET VOWEL E..TAI VIET VOWEL O
AAB7..AAB8    ; Tai_Viet # Mn   [2] TAI VIET MAI KHIT..TAI VIET VOWEL IA
AAB9..AABD    ; Tai_Viet # Lo   [5] TAI VIET VOWEL UEA..TAI VIET VOWEL AN
AABE..AABF    ; Tai_Viet # Mn   [2] TAI VIET VOWEL AM..TAI VIET TONE MAI EK
AAC0          ; Tai_Viet # Lo       TAI VIET TONE MAI NUENG
AAC1          ; Tai_Viet # Mn       TAI VIET TONE MAI THO
AAC2          ; Tai_Viet # Lo       TAI VIET TONE MAI SONG
AADB..AADC    ; Tai_Viet # Lo   [2] TAI VIET SYMBOL KON..TAI VIET SYMBOL NUENG
AADD          ; Tai_Viet # Lm       TAI VIET SYMBOL SAM
AADE..AADF    ; Tai_Viet # Po   [2] TAI VIET SYMBOL HO HOI..TAI VIET SYMBOL KOI KOI
```

----------------------------------------

TITLE: Configure libxslt on Linux for OpenJFX
DESCRIPTION: This snippet provides the command-line instructions for configuring libxslt on Linux. It involves navigating to the source directory and executing './configure' to set up the build environment.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/UPDATING.txt#_snippet_2

LANGUAGE: Shell
CODE:
```
cd modules/javafx.web/src/main/native/Source/ThirdParty/libxslt/src
./configure
```

----------------------------------------

TITLE: Khitan Small Script Unicode Character Ranges
DESCRIPTION: Defines the Unicode code point ranges for the Khitan Small Script, including a filler character and a large block of general characters. Each entry lists the hexadecimal range, script name, character type, and a description of the characters.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_49

LANGUAGE: APIDOC
CODE:
```
16FE4         ; Khitan_Small_Script # Mn       KHITAN SMALL SCRIPT FILLER
18B00..18CD5  ; Khitan_Small_Script # Lo [470] KHITAN SMALL SCRIPT CHARACTER-18B00..KHITAN SMALL SCRIPT CHARACTER-18CD5

# Total code points: 471
```

----------------------------------------

TITLE: Test libpas Standalone
DESCRIPTION: Command to run libpas's tests independently. This is useful for verifying changes and ensuring stability. The tests are designed to catch bugs early in the development cycle.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/bmalloc/libpas/ReadMe.md#_snippet_2

LANGUAGE: Shell
CODE:
```
./test.sh
```

----------------------------------------

TITLE: Define Libraries and Frameworks for TestRunnerShared
DESCRIPTION: Specifies the required libraries and frameworks that TestRunnerShared depends on. This includes core WebKit components like WebCoreTestSupport, JavaScriptCore, and conditional inclusion of bmalloc for memory management.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/TestRunnerShared/CMakeLists.txt#_snippet_3

LANGUAGE: CMake
CODE:
```
set(TestRunnerShared_LIBRARIES WebKit::WebCoreTestSupport)
set(TestRunnerShared_FRAMEWORKS
    JavaScriptCore
    PAL
    WTF
    WebCore
)
if (NOT USE_SYSTEM_MALLOC)
    list(APPEND WebKitTestRunner_FRAMEWORKS bmalloc)
endif ()
```

----------------------------------------

TITLE: Unicode Character Property: Join_Control (Join_C) Mappings
DESCRIPTION: Defines the Join_Control (Join_C) property mappings, indicating whether a character has joining behavior. Each entry specifies the short name, long name, and boolean value for the property, typically used in text rendering engines.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropertyValueAliases.txt#_snippet_60

LANGUAGE: APIDOC
CODE:
```
Join_C; N                             ; No                               ; F                                ; False
Join_C; Y                             ; Yes                              ; T                                ; True
```

----------------------------------------

TITLE: Define and Link DumpRenderTreeJava Library Target
DESCRIPTION: This snippet defines the CMake target for the DumpRenderTreeJava shared library. It includes necessary configuration files, adds global definitions, specifies dependencies on other targets, sets output properties, and links the required libraries to the newly created target.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/DumpRenderTree/java/CMakeLists.txt#_snippet_2

LANGUAGE: CMake
CODE:
```
WEBKIT_INCLUDE_CONFIG_FILES_IF_EXISTS()

include_directories(${DumpRenderTree_PRIVATE_INCLUDE_DIRECTORIES})

add_library(DumpRenderTreeJava SHARED ${DumpRenderTree_SOURCES})
add_definitions(-DWEBCORE_EXPORT=WTF_IMPORT_DECLARATION -DWEBCORE_TESTSUPPORT_EXPORT=WTF_IMPORT_DECLARATION)
add_dependencies(DumpRenderTreeJava TestRunnerSharedBindings)

set_target_properties(DumpRenderTreeJava PROPERTIES OUTPUT_NAME ""DumpRenderTreeJava"")
target_link_libraries(DumpRenderTreeJava ${DumpRenderTree_LIBRARIES})
```

----------------------------------------

TITLE: Define Unicode Other_ID_Start Characters
DESCRIPTION: This snippet specifies Unicode code points that have the 'Other_ID_Start' property. These characters are permitted to begin an identifier in programming languages or other contexts, even though they are not classified as letters or numbers. This property is crucial for defining valid identifier syntax.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropList.txt#_snippet_17

LANGUAGE: Text
CODE:
```
1885..1886    ; Other_ID_Start # Mn   [2] MONGOLIAN LETTER ALI GALI BALUDA..MONGOLIAN LETTER ALI GALI THREE BALUDA
2118          ; Other_ID_Start # Sm       SCRIPT CAPITAL P
212E          ; Other_ID_Start # So       ESTIMATED SYMBOL
309B..309C    ; Other_ID_Start # Sk   [2] KATAKANA-HIRAGANA VOICED SOUND MARK..KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK
```

----------------------------------------

TITLE: Dives Akuru Unicode Character Ranges
DESCRIPTION: Comprehensive listing of Unicode code point ranges for the Dives Akuru script, covering letters, various vowel signs, diacritics, and punctuation marks. Each line specifies the hexadecimal range, script, character type, and character descriptions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_48

LANGUAGE: APIDOC
CODE:
```
11900..11906  ; Dives_Akuru # Lo   [7] DIVES AKURU LETTER A..DIVES AKURU LETTER E
11909         ; Dives_Akuru # Lo       DIVES AKURU LETTER O
1190C..11913  ; Dives_Akuru # Lo   [8] DIVES AKURU LETTER KA..DIVES AKURU LETTER JA
11915..11916  ; Dives_Akuru # Lo   [2] DIVES AKURU LETTER NYA..DIVES AKURU LETTER TTA
11918..1192F  ; Dives_Akuru # Lo  [24] DIVES AKURU LETTER DDA..DIVES AKURU LETTER ZA
11930..11935  ; Dives_Akuru # Mc   [6] DIVES AKURU VOWEL SIGN AA..DIVES AKURU VOWEL SIGN E
11937..11938  ; Dives_Akuru # Mc   [2] DIVES AKURU VOWEL SIGN AI..DIVES AKURU VOWEL SIGN O
1193B..1193C  ; Dives_Akuru # Mn   [2] DIVES AKURU SIGN ANUSVARA..DIVES AKURU SIGN CANDRABINDU
1193D         ; Dives_Akuru # Mc       DIVES AKURU SIGN HALANTA
1193E         ; Dives_Akuru # Mn       DIVES AKURU VIRAMA
1193F         ; Dives_Akuru # Lo       DIVES AKURU PREFIXED NASAL SIGN
11940         ; Dives_Akuru # Mc       DIVES AKURU MEDIAL YA
11941         ; Dives_Akuru # Lo       DIVES AKURU INITIAL RA
11942         ; Dives_Akuru # Mc       DIVES AKURU MEDIAL RA
11943         ; Dives_Akuru # Mn       DIVES AKURU SIGN NUKTA
11944..11946  ; Dives_Akuru # Po   [3] DIVES AKURU DOUBLE DANDA..DIVES AKURU END OF TEXT MARK
11950..11959  ; Dives_Akuru # Nd  [10] DIVES AKURU DIGIT ZERO..DIVES AKURU DIGIT NINE

# Total code points: 72
```

----------------------------------------

TITLE: ID Continue (IDC) Property Definition
DESCRIPTION: Defines the possible boolean values for the Unicode ID_Continue (IDC) property, indicating characters that can continue an identifier.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/PropertyValueAliases.txt#_snippet_52

LANGUAGE: APIDOC
CODE:
```
IDC; N; No; F; False
IDC; Y; Yes; T; True
```

----------------------------------------

TITLE: Create Yarr Derived Sources Directory (CMake)
DESCRIPTION: This CMake command ensures that the directory for Yarr's derived sources exists before generating files into it. This prevents build errors related to missing output directories for generated code.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_41

LANGUAGE: CMake
CODE:
```
file(MAKE_DIRECTORY ${JavaScriptCore_DERIVED_SOURCES_DIR}/yarr)
```

----------------------------------------

TITLE: Define IDL Files for TestRunnerShared Bindings
DESCRIPTION: Identifies the Interface Definition Language (IDL) files used to generate C++ bindings for the TestRunnerShared component. Specifically, it points to the UIScriptController IDL for integration.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/TestRunnerShared/CMakeLists.txt#_snippet_5

LANGUAGE: CMake
CODE:
```
set(TestRunnerShared_IDL_FILES
    ${TestRunnerShared_DIR}/UIScriptContext/Bindings/UIScriptController.idl
)
```

----------------------------------------

TITLE: Append Generated Bytecode Headers to Project Headers List
DESCRIPTION: This CMake command appends the paths of the generated `BytecodeStructs.h` and `Bytecodes.h` files to the `JavaScriptCore_HEADERS` list. This ensures that these dynamically generated headers are properly recognized and included during the compilation of JavaScriptCore.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_17

LANGUAGE: CMake
CODE:
```
list(APPEND JavaScriptCore_HEADERS
    ${JavaScriptCore_DERIVED_SOURCES_DIR}/BytecodeStructs.h
    ${JavaScriptCore_DERIVED_SOURCES_DIR}/Bytecodes.h
)
```

----------------------------------------

TITLE: Define PAL Source Files (CMake)
DESCRIPTION: This CMake command specifies the source files (.cpp) that constitute the Platform Abstraction Layer (PAL) module. These files are compiled to build the PAL library.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/PAL/pal/CMakeLists.txt#_snippet_1

LANGUAGE: CMake
CODE:
```
set(PAL_SOURCES
    FileSizeFormatter.cpp
    Logging.cpp
    SessionID.cpp
    ThreadGlobalData.cpp

    system/SleepDisabler.cpp
    system/SystemSleepListener.cpp

    text/EncodingTables.cpp
    text/TextCodec.cpp
    text/TextCodecCJK.cpp
    text/TextCodecICU.cpp
    text/TextCodecLatin1.cpp
    text/TextCodecReplacement.cpp
    text/TextCodecSingleByte.cpp
    text/TextCodecUTF16.cpp
    text/TextCodecUTF8.cpp
    text/TextCodecUserDefined.cpp
    text/TextEncoding.cpp
    text/TextEncodingDetectorICU.cpp
    text/TextEncodingRegistry.cpp
)
```

----------------------------------------

TITLE: JavaScript Unicode String and Regex Execution
DESCRIPTION: Initializes a JavaScript string containing Unicode surrogate pairs and then executes a regular expression against it. The regex includes escaped special characters and captures groups, demonstrating advanced pattern matching.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/test/resources/test/html/unicode.html#_snippet_0

LANGUAGE: JavaScript
CODE:
```
let a = ""\\ud800\\ud800\\udc00"" let b = /(.\*\\[^x\\]+?)\\[^\\]\*(\\[1\\])/u b.exec(a)
```

----------------------------------------

TITLE: Specify DumpRenderTree Libraries and Frameworks (CMake)
DESCRIPTION: This CMake snippet defines the external libraries and frameworks that DumpRenderTree depends on for successful compilation and linking. It includes WebKit-specific test runners and core components, conditionally adding the 'bmalloc' framework if system malloc is not used.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/DumpRenderTree/CMakeLists.txt#_snippet_2

LANGUAGE: CMake
CODE:
```
set(DumpRenderTree_LIBRARIES
    WebKit::TestRunnerShared
    WebKit::WebCoreTestSupport
)
set(DumpRenderTree_FRAMEWORKS
    JavaScriptCore
    PAL
    WTF
    WebCore
    WebKitLegacy
)
if (NOT USE_SYSTEM_MALLOC)
    list(APPEND WebKitTestRunner_FRAMEWORKS bmalloc)
endif ()
```

----------------------------------------

TITLE: Associate Controller Method Event Handler in FXML
DESCRIPTION: This FXML snippet illustrates how to link an element's event, such as `onAction`, to a method defined in an external Java controller class. It uses the `fx:controller` attribute on the root element to associate the controller and a leading hash (`#`) to reference the specific handler method.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_32

LANGUAGE: FXML
CODE:
```
<VBox fx:controller=""com.foo.MyController""
    xmlns:fx=""http://javafx.com/fxml"">
    <children>
        <Button text=""Click Me!"" onAction=""#handleButtonAction""/>
    </children>
</VBox>
```

----------------------------------------

TITLE: Draw Stock Data Lines and Filled Areas on Canvas
DESCRIPTION: This function renders stock data on the canvas using `beginPath`, `lineTo`, `stroke`, and `fill` methods. It can draw a single line or a filled area between two data sets, applying specified line and fill styles.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/test/resources/test/html/guimark2-vector.html#_snippet_3

LANGUAGE: JavaScript
CODE:
```
function graphStockData(topData, bottomData, line, fill){
  var stock;
  var xCoord;
  var yCoord;
  var i = 0;
  draw.beginPath();
  draw.strokeStyle = line;
  draw.lineWidth = 2;
  draw.lineCap = ""round"";
  draw.lineJoin = ""round"";
  draw.fillStyle = fill;
  stock = topData[i];
  xCoord = stock.minute*chartXSpread;
  yCoord = chartHeight-stock.value*chartYSpread;
  draw.moveTo(xCoord, yCoord);
  while(++i < topData.length){
    stock = topData[i];
    xCoord = stock.minute*chartXSpread;
    yCoord = chartHeight-stock.value*chartYSpread;
    draw.lineTo(xCoord, yCoord);
  }
  draw.stroke();
  if(bottomData != null){
    i = bottomData.length;
    while(--i > -1){
      stock = bottomData[i];
      xCoord = stock.minute*chartXSpread;
      yCoord = chartHeight-stock.value*chartYSpread;
      draw.lineTo(xCoord, yCoord);
    }
  }else{
    draw.lineTo(chartWidth, chartHeight);
    draw.lineTo(0, chartHeight);
  }
  draw.fill();
  draw.closePath();
}
```

----------------------------------------

TITLE: Unicode Latin Extended-Additional Character Mappings
DESCRIPTION: This snippet provides a comprehensive list of Unicode character mappings, primarily from the Latin Extended-Additional block. Each line specifies a source character's hexadecimal code, a mapping type, a target character or sequence, and a descriptive comment. This data is crucial for implementing correct character normalization and case folding algorithms in software.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/CaseFolding.txt#_snippet_2

LANGUAGE: Character Mapping Data
CODE:
```
1E0C; C; 1E0D; # LATIN CAPITAL LETTER D WITH DOT BELOW
1E0E; C; 1E0F; # LATIN CAPITAL LETTER D WITH LINE BELOW
1E10; C; 1E11; # LATIN CAPITAL LETTER D WITH CEDILLA
1E12; C; 1E13; # LATIN CAPITAL LETTER D WITH CIRCUMFLEX BELOW
1E14; C; 1E15; # LATIN CAPITAL LETTER E WITH MACRON AND GRAVE
1E16; C; 1E17; # LATIN CAPITAL LETTER E WITH MACRON AND ACUTE
1E18; C; 1E19; # LATIN CAPITAL LETTER E WITH CIRCUMFLEX BELOW
1E1A; C; 1E1B; # LATIN CAPITAL LETTER E WITH TILDE BELOW
1E1C; C; 1E1D; # LATIN CAPITAL LETTER E WITH CEDILLA AND BREVE
1E1E; C; 1E1F; # LATIN CAPITAL LETTER F WITH DOT ABOVE
1E20; C; 1E21; # LATIN CAPITAL LETTER G WITH MACRON
1E22; C; 1E23; # LATIN CAPITAL LETTER H WITH DOT ABOVE
1E24; C; 1E25; # LATIN CAPITAL LETTER H WITH DOT BELOW
1E26; C; 1E27; # LATIN CAPITAL LETTER H WITH DIAERESIS
1E28; C; 1E29; # LATIN CAPITAL LETTER H WITH CEDILLA
1E2A; C; 1E2B; # LATIN CAPITAL LETTER H WITH BREVE BELOW
1E2C; C; 1E2D; # LATIN CAPITAL LETTER I WITH TILDE BELOW
1E2E; C; 1E2F; # LATIN CAPITAL LETTER I WITH DIAERESIS AND ACUTE
1E30; C; 1E31; # LATIN CAPITAL LETTER K WITH ACUTE
1E32; C; 1E33; # LATIN CAPITAL LETTER K WITH DOT BELOW
1E34; C; 1E35; # LATIN CAPITAL LETTER K WITH LINE BELOW
1E36; C; 1E37; # LATIN CAPITAL LETTER L WITH DOT BELOW
1E38; C; 1E39; # LATIN CAPITAL LETTER L WITH DOT BELOW AND MACRON
1E3A; C; 1E3B; # LATIN CAPITAL LETTER L WITH LINE BELOW
1E3C; C; 1E3D; # LATIN CAPITAL LETTER L WITH CIRCUMFLEX BELOW
1E3E; C; 1E3F; # LATIN CAPITAL LETTER M WITH ACUTE
1E40; C; 1E41; # LATIN CAPITAL LETTER M WITH DOT ABOVE
1E42; C; 1E43; # LATIN CAPITAL LETTER M WITH DOT BELOW
1E44; C; 1E45; # LATIN CAPITAL LETTER N WITH DOT ABOVE
1E46; C; 1E47; # LATIN CAPITAL LETTER N WITH DOT BELOW
1E48; C; 1E49; # LATIN CAPITAL LETTER N WITH LINE BELOW
1E4A; C; 1E4B; # LATIN CAPITAL LETTER N WITH CIRCUMFLEX BELOW
1E4C; C; 1E4D; # LATIN CAPITAL LETTER O WITH TILDE AND ACUTE
1E4E; C; 1E4F; # LATIN CAPITAL LETTER O WITH TILDE AND DIAERESIS
1E50; C; 1E51; # LATIN CAPITAL LETTER O WITH MACRON AND GRAVE
1E52; C; 1E53; # LATIN CAPITAL LETTER O WITH MACRON AND ACUTE
1E54; C; 1E55; # LATIN CAPITAL LETTER P WITH ACUTE
1E56; C; 1E57; # LATIN CAPITAL LETTER P WITH DOT ABOVE
1E58; C; 1E59; # LATIN CAPITAL LETTER R WITH DOT ABOVE
1E5A; C; 1E5B; # LATIN CAPITAL LETTER R WITH DOT BELOW
1E5C; C; 1E5D; # LATIN CAPITAL LETTER R WITH DOT BELOW AND MACRON
1E5E; C; 1E5F; # LATIN CAPITAL LETTER R WITH LINE BELOW
1E60; C; 1E61; # LATIN CAPITAL LETTER S WITH DOT ABOVE
1E62; C; 1E63; # LATIN CAPITAL LETTER S WITH DOT BELOW
1E64; C; 1E65; # LATIN CAPITAL LETTER S WITH ACUTE AND DOT ABOVE
1E66; C; 1E67; # LATIN CAPITAL LETTER S WITH CARON AND DOT ABOVE
1E68; C; 1E69; # LATIN CAPITAL LETTER S WITH DOT BELOW AND DOT ABOVE
1E6A; C; 1E6B; # LATIN CAPITAL LETTER T WITH DOT ABOVE
1E6C; C; 1E6D; # LATIN CAPITAL LETTER T WITH DOT BELOW
1E6E; C; 1E6F; # LATIN CAPITAL LETTER T WITH LINE BELOW
1E70; C; 1E71; # LATIN CAPITAL LETTER T WITH CIRCUMFLEX BELOW
1E72; C; 1E73; # LATIN CAPITAL LETTER U WITH DIAERESIS BELOW
1E74; C; 1E75; # LATIN CAPITAL LETTER U WITH TILDE BELOW
1E76; C; 1E77; # LATIN CAPITAL LETTER U WITH CIRCUMFLEX BELOW
1E78; C; 1E79; # LATIN CAPITAL LETTER U WITH TILDE AND ACUTE
1E7A; C; 1E7B; # LATIN CAPITAL LETTER U WITH MACRON AND DIAERESIS
1E7C; C; 1E7D; # LATIN CAPITAL LETTER V WITH TILDE
1E7E; C; 1E7F; # LATIN CAPITAL LETTER V WITH DOT BELOW
1E80; C; 1E81; # LATIN CAPITAL LETTER W WITH GRAVE
1E82; C; 1E83; # LATIN CAPITAL LETTER W WITH ACUTE
1E84; C; 1E85; # LATIN CAPITAL LETTER W WITH DIAERESIS
1E86; C; 1E87; # LATIN CAPITAL LETTER W WITH DOT ABOVE
1E88; C; 1E89; # LATIN CAPITAL LETTER W WITH DOT BELOW
1E8A; C; 1E8B; # LATIN CAPITAL LETTER X WITH DOT ABOVE
1E8C; C; 1E8D; # LATIN CAPITAL LETTER X WITH DIAERESIS
1E8E; C; 1E8F; # LATIN CAPITAL LETTER Y WITH DOT ABOVE
1E90; C; 1E91; # LATIN CAPITAL LETTER Z WITH CIRCUMFLEX
1E92; C; 1E93; # LATIN CAPITAL LETTER Z WITH DOT BELOW
1E94; C; 1E95; # LATIN CAPITAL LETTER Z WITH LINE BELOW
1E96; F; 0068 0331; # LATIN SMALL LETTER H WITH LINE BELOW
1E97; F; 0074 0308; # LATIN SMALL LETTER T WITH DIAERESIS
1E98; F; 0077 030A; # LATIN SMALL LETTER W WITH RING ABOVE
1E99; F; 0079 030A; # LATIN SMALL LETTER Y WITH RING ABOVE
1E9A; F; 0061 02BE; # LATIN SMALL LETTER A WITH RIGHT HALF RING
1E9B; C; 1E61; # LATIN SMALL LETTER LONG S WITH DOT ABOVE
1E9E; F; 0073 0073; # LATIN CAPITAL LETTER SHARP S
1E9E; S; 00DF; # LATIN CAPITAL LETTER SHARP S
1EA0; C; 1EA1; # LATIN CAPITAL LETTER A WITH DOT BELOW
1EA2; C; 1EA3; # LATIN CAPITAL LETTER A WITH HOOK ABOVE
1EA4; C; 1EA5; # LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE
1EA6; C; 1EA7; # LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE
1EA8; C; 1EA9; # LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE
1EAA; C; 1EAB; # LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE
1EAC; C; 1EAD; # LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW
1EAE; C; 1EAF; # LATIN CAPITAL LETTER A WITH BREVE AND ACUTE
1EB0; C; 1EB1; # LATIN CAPITAL LETTER A WITH BREVE AND GRAVE
```

----------------------------------------

TITLE: Define PAL Private Include Directories (CMake)
DESCRIPTION: This CMake command sets the private include directories for the PAL module. These paths are used by the compiler to locate header files during the compilation of PAL's source code.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/PAL/pal/CMakeLists.txt#_snippet_2

LANGUAGE: CMake
CODE:
```
set(PAL_PRIVATE_INCLUDE_DIRECTORIES
    ""${CMAKE_BINARY_DIR}""
    ""${PAL_DERIVED_SOURCES_DIR}""
    ""${PAL_DIR}""
    ""${PAL_DIR}/pal""
    ""${PAL_DIR}/pal/crypto""
    ""${PAL_DIR}/pal/system""
    ""${PAL_DIR}/pal/text""
)
```

----------------------------------------

TITLE: Configure CMake for testmem Executable Build
DESCRIPTION: This CMake snippet configures the build process for an executable named 'testmem'. It sets its source file, links necessary libraries (like CMAKE_DL_LIBS) and frameworks (JavaScriptCore, WTF, and optionally bmalloc). It also specifies private include directories and declares it as a WebKit executable for installation.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/testmem/CMakeLists.txt#_snippet_0

LANGUAGE: CMake
CODE:
```
set(testmem_SOURCES ./testmem.cpp)
set(testmem_LIBRARIES ${CMAKE_DL_LIBS})
set(testmem_FRAMEWORKS
    JavaScriptCore
    WTF
)
if (NOT USE_SYSTEM_MALLOC)
    list(APPEND testmem_FRAMEWORKS bmalloc)
endif ()

set(testmem_PRIVATE_INCLUDE_DIRECTORIES
    $<TARGET_PROPERTY:JavaScriptCore,INCLUDE_DIRECTORIES>
)

WEBKIT_EXECUTABLE_DECLARE(testmem)
WEBKIT_INCLUDE_CONFIG_FILES_IF_EXISTS()
WEBKIT_EXECUTABLE(testmem)

install(TARGETS testmem DESTINATION ""${LIBEXEC_INSTALL_DIR}"")
```

----------------------------------------

TITLE: Generate Hash Look-Up Tables (LUTs) for JavaScriptCore
DESCRIPTION: This CMake script iterates through a list of JavaScriptCore source files (`JavaScriptCore_OBJECT_LUT_SOURCES`) and generates corresponding hash look-up table header files (`.lut.h`) in the derived sources directory. It uses the `GENERATE_HASH_LUT` function for this purpose.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_37

LANGUAGE: CMake
CODE:
```
foreach (_file ${JavaScriptCore_OBJECT_LUT_SOURCES})
    get_filename_component(_name ${_file} NAME_WE)
    GENERATE_HASH_LUT(${CMAKE_CURRENT_SOURCE_DIR}/${_file} ${JavaScriptCore_DERIVED_SOURCES_DIR}/${_name}.lut.h)
endforeach ()
```

----------------------------------------

TITLE: FXML Markup for UI Element Injection using fx:id
DESCRIPTION: This FXML snippet demonstrates the use of the fx:id attribute to assign a unique identifier to a UI element, in this case, a Button. This ID allows the associated Java controller to inject and reference the UI element as a field, enabling programmatic manipulation and event handling.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.fxml/src/main/docs/javafx/fxml/doc-files/introduction_to_fxml.html#_snippet_49

LANGUAGE: FXML
CODE:
```
<VBox fx:controller=""com.foo.MyController""
    xmlns:fx=""http://javafx.com/fxml"">
    <children>
        <Button fx:id=""button"" text=""Click Me!""/>
    </children>
</VBox>
```

----------------------------------------

TITLE: Generate Low-Level Interpreter Offsets (Ruby via CMake)
DESCRIPTION: This CMake `COMMAND` executes a Ruby script to generate low-level interpreter offsets. It takes the `LowLevelInterpreter.asm` file as input and produces `LLIntDesiredOffsets.h` along with other build-specific variables. This step is crucial for optimizing the JavaScriptCore engine.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_24

LANGUAGE: CMake
CODE:
```
COMMAND ${RUBY_EXECUTABLE} ${JAVASCRIPTCORE_DIR}/offlineasm/generate_offset_extractor.rb -I${JavaScriptCore_DERIVED_SOURCES_DIR}/ ${JAVASCRIPTCORE_DIR}/llint/LowLevelInterpreter.asm $<TARGET_FILE:LLIntSettingsExtractor> ${JavaScriptCore_DERIVED_SOURCES_DIR}/LLIntDesiredOffsets.h ${OFFLINE_ASM_BACKEND} ${BUILD_VARIANTS}
```

----------------------------------------

TITLE: MediaTime Class Definition and Purpose
DESCRIPTION: Describes the MediaTime class, a rational-number time class designed to accurately manipulate time values in media files, avoiding floating-point errors. It explains its necessity due to common media time representations (e.g., 29.97fps as 30000/1001) and its role in Media Source Extension algorithms for contiguous samples. It also mentions convenience methods for converting to and from floating-point values.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/WebCore/Modules/mediasource/README.md#_snippet_4

LANGUAGE: APIDOC
CODE:
```
Class: MediaTime
  Description: Rational-number time class for manipulating time values in media files.
  Unit: Seconds
  Purpose: Avoids cumulative rounding errors inherent in floating-point representations of media time (e.g., 29.97fps = 30000/1001). Guarantees contiguous samples for Media Source Extension algorithms.
  Methods:
    createTimeWithDouble(): Converts from floating-point values.
    toDouble(): Converts to floating-point values.
  Source Files:
    WTF/wtf/MediaTime.h
    WTF/wtf/MediaTime.cpp
```

----------------------------------------

TITLE: Generate Web Preferences with Custom Command (CMake)
DESCRIPTION: This CMake custom command automates the generation of C++ source and header files from web preference templates and YAML definitions. It uses a Ruby script to process the templates, ensuring that up-to-date preference configurations are available for the build, and marks the output files as generated.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/DumpRenderTree/CMakeLists.txt#_snippet_3

LANGUAGE: CMake
CODE:
```
add_custom_command(
    OUTPUT ${DumpRenderTree_DERIVED_SOURCES_DIR}/TestOptionsGeneratedWebKitLegacyKeyMapping.cpp ${DumpRenderTree_DERIVED_SOURCES_DIR}/TestOptionsGeneratedKeys.h
    DEPENDS ${DumpRenderTree_WEB_PREFERENCES_TEMPLATES} ${DumpRenderTree_WEB_PREFERENCES} WTF_CopyPreferences
    COMMAND ${RUBY_EXECUTABLE} ${WTF_SCRIPTS_DIR}/GeneratePreferences.rb --frontend WebKitLegacy --outputDir ""${DumpRenderTree_DERIVED_SOURCES_DIR}"" --template ${DumpRenderTree_DIR}/Scripts/PreferencesTemplates/TestOptionsGeneratedWebKitLegacyKeyMapping.cpp.erb --template ${DumpRenderTree_DIR}/Scripts/PreferencesTemplates/TestOptionsGeneratedKeys.h.erb ${DumpRenderTree_WEB_PREFERENCES}
    VERBATIM)
```

----------------------------------------

TITLE: Configure DumpRenderTree Build Directories and Paths (CMake)
DESCRIPTION: This CMake snippet defines key directory paths and file locations for the DumpRenderTree component. It sets variables for the main directory, bindings, derived sources, private include directories, and templates for web preferences, ensuring the build system can locate necessary assets.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Tools/DumpRenderTree/CMakeLists.txt#_snippet_0

LANGUAGE: CMake
CODE:
```
set(DumpRenderTree_DIR ""${TOOLS_DIR}/DumpRenderTree"")
set(DumpRenderTree_BINDINGS_DIR ""${TOOLS_DIR}/DumpRenderTree/Bindings"")

file(MAKE_DIRECTORY ${DumpRenderTree_DERIVED_SOURCES_DIR})

set(DumpRenderTree_PRIVATE_INCLUDE_DIRECTORIES
    ${CMAKE_BINARY_DIR}
    ${DumpRenderTree_DERIVED_SOURCES_DIR}
    ${DumpRenderTree_DIR}
)

set(DumpRenderTree_WEB_PREFERENCES_TEMPLATES
    ${DumpRenderTree_DIR}/Scripts/PreferencesTemplates/TestOptionsGeneratedWebKitLegacyKeyMapping.cpp.erb
    ${DumpRenderTree_DIR}/Scripts/PreferencesTemplates/TestOptionsGeneratedKeys.h.erb
)

set(DumpRenderTree_WEB_PREFERENCES
    ${WTF_SCRIPTS_DIR}/Preferences/UnifiedWebPreferences.yaml
)

set_source_files_properties(${DumpRenderTree_WEB_PREFERENCES} PROPERTIES GENERATED TRUE)
```

----------------------------------------

TITLE: Configure LLIntSettingsExtractor Executable (CMake)
DESCRIPTION: This CMake snippet declares and configures the 'LLIntSettingsExtractor' executable. It specifies its source files, private include directories, required frameworks, and build dependencies, ensuring it's properly integrated into the JavaScriptCore build system.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/CMakeLists.txt#_snippet_29

LANGUAGE: CMake
CODE:
```
WEBKIT_EXECUTABLE_DECLARE(LLIntSettingsExtractor)
set(LLIntSettingsExtractor_SOURCES
    ${JAVASCRIPTCORE_DIR}/llint/LLIntSettingsExtractor.cpp
    ${JavaScriptCore_DERIVED_SOURCES_DIR}/LLIntDesiredSettings.h ${JavaScriptCore_DERIVED_SOURCES_DIR}/Bytecodes.h ${JavaScriptCore_DERIVED_SOURCES_DIR}/BytecodeStructs.h
)

set(LLIntSettingsExtractor_PRIVATE_INCLUDE_DIRECTORIES
    $<TARGET_PROPERTY:JavaScriptCore,INCLUDE_DIRECTORIES>
)
set(LLIntSettingsExtractor_FRAMEWORKS ${JavaScriptCore_FRAMEWORKS})
set(LLIntSettingsExtractor_DEPENDENCIES JavaScriptCore_CopyHeaders)
WEBKIT_EXECUTABLE(LLIntSettingsExtractor)
```

----------------------------------------

TITLE: Wancho Unicode Character Ranges
DESCRIPTION: Details the Unicode code point ranges for the Wancho script, covering letters, tones, digits, and a specific currency sign. Each line provides the hexadecimal range, script, character type, and character descriptions.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/Scripts.txt#_snippet_46

LANGUAGE: APIDOC
CODE:
```
1E2C0..1E2EB  ; Wancho # Lo  [44] WANCHO LETTER AA..WANCHO LETTER YIH
1E2EC..1E2EF  ; Wancho # Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI
1E2F0..1E2F9  ; Wancho # Nd  [10] WANCHO DIGIT ZERO..WANCHO DIGIT NINE
1E2FF         ; Wancho # Sc       WANCHO NGUN SIGN

# Total code points: 59
```

----------------------------------------

TITLE: Unicode Script Extensions for Latn Script
DESCRIPTION: Lists Unicode code points associated with the 'Latn' (Latin) script extension property. This section defines combining Latin characters, such as COMBINING LATIN SMALL LETTER A.
SOURCE: https://github.com/openjdk/jfx/blob/master/modules/javafx.web/src/main/native/Source/JavaScriptCore/ucd/ScriptExtensions.txt#_snippet_5

LANGUAGE: Data
CODE:
```
# Script_Extensions=Latn

0363..036F    ; Latn # Mn  [13] COMBINING LATIN SMALL LETTER A..COMBINING LATIN SMALL LETTER X
```","java",""